/*
The MIT License (MIT)

Copyright Â© 2023 MariaDB Corporation

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	mariadbv1alpha1 "github.com/mariadb-operator/mariadb-operator/api/mariadb/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// SqlJobLister helps list SqlJobs.
// All objects returned here must be treated as read-only.
type SqlJobLister interface {
	// List lists all SqlJobs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*mariadbv1alpha1.SqlJob, err error)
	// SqlJobs returns an object that can list and get SqlJobs.
	SqlJobs(namespace string) SqlJobNamespaceLister
	SqlJobListerExpansion
}

// sqlJobLister implements the SqlJobLister interface.
type sqlJobLister struct {
	listers.ResourceIndexer[*mariadbv1alpha1.SqlJob]
}

// NewSqlJobLister returns a new SqlJobLister.
func NewSqlJobLister(indexer cache.Indexer) SqlJobLister {
	return &sqlJobLister{listers.New[*mariadbv1alpha1.SqlJob](indexer, mariadbv1alpha1.Resource("sqljob"))}
}

// SqlJobs returns an object that can list and get SqlJobs.
func (s *sqlJobLister) SqlJobs(namespace string) SqlJobNamespaceLister {
	return sqlJobNamespaceLister{listers.NewNamespaced[*mariadbv1alpha1.SqlJob](s.ResourceIndexer, namespace)}
}

// SqlJobNamespaceLister helps list and get SqlJobs.
// All objects returned here must be treated as read-only.
type SqlJobNamespaceLister interface {
	// List lists all SqlJobs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*mariadbv1alpha1.SqlJob, err error)
	// Get retrieves the SqlJob from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*mariadbv1alpha1.SqlJob, error)
	SqlJobNamespaceListerExpansion
}

// sqlJobNamespaceLister implements the SqlJobNamespaceLister
// interface.
type sqlJobNamespaceLister struct {
	listers.ResourceIndexer[*mariadbv1alpha1.SqlJob]
}
