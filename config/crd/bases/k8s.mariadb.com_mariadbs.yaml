---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: mariadbs.k8s.mariadb.com
spec:
  group: k8s.mariadb.com
  names:
    kind: MariaDB
    listKind: MariaDBList
    plural: mariadbs
    shortNames:
    - mdb
    singular: mariadb
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    - jsonPath: .status.currentPrimary
      name: Primary
      type: string
    - jsonPath: .spec.updateStrategy.type
      name: Updates
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MariaDB is the Schema for the mariadbs API. It is used to define
          MariaDB clusters.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MariaDBSpec defines the desired state of MariaDB
            properties:
              affinity:
                description: Affinity to be used in the Pod.
                properties:
                  antiAffinityEnabled:
                    description: |-
                      AntiAffinityEnabled configures PodAntiAffinity so each Pod is scheduled in a different Node, enabling HA.
                      Make sure you have at least as many Nodes available as the replicas to not end up with unscheduled Pods.
                    type: boolean
                  podAntiAffinity:
                    description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podantiaffinity-v1-core.'
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        items:
                          description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#weightedpodaffinityterm-v1-core'
                          properties:
                            podAffinityTerm:
                              description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core'
                              properties:
                                labelSelector:
                                  description: |-
                                    A label selector is a label query over a set of resources. The result of matchLabels and
                                    matchExpressions are ANDed. An empty label selector matches all objects. A null
                                    label selector matches no objects.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                topologyKey:
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      requiredDuringSchedulingIgnoredDuringExecution:
                        items:
                          description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core'
                          properties:
                            labelSelector:
                              description: |-
                                A label selector is a label query over a set of resources. The result of matchLabels and
                                matchExpressions are ANDed. An empty label selector matches all objects. A null
                                label selector matches no objects.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            topologyKey:
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                type: object
              args:
                description: Args to be used in the Container.
                items:
                  type: string
                type: array
              bootstrapFrom:
                description: BootstrapFrom defines a source to bootstrap from.
                properties:
                  backupRef:
                    description: BackupRef is a reference to a Backup object. It has
                      priority over S3 and Volume.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  restoreJob:
                    description: RestoreJob defines additional properties for the
                      Job used to perform the Restore.
                    properties:
                      affinity:
                        description: Affinity to be used in the Pod.
                        properties:
                          antiAffinityEnabled:
                            description: |-
                              AntiAffinityEnabled configures PodAntiAffinity so each Pod is scheduled in a different Node, enabling HA.
                              Make sure you have at least as many Nodes available as the replicas to not end up with unscheduled Pods.
                            type: boolean
                          podAntiAffinity:
                            description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podantiaffinity-v1-core.'
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                items:
                                  description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#weightedpodaffinityterm-v1-core'
                                  properties:
                                    podAffinityTerm:
                                      description: 'Refer to the Kubernetes docs:
                                        https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core'
                                      properties:
                                        labelSelector:
                                          description: |-
                                            A label selector is a label query over a set of resources. The result of matchLabels and
                                            matchExpressions are ANDed. An empty label selector matches all objects. A null
                                            label selector matches no objects.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        topologyKey:
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    weight:
                                      format: int32
                                      type: integer
                                  required:
                                  - podAffinityTerm
                                  - weight
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              requiredDuringSchedulingIgnoredDuringExecution:
                                items:
                                  description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core'
                                  properties:
                                    labelSelector:
                                      description: |-
                                        A label selector is a label query over a set of resources. The result of matchLabels and
                                        matchExpressions are ANDed. An empty label selector matches all objects. A null
                                        label selector matches no objects.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    topologyKey:
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                        type: object
                      args:
                        description: Args to be used in the Container.
                        items:
                          type: string
                        type: array
                      metadata:
                        description: Metadata defines additional metadata for the
                          bootstrap Jobs.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations to be added to children resources.
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels to be added to children resources.
                            type: object
                        type: object
                      resources:
                        description: Resouces describes the compute resource requirements.
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                    type: object
                  s3:
                    description: S3 defines the configuration to restore backups from
                      a S3 compatible storage. It has priority over Volume.
                    properties:
                      accessKeyIdSecretKeyRef:
                        description: AccessKeyIdSecretKeyRef is a reference to a Secret
                          key containing the S3 access key id.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      bucket:
                        description: Bucket is the name Name of the bucket to store
                          backups.
                        type: string
                      endpoint:
                        description: Endpoint is the S3 API endpoint without scheme.
                        type: string
                      prefix:
                        description: 'Prefix indicates a folder/subfolder in the bucket.
                          For example: mariadb/ or mariadb/backups. A trailing slash
                          ''/'' is added if not provided.'
                        type: string
                      region:
                        description: Region is the S3 region name to use.
                        type: string
                      secretAccessKeySecretKeyRef:
                        description: AccessKeyIdSecretKeyRef is a reference to a Secret
                          key containing the S3 secret key.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      sessionTokenSecretKeyRef:
                        description: SessionTokenSecretKeyRef is a reference to a
                          Secret key containing the S3 session token.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      tls:
                        description: TLS provides the configuration required to establish
                          TLS connections with S3.
                        properties:
                          caSecretKeyRef:
                            description: |-
                              CASecretKeyRef is a reference to a Secret key containing a CA bundle in PEM format used to establish TLS connections with S3.
                              By default, the system trust chain will be used, but you can use this field to add more CAs to the bundle.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          enabled:
                            description: Enabled is a flag to enable TLS.
                            type: boolean
                        type: object
                    required:
                    - accessKeyIdSecretKeyRef
                    - bucket
                    - endpoint
                    - secretAccessKeySecretKeyRef
                    type: object
                  targetRecoveryTime:
                    description: |-
                      TargetRecoveryTime is a RFC3339 (1970-01-01T00:00:00Z) date and time that defines the point in time recovery objective.
                      It is used to determine the closest restoration source in time.
                    format: date-time
                    type: string
                  volume:
                    description: Volume is a Kubernetes Volume object that contains
                      a backup.
                    properties:
                      csi:
                        description: Represents a source location of a volume to mount,
                          managed by an external CSI driver
                        properties:
                          driver:
                            description: |-
                              driver is the name of the CSI driver that handles this volume.
                              Consult with your admin for the correct name as registered in the cluster.
                            type: string
                          fsType:
                            description: |-
                              fsType to mount. Ex. "ext4", "xfs", "ntfs".
                              If not provided, the empty value is passed to the associated CSI driver
                              which will determine the default filesystem to apply.
                            type: string
                          nodePublishSecretRef:
                            description: |-
                              nodePublishSecretRef is a reference to the secret object containing
                              sensitive information to pass to the CSI driver to complete the CSI
                              NodePublishVolume and NodeUnpublishVolume calls.
                              This field is optional, and  may be empty if no secret is required. If the
                              secret object contains more than one secret, all secret references are passed.
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          readOnly:
                            description: |-
                              readOnly specifies a read-only configuration for the volume.
                              Defaults to false (read/write).
                            type: boolean
                          volumeAttributes:
                            additionalProperties:
                              type: string
                            description: |-
                              volumeAttributes stores driver-specific properties that are passed to the CSI
                              driver. Consult your driver's documentation for supported values.
                            type: object
                        required:
                        - driver
                        type: object
                      emptyDir:
                        description: |-
                          Represents an empty directory for a pod.
                          Empty directory volumes support ownership management and SELinux relabeling.
                        properties:
                          medium:
                            description: |-
                              medium represents what type of storage medium should back this directory.
                              The default is "" which means to use the node's default medium.
                              Must be an empty string (default) or Memory.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            type: string
                          sizeLimit:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              sizeLimit is the total amount of local storage required for this EmptyDir volume.
                              The size limit is also applicable for memory medium.
                              The maximum usage on memory medium EmptyDir would be the minimum value between
                              the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                              The default is nil which means that the limit is undefined.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      nfs:
                        description: |-
                          Represents an NFS mount that lasts the lifetime of a pod.
                          NFS volumes do not support ownership management or SELinux relabeling.
                        properties:
                          path:
                            description: |-
                              path that is exported by the NFS server.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                            type: string
                          readOnly:
                            description: |-
                              readOnly here will force the NFS export to be mounted with read-only permissions.
                              Defaults to false.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                            type: boolean
                          server:
                            description: |-
                              server is the hostname or IP address of the NFS server.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                            type: string
                        required:
                        - path
                        - server
                        type: object
                      persistentVolumeClaim:
                        description: |-
                          PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.
                          This volume finds the bound PV and mounts that volume for the pod. A
                          PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another
                          type of volume that is owned by someone else (the system).
                        properties:
                          claimName:
                            description: |-
                              claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                            type: string
                          readOnly:
                            description: |-
                              readOnly Will force the ReadOnly setting in VolumeMounts.
                              Default false.
                            type: boolean
                        required:
                        - claimName
                        type: object
                    type: object
                type: object
              command:
                description: Command to be used in the Container.
                items:
                  type: string
                type: array
              connection:
                description: |-
                  Connection defines a template to configure the general Connection object.
                  This Connection provides the initial User access to the initial Database.
                  It will make use of the Service to route network traffic to all Pods.
                properties:
                  healthCheck:
                    description: HealthCheck to be used in the Connection.
                    properties:
                      interval:
                        description: Interval used to perform health checks.
                        type: string
                      retryInterval:
                        description: RetryInterval is the interval used to perform
                          health check retries.
                        type: string
                    type: object
                  params:
                    additionalProperties:
                      type: string
                    description: Params to be used in the Connection.
                    type: object
                  port:
                    description: Port to connect to. If not provided, it defaults
                      to the MariaDB port or to the first MaxScale listener.
                    format: int32
                    type: integer
                  secretName:
                    description: SecretName to be used in the Connection.
                    type: string
                  secretTemplate:
                    description: SecretTemplate to be used in the Connection.
                    properties:
                      databaseKey:
                        description: DatabaseKey to be used in the Secret.
                        type: string
                      format:
                        description: Format to be used in the Secret.
                        type: string
                      hostKey:
                        description: HostKey to be used in the Secret.
                        type: string
                      key:
                        description: Key to be used in the Secret.
                        type: string
                      metadata:
                        description: Metadata to be added to the Secret object.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations to be added to children resources.
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels to be added to children resources.
                            type: object
                        type: object
                      passwordKey:
                        description: PasswordKey to be used in the Secret.
                        type: string
                      portKey:
                        description: PortKey to be used in the Secret.
                        type: string
                      usernameKey:
                        description: UsernameKey to be used in the Secret.
                        type: string
                    type: object
                  serviceName:
                    description: ServiceName to be used in the Connection.
                    type: string
                type: object
              database:
                description: Database is the name of the initial Database.
                type: string
              env:
                description: Env represents the environment variables to be injected
                  in a container.
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              envFrom:
                description: EnvFrom represents the references (via ConfigMap and
                  Secrets) to environment variables to be injected in the container.
                items:
                  description: EnvFromSource represents the source of a set of ConfigMaps
                  properties:
                    configMapRef:
                      description: The ConfigMap to select from
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the ConfigMap must be defined
                          type: boolean
                      type: object
                      x-kubernetes-map-type: atomic
                    prefix:
                      description: An optional identifier to prepend to each key in
                        the ConfigMap. Must be a C_IDENTIFIER.
                      type: string
                    secretRef:
                      description: The Secret to select from
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret must be defined
                          type: boolean
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                type: array
              galera:
                description: Replication configures high availability via Galera.
                properties:
                  agent:
                    description: GaleraAgent is a sidecar agent that co-operates with
                      mariadb-operator.
                    properties:
                      args:
                        description: Args to be used in the Container.
                        items:
                          type: string
                        type: array
                      basicAuth:
                        description: BasicAuth to be used by the agent container
                        properties:
                          enabled:
                            description: Enabled is a flag to enable BasicAuth
                            type: boolean
                          passwordSecretKeyRef:
                            description: PasswordSecretKeyRef to be used for basic
                              authentication
                            properties:
                              generate:
                                default: false
                                description: Generate indicates whether the Secret
                                  should be generated if the Secret referenced is
                                  not present.
                                type: boolean
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          username:
                            description: Username to be used for basic authentication
                            type: string
                        type: object
                      command:
                        description: Command to be used in the Container.
                        items:
                          type: string
                        type: array
                      env:
                        description: Env represents the environment variables to be
                          injected in a container.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: |-
                                Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in the container and
                                any service environment variables. If a variable cannot be resolved,
                                the reference in the input string will be unchanged. Double $$ are reduced
                                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless of whether the variable
                                exists or not.
                                Defaults to "".
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: |-
                                    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: |-
                                    Selects a resource of the container: only resources limits and requests
                                    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      envFrom:
                        description: EnvFrom represents the references (via ConfigMap
                          and Secrets) to environment variables to be injected in
                          the container.
                        items:
                          description: EnvFromSource represents the source of a set
                            of ConfigMaps
                          properties:
                            configMapRef:
                              description: The ConfigMap to select from
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap must
                                    be defined
                                  type: boolean
                              type: object
                              x-kubernetes-map-type: atomic
                            prefix:
                              description: An optional identifier to prepend to each
                                key in the ConfigMap. Must be a C_IDENTIFIER.
                              type: string
                            secretRef:
                              description: The Secret to select from
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret must be
                                    defined
                                  type: boolean
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        type: array
                      gracefulShutdownTimeout:
                        description: GracefulShutdownTimeout is the time we give to
                          the agent container in order to gracefully terminate in-flight
                          requests.
                        type: string
                      image:
                        description: Image name to be used by the MariaDB instances.
                          The supported format is `<image>:<tag>`.
                        type: string
                      imagePullPolicy:
                        description: ImagePullPolicy is the image pull policy. One
                          of `Always`, `Never` or `IfNotPresent`. If not defined,
                          it defaults to `IfNotPresent`.
                        enum:
                        - Always
                        - Never
                        - IfNotPresent
                        type: string
                      kubernetesAuth:
                        description: KubernetesAuth to be used by the agent container
                        properties:
                          authDelegatorRoleName:
                            description: |-
                              AuthDelegatorRoleName is the name of the ClusterRoleBinding that is associated with the "system:auth-delegator" ClusterRole.
                              It is necessary for creating TokenReview objects in order for the agent to validate the service account token.
                            type: string
                          enabled:
                            description: Enabled is a flag to enable KubernetesAuth
                            type: boolean
                        type: object
                      livenessProbe:
                        description: LivenessProbe to be used in the Container.
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            properties:
                              command:
                                description: |-
                                  Command is the command line to execute inside the container, the working directory for the
                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                  a shell, you need to explicitly call out to that shell.
                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          failureThreshold:
                            description: |-
                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                              Defaults to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies an action involving a GRPC
                              port.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number
                                  must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                default: ""
                                description: |-
                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                  If this is not specified, the default behavior is defined by gRPC.
                                type: string
                            required:
                            - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: |-
                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                  "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: |-
                                        The header field name.
                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  Name or number of the port to access on the container.
                                  Number must be in the range 1 to 65535.
                                  Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: |-
                                  Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: |-
                              Number of seconds after the container has started before liveness probes are initiated.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            format: int32
                            type: integer
                          periodSeconds:
                            description: |-
                              How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: |-
                              Minimum consecutive successes for the probe to be considered successful after having failed.
                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  Number or name of the port to access on the container.
                                  Number must be in the range 1 to 65535.
                                  Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: |-
                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                              The grace period is the duration in seconds after the processes running in the pod are sent
                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                              Set this value longer than the expected cleanup time for your process.
                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                              value overrides the value provided by the pod spec.
                              Value must be non-negative integer. The value zero indicates stop immediately via
                              the kill signal (no opportunity to shut down).
                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: |-
                              Number of seconds after which the probe times out.
                              Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            format: int32
                            type: integer
                        type: object
                      port:
                        description: Port where the agent will be listening for connections.
                        format: int32
                        type: integer
                      readinessProbe:
                        description: ReadinessProbe to be used in the Container.
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            properties:
                              command:
                                description: |-
                                  Command is the command line to execute inside the container, the working directory for the
                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                  a shell, you need to explicitly call out to that shell.
                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          failureThreshold:
                            description: |-
                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                              Defaults to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies an action involving a GRPC
                              port.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number
                                  must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                default: ""
                                description: |-
                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                  If this is not specified, the default behavior is defined by gRPC.
                                type: string
                            required:
                            - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: |-
                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                  "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: |-
                                        The header field name.
                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  Name or number of the port to access on the container.
                                  Number must be in the range 1 to 65535.
                                  Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: |-
                                  Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: |-
                              Number of seconds after the container has started before liveness probes are initiated.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            format: int32
                            type: integer
                          periodSeconds:
                            description: |-
                              How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: |-
                              Minimum consecutive successes for the probe to be considered successful after having failed.
                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  Number or name of the port to access on the container.
                                  Number must be in the range 1 to 65535.
                                  Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: |-
                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                              The grace period is the duration in seconds after the processes running in the pod are sent
                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                              Set this value longer than the expected cleanup time for your process.
                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                              value overrides the value provided by the pod spec.
                              Value must be non-negative integer. The value zero indicates stop immediately via
                              the kill signal (no opportunity to shut down).
                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: |-
                              Number of seconds after which the probe times out.
                              Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            format: int32
                            type: integer
                        type: object
                      resources:
                        description: Resouces describes the compute resource requirements.
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      securityContext:
                        description: SecurityContext holds security configuration
                          that will be applied to a container.
                        properties:
                          allowPrivilegeEscalation:
                            description: |-
                              AllowPrivilegeEscalation controls whether a process can gain more
                              privileges than its parent process. This bool directly controls if
                              the no_new_privs flag will be set on the container process.
                              AllowPrivilegeEscalation is true always when the container is:
                              1) run as Privileged
                              2) has CAP_SYS_ADMIN
                              Note that this field cannot be set when spec.os.name is windows.
                            type: boolean
                          appArmorProfile:
                            description: |-
                              appArmorProfile is the AppArmor options to use by this container. If set, this profile
                              overrides the pod's appArmorProfile.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: |-
                                  localhostProfile indicates a profile loaded on the node that should be used.
                                  The profile must be preconfigured on the node to work.
                                  Must match the loaded name of the profile.
                                  Must be set if and only if type is "Localhost".
                                type: string
                              type:
                                description: |-
                                  type indicates which kind of AppArmor profile will be applied.
                                  Valid options are:
                                    Localhost - a profile pre-loaded on the node.
                                    RuntimeDefault - the container runtime's default profile.
                                    Unconfined - no AppArmor enforcement.
                                type: string
                            required:
                            - type
                            type: object
                          capabilities:
                            description: |-
                              The capabilities to add/drop when running containers.
                              Defaults to the default set of capabilities granted by the container runtime.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          privileged:
                            description: |-
                              Run container in privileged mode.
                              Processes in privileged containers are essentially equivalent to root on the host.
                              Defaults to false.
                              Note that this field cannot be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: |-
                              procMount denotes the type of proc mount to use for the containers.
                              The default value is Default which uses the container runtime defaults for
                              readonly paths and masked paths.
                              This requires the ProcMountType feature flag to be enabled.
                              Note that this field cannot be set when spec.os.name is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: |-
                              Whether this container has a read-only root filesystem.
                              Default is false.
                              Note that this field cannot be set when spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: |-
                              The GID to run the entrypoint of the container process.
                              Uses runtime default if unset.
                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: |-
                              Indicates that the container must run as a non-root user.
                              If true, the Kubelet will validate the image at runtime to ensure that it
                              does not run as UID 0 (root) and fail to start the container if it does.
                              If unset or false, no such validation will be performed.
                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: |-
                              The UID to run the entrypoint of the container process.
                              Defaults to user specified in image metadata if unspecified.
                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: |-
                              The SELinux context to be applied to the container.
                              If unspecified, the container runtime will allocate a random SELinux context for each
                              container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: |-
                              The seccomp options to use by this container. If seccomp options are
                              provided at both the pod & container level, the container options
                              override the pod options.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: |-
                                  localhostProfile indicates a profile defined in a file on the node should be used.
                                  The profile must be preconfigured on the node to work.
                                  Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                  Must be set if type is "Localhost". Must NOT be set for any other type.
                                type: string
                              type:
                                description: |-
                                  type indicates which kind of seccomp profile will be applied.
                                  Valid options are:

                                  Localhost - a profile defined in a file on the node should be used.
                                  RuntimeDefault - the container runtime default profile should be used.
                                  Unconfined - no profile should be applied.
                                type: string
                            required:
                            - type
                            type: object
                          windowsOptions:
                            description: |-
                              The Windows specific settings applied to all containers.
                              If unspecified, the options from the PodSecurityContext will be used.
                              If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is linux.
                            properties:
                              gmsaCredentialSpec:
                                description: |-
                                  GMSACredentialSpec is where the GMSA admission webhook
                                  (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                  GMSA credential spec named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of
                                  the GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: |-
                                  HostProcess determines if a container should be run as a 'Host Process' container.
                                  All of a Pod's containers must have the same effective HostProcess value
                                  (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                  In addition, if HostProcess is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: |-
                                  The UserName in Windows to run the entrypoint of the container process.
                                  Defaults to the user specified in image metadata if unspecified.
                                  May also be set in PodSecurityContext. If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                type: string
                            type: object
                        type: object
                      volumeMounts:
                        description: VolumeMounts to be used in the Container.
                        items:
                          description: VolumeMount describes a mounting of a Volume
                            within a container.
                          properties:
                            mountPath:
                              description: |-
                                Path within the container at which the volume should be mounted.  Must
                                not contain ':'.
                              type: string
                            mountPropagation:
                              description: |-
                                mountPropagation determines how mounts are propagated from the host
                                to container and the other way around.
                                When not set, MountPropagationNone is used.
                                This field is beta in 1.10.
                                When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                (which defaults to None).
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: |-
                                Mounted read-only if true, read-write otherwise (false or unspecified).
                                Defaults to false.
                              type: boolean
                            recursiveReadOnly:
                              description: |-
                                RecursiveReadOnly specifies whether read-only mounts should be handled
                                recursively.

                                If ReadOnly is false, this field has no meaning and must be unspecified.

                                If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                recursively read-only.  If this field is set to IfPossible, the mount is made
                                recursively read-only, if it is supported by the container runtime.  If this
                                field is set to Enabled, the mount is made recursively read-only if it is
                                supported by the container runtime, otherwise the pod will not be started and
                                an error will be generated to indicate the reason.

                                If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                None (or be unspecified, which defaults to None).

                                If this field is not specified, it is treated as an equivalent of Disabled.
                              type: string
                            subPath:
                              description: |-
                                Path within the volume from which the container's volume should be mounted.
                                Defaults to "" (volume's root).
                              type: string
                            subPathExpr:
                              description: |-
                                Expanded path within the volume from which the container's volume should be mounted.
                                Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                Defaults to "" (volume's root).
                                SubPathExpr and SubPath are mutually exclusive.
                              type: string
                          required:
                          - mountPath
                          - name
                          type: object
                        type: array
                    type: object
                  availableWhenDonor:
                    description: AvailableWhenDonor indicates whether a donor node
                      should be responding to queries. It defaults to false.
                    type: boolean
                  config:
                    description: GaleraConfig defines storage options for the Galera
                      configuration files.
                    properties:
                      reuseStorageVolume:
                        description: |-
                          ReuseStorageVolume indicates that storage volume used by MariaDB should be reused to store the Galera configuration files.
                          It defaults to false, which implies that a dedicated volume for the Galera configuration files is provisioned.
                        type: boolean
                      volumeClaimTemplate:
                        description: VolumeClaimTemplate is a template for the PVC
                          that will contain the Galera configuration files shared
                          between the InitContainer, Agent and MariaDB.
                        properties:
                          accessModes:
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          metadata:
                            description: Metadata to be added to the PVC metadata.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations to be added to children resources.
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels to be added to children resources.
                                type: object
                            type: object
                          resources:
                            description: VolumeResourceRequirements describes the
                              storage resource requirements for a volume.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          selector:
                            description: |-
                              A label selector is a label query over a set of resources. The result of matchLabels and
                              matchExpressions are ANDed. An empty label selector matches all objects. A null
                              label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          storageClassName:
                            type: string
                        type: object
                    type: object
                  enabled:
                    description: Enabled is a flag to enable Galera.
                    type: boolean
                  galeraLibPath:
                    description: |-
                      GaleraLibPath is a path inside the MariaDB image to the wsrep provider plugin. It is defaulted if not provided.
                      More info: https://galeracluster.com/library/documentation/mysql-wsrep-options.html#wsrep-provider.
                    type: string
                  initContainer:
                    description: InitContainer is an init container that runs in the
                      MariaDB Pod and co-operates with mariadb-operator.
                    properties:
                      args:
                        description: Args to be used in the Container.
                        items:
                          type: string
                        type: array
                      command:
                        description: Command to be used in the Container.
                        items:
                          type: string
                        type: array
                      env:
                        description: Env represents the environment variables to be
                          injected in a container.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: |-
                                Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in the container and
                                any service environment variables. If a variable cannot be resolved,
                                the reference in the input string will be unchanged. Double $$ are reduced
                                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless of whether the variable
                                exists or not.
                                Defaults to "".
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: |-
                                    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: |-
                                    Selects a resource of the container: only resources limits and requests
                                    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      envFrom:
                        description: EnvFrom represents the references (via ConfigMap
                          and Secrets) to environment variables to be injected in
                          the container.
                        items:
                          description: EnvFromSource represents the source of a set
                            of ConfigMaps
                          properties:
                            configMapRef:
                              description: The ConfigMap to select from
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap must
                                    be defined
                                  type: boolean
                              type: object
                              x-kubernetes-map-type: atomic
                            prefix:
                              description: An optional identifier to prepend to each
                                key in the ConfigMap. Must be a C_IDENTIFIER.
                              type: string
                            secretRef:
                              description: The Secret to select from
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret must be
                                    defined
                                  type: boolean
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        type: array
                      image:
                        description: Image name to be used by the MariaDB instances.
                          The supported format is `<image>:<tag>`.
                        type: string
                      imagePullPolicy:
                        description: ImagePullPolicy is the image pull policy. One
                          of `Always`, `Never` or `IfNotPresent`. If not defined,
                          it defaults to `IfNotPresent`.
                        enum:
                        - Always
                        - Never
                        - IfNotPresent
                        type: string
                      livenessProbe:
                        description: LivenessProbe to be used in the Container.
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            properties:
                              command:
                                description: |-
                                  Command is the command line to execute inside the container, the working directory for the
                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                  a shell, you need to explicitly call out to that shell.
                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          failureThreshold:
                            description: |-
                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                              Defaults to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies an action involving a GRPC
                              port.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number
                                  must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                default: ""
                                description: |-
                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                  If this is not specified, the default behavior is defined by gRPC.
                                type: string
                            required:
                            - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: |-
                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                  "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: |-
                                        The header field name.
                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  Name or number of the port to access on the container.
                                  Number must be in the range 1 to 65535.
                                  Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: |-
                                  Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: |-
                              Number of seconds after the container has started before liveness probes are initiated.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            format: int32
                            type: integer
                          periodSeconds:
                            description: |-
                              How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: |-
                              Minimum consecutive successes for the probe to be considered successful after having failed.
                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  Number or name of the port to access on the container.
                                  Number must be in the range 1 to 65535.
                                  Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: |-
                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                              The grace period is the duration in seconds after the processes running in the pod are sent
                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                              Set this value longer than the expected cleanup time for your process.
                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                              value overrides the value provided by the pod spec.
                              Value must be non-negative integer. The value zero indicates stop immediately via
                              the kill signal (no opportunity to shut down).
                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: |-
                              Number of seconds after which the probe times out.
                              Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            format: int32
                            type: integer
                        type: object
                      readinessProbe:
                        description: ReadinessProbe to be used in the Container.
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            properties:
                              command:
                                description: |-
                                  Command is the command line to execute inside the container, the working directory for the
                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                  a shell, you need to explicitly call out to that shell.
                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          failureThreshold:
                            description: |-
                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                              Defaults to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies an action involving a GRPC
                              port.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number
                                  must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                default: ""
                                description: |-
                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                  If this is not specified, the default behavior is defined by gRPC.
                                type: string
                            required:
                            - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: |-
                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                  "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: |-
                                        The header field name.
                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  Name or number of the port to access on the container.
                                  Number must be in the range 1 to 65535.
                                  Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: |-
                                  Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: |-
                              Number of seconds after the container has started before liveness probes are initiated.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            format: int32
                            type: integer
                          periodSeconds:
                            description: |-
                              How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: |-
                              Minimum consecutive successes for the probe to be considered successful after having failed.
                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  Number or name of the port to access on the container.
                                  Number must be in the range 1 to 65535.
                                  Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: |-
                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                              The grace period is the duration in seconds after the processes running in the pod are sent
                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                              Set this value longer than the expected cleanup time for your process.
                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                              value overrides the value provided by the pod spec.
                              Value must be non-negative integer. The value zero indicates stop immediately via
                              the kill signal (no opportunity to shut down).
                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: |-
                              Number of seconds after which the probe times out.
                              Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            format: int32
                            type: integer
                        type: object
                      resources:
                        description: Resouces describes the compute resource requirements.
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      securityContext:
                        description: SecurityContext holds security configuration
                          that will be applied to a container.
                        properties:
                          allowPrivilegeEscalation:
                            description: |-
                              AllowPrivilegeEscalation controls whether a process can gain more
                              privileges than its parent process. This bool directly controls if
                              the no_new_privs flag will be set on the container process.
                              AllowPrivilegeEscalation is true always when the container is:
                              1) run as Privileged
                              2) has CAP_SYS_ADMIN
                              Note that this field cannot be set when spec.os.name is windows.
                            type: boolean
                          appArmorProfile:
                            description: |-
                              appArmorProfile is the AppArmor options to use by this container. If set, this profile
                              overrides the pod's appArmorProfile.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: |-
                                  localhostProfile indicates a profile loaded on the node that should be used.
                                  The profile must be preconfigured on the node to work.
                                  Must match the loaded name of the profile.
                                  Must be set if and only if type is "Localhost".
                                type: string
                              type:
                                description: |-
                                  type indicates which kind of AppArmor profile will be applied.
                                  Valid options are:
                                    Localhost - a profile pre-loaded on the node.
                                    RuntimeDefault - the container runtime's default profile.
                                    Unconfined - no AppArmor enforcement.
                                type: string
                            required:
                            - type
                            type: object
                          capabilities:
                            description: |-
                              The capabilities to add/drop when running containers.
                              Defaults to the default set of capabilities granted by the container runtime.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              add:
                                description: Added capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              drop:
                                description: Removed capabilities
                                items:
                                  description: Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          privileged:
                            description: |-
                              Run container in privileged mode.
                              Processes in privileged containers are essentially equivalent to root on the host.
                              Defaults to false.
                              Note that this field cannot be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: |-
                              procMount denotes the type of proc mount to use for the containers.
                              The default value is Default which uses the container runtime defaults for
                              readonly paths and masked paths.
                              This requires the ProcMountType feature flag to be enabled.
                              Note that this field cannot be set when spec.os.name is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: |-
                              Whether this container has a read-only root filesystem.
                              Default is false.
                              Note that this field cannot be set when spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: |-
                              The GID to run the entrypoint of the container process.
                              Uses runtime default if unset.
                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: |-
                              Indicates that the container must run as a non-root user.
                              If true, the Kubelet will validate the image at runtime to ensure that it
                              does not run as UID 0 (root) and fail to start the container if it does.
                              If unset or false, no such validation will be performed.
                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: |-
                              The UID to run the entrypoint of the container process.
                              Defaults to user specified in image metadata if unspecified.
                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: |-
                              The SELinux context to be applied to the container.
                              If unspecified, the container runtime will allocate a random SELinux context for each
                              container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: |-
                              The seccomp options to use by this container. If seccomp options are
                              provided at both the pod & container level, the container options
                              override the pod options.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: |-
                                  localhostProfile indicates a profile defined in a file on the node should be used.
                                  The profile must be preconfigured on the node to work.
                                  Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                  Must be set if type is "Localhost". Must NOT be set for any other type.
                                type: string
                              type:
                                description: |-
                                  type indicates which kind of seccomp profile will be applied.
                                  Valid options are:

                                  Localhost - a profile defined in a file on the node should be used.
                                  RuntimeDefault - the container runtime default profile should be used.
                                  Unconfined - no profile should be applied.
                                type: string
                            required:
                            - type
                            type: object
                          windowsOptions:
                            description: |-
                              The Windows specific settings applied to all containers.
                              If unspecified, the options from the PodSecurityContext will be used.
                              If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is linux.
                            properties:
                              gmsaCredentialSpec:
                                description: |-
                                  GMSACredentialSpec is where the GMSA admission webhook
                                  (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                  GMSA credential spec named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of
                                  the GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: |-
                                  HostProcess determines if a container should be run as a 'Host Process' container.
                                  All of a Pod's containers must have the same effective HostProcess value
                                  (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                  In addition, if HostProcess is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: |-
                                  The UserName in Windows to run the entrypoint of the container process.
                                  Defaults to the user specified in image metadata if unspecified.
                                  May also be set in PodSecurityContext. If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                type: string
                            type: object
                        type: object
                      volumeMounts:
                        description: VolumeMounts to be used in the Container.
                        items:
                          description: VolumeMount describes a mounting of a Volume
                            within a container.
                          properties:
                            mountPath:
                              description: |-
                                Path within the container at which the volume should be mounted.  Must
                                not contain ':'.
                              type: string
                            mountPropagation:
                              description: |-
                                mountPropagation determines how mounts are propagated from the host
                                to container and the other way around.
                                When not set, MountPropagationNone is used.
                                This field is beta in 1.10.
                                When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                (which defaults to None).
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: |-
                                Mounted read-only if true, read-write otherwise (false or unspecified).
                                Defaults to false.
                              type: boolean
                            recursiveReadOnly:
                              description: |-
                                RecursiveReadOnly specifies whether read-only mounts should be handled
                                recursively.

                                If ReadOnly is false, this field has no meaning and must be unspecified.

                                If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                recursively read-only.  If this field is set to IfPossible, the mount is made
                                recursively read-only, if it is supported by the container runtime.  If this
                                field is set to Enabled, the mount is made recursively read-only if it is
                                supported by the container runtime, otherwise the pod will not be started and
                                an error will be generated to indicate the reason.

                                If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                None (or be unspecified, which defaults to None).

                                If this field is not specified, it is treated as an equivalent of Disabled.
                              type: string
                            subPath:
                              description: |-
                                Path within the volume from which the container's volume should be mounted.
                                Defaults to "" (volume's root).
                              type: string
                            subPathExpr:
                              description: |-
                                Expanded path within the volume from which the container's volume should be mounted.
                                Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                Defaults to "" (volume's root).
                                SubPathExpr and SubPath are mutually exclusive.
                              type: string
                          required:
                          - mountPath
                          - name
                          type: object
                        type: array
                    required:
                    - image
                    type: object
                  initJob:
                    description: InitJob defines a Job that co-operates with mariadb-operator
                      by performing initialization tasks.
                    properties:
                      metadata:
                        description: Metadata defines additional metadata for the
                          Galera init Job.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations to be added to children resources.
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels to be added to children resources.
                            type: object
                        type: object
                      resources:
                        description: Resouces describes the compute resource requirements.
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                    type: object
                  primary:
                    description: Primary is the Galera configuration for the primary
                      node.
                    properties:
                      automaticFailover:
                        description: AutomaticFailover indicates whether the operator
                          should automatically update PodIndex to perform an automatic
                          primary failover.
                        type: boolean
                      podIndex:
                        description: PodIndex is the StatefulSet index of the primary
                          node. The user may change this field to perform a manual
                          switchover.
                        type: integer
                    type: object
                  providerOptions:
                    additionalProperties:
                      type: string
                    description: |-
                      ProviderOptions is map of Galera configuration parameters.
                      More info: https://mariadb.com/kb/en/galera-cluster-system-variables/#wsrep_provider_options.
                    type: object
                  recovery:
                    description: |-
                      GaleraRecovery is the recovery process performed by the operator whenever the Galera cluster is not healthy.
                      More info: https://galeracluster.com/library/documentation/crash-recovery.html.
                    properties:
                      clusterBootstrapTimeout:
                        description: |-
                          ClusterBootstrapTimeout is the time limit for bootstrapping a cluster.
                          Once this timeout is reached, the Galera recovery state is reset and a new cluster bootstrap will be attempted.
                        type: string
                      clusterHealthyTimeout:
                        description: |-
                          ClusterHealthyTimeout represents the duration at which a Galera cluster, that consistently failed health checks,
                          is considered unhealthy, and consequently the Galera recovery process will be initiated by the operator.
                        type: string
                      clusterMonitorInterval:
                        description: ClusterMonitorInterval represents the interval
                          used to monitor the Galera cluster health.
                        type: string
                      enabled:
                        description: Enabled is a flag to enable GaleraRecovery.
                        type: boolean
                      forceClusterBootstrapInPod:
                        description: |-
                          ForceClusterBootstrapInPod allows you to manually initiate the bootstrap process in a specific Pod.
                          IMPORTANT: Use this option only in exceptional circumstances. Not selecting the Pod with the highest sequence number may result in data loss.
                          IMPORTANT: Ensure you unset this field after completing the bootstrap to allow the operator to choose the appropriate Pod to bootstrap from in an event of cluster recovery.
                        type: string
                      job:
                        description: Job defines a Job that co-operates with mariadb-operator
                          by performing the Galera cluster recovery .
                        properties:
                          metadata:
                            description: Metadata defines additional metadata for
                              the Galera recovery Jobs.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations to be added to children resources.
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels to be added to children resources.
                                type: object
                            type: object
                          podAffinity:
                            description: PodAffinity indicates whether the recovery
                              Jobs should run in the same Node as the MariaDB Pods.
                              It defaults to true.
                            type: boolean
                          resources:
                            description: Resouces describes the compute resource requirements.
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.

                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.

                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                    request:
                                      description: |-
                                        Request is the name chosen for a request in the referenced claim.
                                        If empty, everything from the claim is made available, otherwise
                                        only the result of this request.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                        type: object
                      minClusterSize:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          MinClusterSize is the minimum number of replicas to consider the cluster healthy. It can be either a number of replicas (1) or a percentage (50%).
                          If Galera consistently reports less replicas than this value for the given 'ClusterHealthyTimeout' interval, a cluster recovery is iniated.
                          It defaults to '1' replica.
                        x-kubernetes-int-or-string: true
                      podRecoveryTimeout:
                        description: PodRecoveryTimeout is the time limit for recevorying
                          the sequence of a Pod during the cluster recovery.
                        type: string
                      podSyncTimeout:
                        description: PodSyncTimeout is the time limit for a Pod to
                          join the cluster after having performed a cluster bootstrap
                          during the cluster recovery.
                        type: string
                    type: object
                  replicaThreads:
                    description: |-
                      ReplicaThreads is the number of replica threads used to apply Galera write sets in parallel.
                      More info: https://mariadb.com/kb/en/galera-cluster-system-variables/#wsrep_slave_threads.
                    type: integer
                  sst:
                    description: |-
                      SST is the Snapshot State Transfer used when new Pods join the cluster.
                      More info: https://galeracluster.com/library/documentation/sst.html.
                    enum:
                    - rsync
                    - mariabackup
                    - mysqldump
                    type: string
                type: object
              image:
                description: |-
                  Image name to be used by the MariaDB instances. The supported format is `<image>:<tag>`.
                  Only MariaDB official images are supported.
                type: string
              imagePullPolicy:
                description: ImagePullPolicy is the image pull policy. One of `Always`,
                  `Never` or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
                enum:
                - Always
                - Never
                - IfNotPresent
                type: string
              imagePullSecrets:
                description: ImagePullSecrets is the list of pull Secrets to be used
                  to pull the image.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              inheritMetadata:
                description: InheritMetadata defines the metadata to be inherited
                  by children resources.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations to be added to children resources.
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to be added to children resources.
                    type: object
                type: object
              initContainers:
                description: InitContainers to be used in the Pod.
                items:
                  description: Container object definition.
                  properties:
                    args:
                      description: Args to be used in the Container.
                      items:
                        type: string
                      type: array
                    command:
                      description: Command to be used in the Container.
                      items:
                        type: string
                      type: array
                    env:
                      description: Env represents the environment variables to be
                        injected in a container.
                      items:
                        description: EnvVar represents an environment variable present
                          in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be
                              a C_IDENTIFIER.
                            type: string
                          value:
                            description: |-
                              Variable references $(VAR_NAME) are expanded
                              using the previously defined environment variables in the container and
                              any service environment variables. If a variable cannot be resolved,
                              the reference in the input string will be unchanged. Double $$ are reduced
                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                              Escaped references will never be expanded, regardless of whether the variable
                              exists or not.
                              Defaults to "".
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              fieldRef:
                                description: |-
                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                                x-kubernetes-map-type: atomic
                              resourceFieldRef:
                                description: |-
                                  Selects a resource of the container: only resources limits and requests
                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                                x-kubernetes-map-type: atomic
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    envFrom:
                      description: EnvFrom represents the references (via ConfigMap
                        and Secrets) to environment variables to be injected in the
                        container.
                      items:
                        description: EnvFromSource represents the source of a set
                          of ConfigMaps
                        properties:
                          configMapRef:
                            description: The ConfigMap to select from
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap must be
                                  defined
                                type: boolean
                            type: object
                            x-kubernetes-map-type: atomic
                          prefix:
                            description: An optional identifier to prepend to each
                              key in the ConfigMap. Must be a C_IDENTIFIER.
                            type: string
                          secretRef:
                            description: The Secret to select from
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret must be defined
                                type: boolean
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      type: array
                    image:
                      description: Image name to be used by the MariaDB instances.
                        The supported format is `<image>:<tag>`.
                      type: string
                    imagePullPolicy:
                      description: ImagePullPolicy is the image pull policy. One of
                        `Always`, `Never` or `IfNotPresent`. If not defined, it defaults
                        to `IfNotPresent`.
                      enum:
                      - Always
                      - Never
                      - IfNotPresent
                      type: string
                    livenessProbe:
                      description: LivenessProbe to be used in the Container.
                      properties:
                        exec:
                          description: Exec specifies the action to take.
                          properties:
                            command:
                              description: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        failureThreshold:
                          description: |-
                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                            Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        grpc:
                          description: GRPC specifies an action involving a GRPC port.
                          properties:
                            port:
                              description: Port number of the gRPC service. Number
                                must be in the range 1 to 65535.
                              format: int32
                              type: integer
                            service:
                              default: ""
                              description: |-
                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                If this is not specified, the default behavior is defined by gRPC.
                              type: string
                          required:
                          - port
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Name or number of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: |-
                            Number of seconds after the container has started before liveness probes are initiated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                        periodSeconds:
                          description: |-
                            How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: |-
                            Minimum consecutive successes for the probe to be considered successful after having failed.
                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: TCPSocket specifies an action involving a TCP
                            port.
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: |-
                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                            The grace period is the duration in seconds after the processes running in the pod are sent
                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                            Set this value longer than the expected cleanup time for your process.
                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                            value overrides the value provided by the pod spec.
                            Value must be non-negative integer. The value zero indicates stop immediately via
                            the kill signal (no opportunity to shut down).
                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: |-
                            Number of seconds after which the probe times out.
                            Defaults to 1 second. Minimum value is 1.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                      type: object
                    readinessProbe:
                      description: ReadinessProbe to be used in the Container.
                      properties:
                        exec:
                          description: Exec specifies the action to take.
                          properties:
                            command:
                              description: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        failureThreshold:
                          description: |-
                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                            Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        grpc:
                          description: GRPC specifies an action involving a GRPC port.
                          properties:
                            port:
                              description: Port number of the gRPC service. Number
                                must be in the range 1 to 65535.
                              format: int32
                              type: integer
                            service:
                              default: ""
                              description: |-
                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                If this is not specified, the default behavior is defined by gRPC.
                              type: string
                          required:
                          - port
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Name or number of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: |-
                            Number of seconds after the container has started before liveness probes are initiated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                        periodSeconds:
                          description: |-
                            How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: |-
                            Minimum consecutive successes for the probe to be considered successful after having failed.
                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: TCPSocket specifies an action involving a TCP
                            port.
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: |-
                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                            The grace period is the duration in seconds after the processes running in the pod are sent
                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                            Set this value longer than the expected cleanup time for your process.
                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                            value overrides the value provided by the pod spec.
                            Value must be non-negative integer. The value zero indicates stop immediately via
                            the kill signal (no opportunity to shut down).
                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: |-
                            Number of seconds after which the probe times out.
                            Defaults to 1 second. Minimum value is 1.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                      type: object
                    resources:
                      description: Resouces describes the compute resource requirements.
                      properties:
                        claims:
                          description: |-
                            Claims lists the names of resources, defined in spec.resourceClaims,
                            that are used by this container.

                            This is an alpha field and requires enabling the
                            DynamicResourceAllocation feature gate.

                            This field is immutable. It can only be set for containers.
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: |-
                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                  the Pod where this field is used. It makes that resource available
                                  inside a container.
                                type: string
                              request:
                                description: |-
                                  Request is the name chosen for a request in the referenced claim.
                                  If empty, everything from the claim is made available, otherwise
                                  only the result of this request.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Limits describes the maximum amount of compute resources allowed.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                      type: object
                    securityContext:
                      description: SecurityContext holds security configuration that
                        will be applied to a container.
                      properties:
                        allowPrivilegeEscalation:
                          description: |-
                            AllowPrivilegeEscalation controls whether a process can gain more
                            privileges than its parent process. This bool directly controls if
                            the no_new_privs flag will be set on the container process.
                            AllowPrivilegeEscalation is true always when the container is:
                            1) run as Privileged
                            2) has CAP_SYS_ADMIN
                            Note that this field cannot be set when spec.os.name is windows.
                          type: boolean
                        appArmorProfile:
                          description: |-
                            appArmorProfile is the AppArmor options to use by this container. If set, this profile
                            overrides the pod's appArmorProfile.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            localhostProfile:
                              description: |-
                                localhostProfile indicates a profile loaded on the node that should be used.
                                The profile must be preconfigured on the node to work.
                                Must match the loaded name of the profile.
                                Must be set if and only if type is "Localhost".
                              type: string
                            type:
                              description: |-
                                type indicates which kind of AppArmor profile will be applied.
                                Valid options are:
                                  Localhost - a profile pre-loaded on the node.
                                  RuntimeDefault - the container runtime's default profile.
                                  Unconfined - no AppArmor enforcement.
                              type: string
                          required:
                          - type
                          type: object
                        capabilities:
                          description: |-
                            The capabilities to add/drop when running containers.
                            Defaults to the default set of capabilities granted by the container runtime.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            add:
                              description: Added capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            drop:
                              description: Removed capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        privileged:
                          description: |-
                            Run container in privileged mode.
                            Processes in privileged containers are essentially equivalent to root on the host.
                            Defaults to false.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: boolean
                        procMount:
                          description: |-
                            procMount denotes the type of proc mount to use for the containers.
                            The default value is Default which uses the container runtime defaults for
                            readonly paths and masked paths.
                            This requires the ProcMountType feature flag to be enabled.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: string
                        readOnlyRootFilesystem:
                          description: |-
                            Whether this container has a read-only root filesystem.
                            Default is false.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: boolean
                        runAsGroup:
                          description: |-
                            The GID to run the entrypoint of the container process.
                            Uses runtime default if unset.
                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is windows.
                          format: int64
                          type: integer
                        runAsNonRoot:
                          description: |-
                            Indicates that the container must run as a non-root user.
                            If true, the Kubelet will validate the image at runtime to ensure that it
                            does not run as UID 0 (root) and fail to start the container if it does.
                            If unset or false, no such validation will be performed.
                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                          type: boolean
                        runAsUser:
                          description: |-
                            The UID to run the entrypoint of the container process.
                            Defaults to user specified in image metadata if unspecified.
                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is windows.
                          format: int64
                          type: integer
                        seLinuxOptions:
                          description: |-
                            The SELinux context to be applied to the container.
                            If unspecified, the container runtime will allocate a random SELinux context for each
                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            level:
                              description: Level is SELinux level label that applies
                                to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies
                                to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies
                                to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies
                                to the container.
                              type: string
                          type: object
                        seccompProfile:
                          description: |-
                            The seccomp options to use by this container. If seccomp options are
                            provided at both the pod & container level, the container options
                            override the pod options.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            localhostProfile:
                              description: |-
                                localhostProfile indicates a profile defined in a file on the node should be used.
                                The profile must be preconfigured on the node to work.
                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                Must be set if type is "Localhost". Must NOT be set for any other type.
                              type: string
                            type:
                              description: |-
                                type indicates which kind of seccomp profile will be applied.
                                Valid options are:

                                Localhost - a profile defined in a file on the node should be used.
                                RuntimeDefault - the container runtime default profile should be used.
                                Unconfined - no profile should be applied.
                              type: string
                          required:
                          - type
                          type: object
                        windowsOptions:
                          description: |-
                            The Windows specific settings applied to all containers.
                            If unspecified, the options from the PodSecurityContext will be used.
                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is linux.
                          properties:
                            gmsaCredentialSpec:
                              description: |-
                                GMSACredentialSpec is where the GMSA admission webhook
                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                GMSA credential spec named by the GMSACredentialSpecName field.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the
                                GMSA credential spec to use.
                              type: string
                            hostProcess:
                              description: |-
                                HostProcess determines if a container should be run as a 'Host Process' container.
                                All of a Pod's containers must have the same effective HostProcess value
                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                              type: boolean
                            runAsUserName:
                              description: |-
                                The UserName in Windows to run the entrypoint of the container process.
                                Defaults to the user specified in image metadata if unspecified.
                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: string
                          type: object
                      type: object
                    volumeMounts:
                      description: VolumeMounts to be used in the Container.
                      items:
                        description: VolumeMount describes a mounting of a Volume
                          within a container.
                        properties:
                          mountPath:
                            description: |-
                              Path within the container at which the volume should be mounted.  Must
                              not contain ':'.
                            type: string
                          mountPropagation:
                            description: |-
                              mountPropagation determines how mounts are propagated from the host
                              to container and the other way around.
                              When not set, MountPropagationNone is used.
                              This field is beta in 1.10.
                              When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                              (which defaults to None).
                            type: string
                          name:
                            description: This must match the Name of a Volume.
                            type: string
                          readOnly:
                            description: |-
                              Mounted read-only if true, read-write otherwise (false or unspecified).
                              Defaults to false.
                            type: boolean
                          recursiveReadOnly:
                            description: |-
                              RecursiveReadOnly specifies whether read-only mounts should be handled
                              recursively.

                              If ReadOnly is false, this field has no meaning and must be unspecified.

                              If ReadOnly is true, and this field is set to Disabled, the mount is not made
                              recursively read-only.  If this field is set to IfPossible, the mount is made
                              recursively read-only, if it is supported by the container runtime.  If this
                              field is set to Enabled, the mount is made recursively read-only if it is
                              supported by the container runtime, otherwise the pod will not be started and
                              an error will be generated to indicate the reason.

                              If this field is set to IfPossible or Enabled, MountPropagation must be set to
                              None (or be unspecified, which defaults to None).

                              If this field is not specified, it is treated as an equivalent of Disabled.
                            type: string
                          subPath:
                            description: |-
                              Path within the volume from which the container's volume should be mounted.
                              Defaults to "" (volume's root).
                            type: string
                          subPathExpr:
                            description: |-
                              Expanded path within the volume from which the container's volume should be mounted.
                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                              Defaults to "" (volume's root).
                              SubPathExpr and SubPath are mutually exclusive.
                            type: string
                        required:
                        - mountPath
                        - name
                        type: object
                      type: array
                  required:
                  - image
                  type: object
                type: array
              livenessProbe:
                description: LivenessProbe to be used in the Container.
                properties:
                  exec:
                    description: Exec specifies the action to take.
                    properties:
                      command:
                        description: |-
                          Command is the command line to execute inside the container, the working directory for the
                          command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                          not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                          a shell, you need to explicitly call out to that shell.
                          Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  failureThreshold:
                    description: |-
                      Minimum consecutive failures for the probe to be considered failed after having succeeded.
                      Defaults to 3. Minimum value is 1.
                    format: int32
                    type: integer
                  grpc:
                    description: GRPC specifies an action involving a GRPC port.
                    properties:
                      port:
                        description: Port number of the gRPC service. Number must
                          be in the range 1 to 65535.
                        format: int32
                        type: integer
                      service:
                        default: ""
                        description: |-
                          Service is the name of the service to place in the gRPC HealthCheckRequest
                          (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                          If this is not specified, the default behavior is defined by gRPC.
                        type: string
                    required:
                    - port
                    type: object
                  httpGet:
                    description: HTTPGet specifies the http request to perform.
                    properties:
                      host:
                        description: |-
                          Host name to connect to, defaults to the pod IP. You probably want to set
                          "Host" in httpHeaders instead.
                        type: string
                      httpHeaders:
                        description: Custom headers to set in the request. HTTP allows
                          repeated headers.
                        items:
                          description: HTTPHeader describes a custom header to be
                            used in HTTP probes
                          properties:
                            name:
                              description: |-
                                The header field name.
                                This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              type: string
                            value:
                              description: The header field value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          Name or number of the port to access on the container.
                          Number must be in the range 1 to 65535.
                          Name must be an IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                      scheme:
                        description: |-
                          Scheme to use for connecting to the host.
                          Defaults to HTTP.
                        type: string
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: |-
                      Number of seconds after the container has started before liveness probes are initiated.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    format: int32
                    type: integer
                  periodSeconds:
                    description: |-
                      How often (in seconds) to perform the probe.
                      Default to 10 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  successThreshold:
                    description: |-
                      Minimum consecutive successes for the probe to be considered successful after having failed.
                      Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                    format: int32
                    type: integer
                  tcpSocket:
                    description: TCPSocket specifies an action involving a TCP port.
                    properties:
                      host:
                        description: 'Optional: Host name to connect to, defaults
                          to the pod IP.'
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          Number or name of the port to access on the container.
                          Number must be in the range 1 to 65535.
                          Name must be an IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                    required:
                    - port
                    type: object
                  terminationGracePeriodSeconds:
                    description: |-
                      Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                      The grace period is the duration in seconds after the processes running in the pod are sent
                      a termination signal and the time when the processes are forcibly halted with a kill signal.
                      Set this value longer than the expected cleanup time for your process.
                      If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                      value overrides the value provided by the pod spec.
                      Value must be non-negative integer. The value zero indicates stop immediately via
                      the kill signal (no opportunity to shut down).
                      This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                      Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                    format: int64
                    type: integer
                  timeoutSeconds:
                    description: |-
                      Number of seconds after which the probe times out.
                      Defaults to 1 second. Minimum value is 1.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    format: int32
                    type: integer
                type: object
              maxScale:
                description: |-
                  MaxScale is the MaxScale specification that defines the MaxScale resource to be used with the current MariaDB.
                  When enabling this field, MaxScaleRef is automatically set.
                properties:
                  admin:
                    description: Admin configures the admin REST API and GUI.
                    properties:
                      guiEnabled:
                        description: GuiEnabled indicates whether the admin GUI should
                          be enabled.
                        type: boolean
                      port:
                        description: Port where the admin REST API and GUI will be
                          exposed.
                        format: int32
                        type: integer
                    type: object
                  auth:
                    description: Auth defines the credentials required for MaxScale
                      to connect to MariaDB.
                    properties:
                      adminPasswordSecretKeyRef:
                        description: AdminPasswordSecretKeyRef is Secret key reference
                          to the admin password to call the admin REST API. It is
                          defaulted if not provided.
                        properties:
                          generate:
                            default: false
                            description: Generate indicates whether the Secret should
                              be generated if the Secret referenced is not present.
                            type: boolean
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      adminUsername:
                        description: AdminUsername is an admin username to call the
                          admin REST API. It is defaulted if not provided.
                        type: string
                      clientMaxConnections:
                        description: |-
                          ClientMaxConnections defines the maximum number of connections that the client can establish.
                          If HA is enabled, make sure to increase this value, as more MaxScale replicas implies more connections.
                          It defaults to 30 times the number of MaxScale replicas.
                        format: int32
                        type: integer
                      clientPasswordSecretKeyRef:
                        description: |-
                          ClientPasswordSecretKeyRef is Secret key reference to the password to connect to MaxScale. It is defaulted if not provided.
                          If the referred Secret is labeled with "k8s.mariadb.com/watch", updates may be performed to the Secret in order to update the password.
                        properties:
                          generate:
                            default: false
                            description: Generate indicates whether the Secret should
                              be generated if the Secret referenced is not present.
                            type: boolean
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      clientUsername:
                        description: ClientUsername is the user to connect to MaxScale.
                          It is defaulted if not provided.
                        type: string
                      deleteDefaultAdmin:
                        description: DeleteDefaultAdmin determines whether the default
                          admin user should be deleted after the initial configuration.
                          If not provided, it defaults to true.
                        type: boolean
                      generate:
                        description: |-
                          Generate  defies whether the operator should generate users and grants for MaxScale to work.
                          It only supports MariaDBs specified via spec.mariaDbRef.
                        type: boolean
                      metricsPasswordSecretKeyRef:
                        description: |-
                          MetricsPasswordSecretKeyRef is Secret key reference to the metrics password to call the admib REST API. It is defaulted if metrics are enabled.
                          If the referred Secret is labeled with "k8s.mariadb.com/watch", updates may be performed to the Secret in order to update the password.
                        properties:
                          generate:
                            default: false
                            description: Generate indicates whether the Secret should
                              be generated if the Secret referenced is not present.
                            type: boolean
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      metricsUsername:
                        description: MetricsUsername is an metrics username to call
                          the REST API. It is defaulted if metrics are enabled.
                        type: string
                      monitorMaxConnections:
                        description: |-
                          MonitorMaxConnections defines the maximum number of connections that the monitor can establish.
                          If HA is enabled, make sure to increase this value, as more MaxScale replicas implies more connections.
                          It defaults to 30 times the number of MaxScale replicas.
                        format: int32
                        type: integer
                      monitorPasswordSecretKeyRef:
                        description: |-
                          MonitorPasswordSecretKeyRef is Secret key reference to the password used by MaxScale monitor to connect to MariaDB server. It is defaulted if not provided.
                          If the referred Secret is labeled with "k8s.mariadb.com/watch", updates may be performed to the Secret in order to update the password.
                        properties:
                          generate:
                            default: false
                            description: Generate indicates whether the Secret should
                              be generated if the Secret referenced is not present.
                            type: boolean
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      monitorUsername:
                        description: MonitorUsername is the user used by MaxScale
                          monitor to connect to MariaDB server. It is defaulted if
                          not provided.
                        type: string
                      serverMaxConnections:
                        description: |-
                          ServerMaxConnections defines the maximum number of connections that the server can establish.
                          If HA is enabled, make sure to increase this value, as more MaxScale replicas implies more connections.
                          It defaults to 30 times the number of MaxScale replicas.
                        format: int32
                        type: integer
                      serverPasswordSecretKeyRef:
                        description: |-
                          ServerPasswordSecretKeyRef is Secret key reference to the password used by MaxScale to connect to MariaDB server. It is defaulted if not provided.
                          If the referred Secret is labeled with "k8s.mariadb.com/watch", updates may be performed to the Secret in order to update the password.
                        properties:
                          generate:
                            default: false
                            description: Generate indicates whether the Secret should
                              be generated if the Secret referenced is not present.
                            type: boolean
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      serverUsername:
                        description: ServerUsername is the user used by MaxScale to
                          connect to MariaDB server. It is defaulted if not provided.
                        type: string
                      syncMaxConnections:
                        description: |-
                          SyncMaxConnections defines the maximum number of connections that the sync can establish.
                          If HA is enabled, make sure to increase this value, as more MaxScale replicas implies more connections.
                          It defaults to 30 times the number of MaxScale replicas.
                        format: int32
                        type: integer
                      syncPasswordSecretKeyRef:
                        description: |-
                          SyncPasswordSecretKeyRef is Secret key reference to the password used by MaxScale config to connect to MariaDB server. It is defaulted when HA is enabled.
                          If the referred Secret is labeled with "k8s.mariadb.com/watch", updates may be performed to the Secret in order to update the password.
                        properties:
                          generate:
                            default: false
                            description: Generate indicates whether the Secret should
                              be generated if the Secret referenced is not present.
                            type: boolean
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      syncUsername:
                        description: MonitoSyncUsernamerUsername is the user used
                          by MaxScale config sync to connect to MariaDB server. It
                          is defaulted when HA is enabled.
                        type: string
                    type: object
                  config:
                    description: Config defines the MaxScale configuration.
                    properties:
                      params:
                        additionalProperties:
                          type: string
                        description: |-
                          Params is a key value pair of parameters to be used in the MaxScale static configuration file.
                          Any parameter supported by MaxScale may be specified here. See reference:
                          https://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#global-settings.
                        type: object
                      sync:
                        description: Sync defines how to replicate configuration across
                          MaxScale replicas. It is defaulted when HA is enabled.
                        properties:
                          database:
                            description: Database is the MariaDB logical database
                              where the 'maxscale_config' table will be created in
                              order to persist and synchronize config changes. If
                              not provided, it defaults to 'mysql'.
                            type: string
                          interval:
                            description: Interval defines the config synchronization
                              interval. It is defaulted if not provided.
                            type: string
                          timeout:
                            description: Interval defines the config synchronization
                              timeout. It is defaulted if not provided.
                            type: string
                        type: object
                      volumeClaimTemplate:
                        description: VolumeClaimTemplate provides a template to define
                          the PVCs for storing MaxScale runtime configuration files.
                          It is defaulted if not provided.
                        properties:
                          accessModes:
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          metadata:
                            description: Metadata to be added to the PVC metadata.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations to be added to children resources.
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels to be added to children resources.
                                type: object
                            type: object
                          resources:
                            description: VolumeResourceRequirements describes the
                              storage resource requirements for a volume.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          selector:
                            description: |-
                              A label selector is a label query over a set of resources. The result of matchLabels and
                              matchExpressions are ANDed. An empty label selector matches all objects. A null
                              label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          storageClassName:
                            type: string
                        type: object
                    type: object
                  connection:
                    description: Connection provides a template to define the Connection
                      for MaxScale.
                    properties:
                      healthCheck:
                        description: HealthCheck to be used in the Connection.
                        properties:
                          interval:
                            description: Interval used to perform health checks.
                            type: string
                          retryInterval:
                            description: RetryInterval is the interval used to perform
                              health check retries.
                            type: string
                        type: object
                      params:
                        additionalProperties:
                          type: string
                        description: Params to be used in the Connection.
                        type: object
                      port:
                        description: Port to connect to. If not provided, it defaults
                          to the MariaDB port or to the first MaxScale listener.
                        format: int32
                        type: integer
                      secretName:
                        description: SecretName to be used in the Connection.
                        type: string
                      secretTemplate:
                        description: SecretTemplate to be used in the Connection.
                        properties:
                          databaseKey:
                            description: DatabaseKey to be used in the Secret.
                            type: string
                          format:
                            description: Format to be used in the Secret.
                            type: string
                          hostKey:
                            description: HostKey to be used in the Secret.
                            type: string
                          key:
                            description: Key to be used in the Secret.
                            type: string
                          metadata:
                            description: Metadata to be added to the Secret object.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations to be added to children resources.
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels to be added to children resources.
                                type: object
                            type: object
                          passwordKey:
                            description: PasswordKey to be used in the Secret.
                            type: string
                          portKey:
                            description: PortKey to be used in the Secret.
                            type: string
                          usernameKey:
                            description: UsernameKey to be used in the Secret.
                            type: string
                        type: object
                      serviceName:
                        description: ServiceName to be used in the Connection.
                        type: string
                    type: object
                  enabled:
                    description: Enabled is a flag to enable a MaxScale instance to
                      be used with the current MariaDB.
                    type: boolean
                  guiKubernetesService:
                    description: GuiKubernetesService define a template for a Kubernetes
                      Service object to connect to MaxScale's GUI.
                    properties:
                      allocateLoadBalancerNodePorts:
                        description: AllocateLoadBalancerNodePorts Service field.
                        type: boolean
                      externalTrafficPolicy:
                        description: ExternalTrafficPolicy Service field.
                        type: string
                      loadBalancerIP:
                        description: LoadBalancerIP Service field.
                        type: string
                      loadBalancerSourceRanges:
                        description: LoadBalancerSourceRanges Service field.
                        items:
                          type: string
                        type: array
                      metadata:
                        description: Metadata to be added to the Service metadata.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations to be added to children resources.
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels to be added to children resources.
                            type: object
                        type: object
                      sessionAffinity:
                        description: SessionAffinity Service field.
                        type: string
                      type:
                        default: ClusterIP
                        description: Type is the Service type. One of `ClusterIP`,
                          `NodePort` or `LoadBalancer`. If not defined, it defaults
                          to `ClusterIP`.
                        enum:
                        - ClusterIP
                        - NodePort
                        - LoadBalancer
                        type: string
                    type: object
                  image:
                    description: |-
                      Image name to be used by the MaxScale instances. The supported format is `<image>:<tag>`.
                      Only MariaDB official images are supported.
                    type: string
                  imagePullPolicy:
                    description: ImagePullPolicy is the image pull policy. One of
                      `Always`, `Never` or `IfNotPresent`. If not defined, it defaults
                      to `IfNotPresent`.
                    enum:
                    - Always
                    - Never
                    - IfNotPresent
                    type: string
                  kubernetesService:
                    description: KubernetesService defines a template for a Kubernetes
                      Service object to connect to MaxScale.
                    properties:
                      allocateLoadBalancerNodePorts:
                        description: AllocateLoadBalancerNodePorts Service field.
                        type: boolean
                      externalTrafficPolicy:
                        description: ExternalTrafficPolicy Service field.
                        type: string
                      loadBalancerIP:
                        description: LoadBalancerIP Service field.
                        type: string
                      loadBalancerSourceRanges:
                        description: LoadBalancerSourceRanges Service field.
                        items:
                          type: string
                        type: array
                      metadata:
                        description: Metadata to be added to the Service metadata.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations to be added to children resources.
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels to be added to children resources.
                            type: object
                        type: object
                      sessionAffinity:
                        description: SessionAffinity Service field.
                        type: string
                      type:
                        default: ClusterIP
                        description: Type is the Service type. One of `ClusterIP`,
                          `NodePort` or `LoadBalancer`. If not defined, it defaults
                          to `ClusterIP`.
                        enum:
                        - ClusterIP
                        - NodePort
                        - LoadBalancer
                        type: string
                    type: object
                  metrics:
                    description: Metrics configures metrics and how to scrape them.
                    properties:
                      enabled:
                        description: Enabled is a flag to enable Metrics
                        type: boolean
                      exporter:
                        description: Exporter defines the metrics exporter container.
                        properties:
                          affinity:
                            description: Affinity to be used in the Pod.
                            properties:
                              antiAffinityEnabled:
                                description: |-
                                  AntiAffinityEnabled configures PodAntiAffinity so each Pod is scheduled in a different Node, enabling HA.
                                  Make sure you have at least as many Nodes available as the replicas to not end up with unscheduled Pods.
                                type: boolean
                              podAntiAffinity:
                                description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podantiaffinity-v1-core.'
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    items:
                                      description: 'Refer to the Kubernetes docs:
                                        https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#weightedpodaffinityterm-v1-core'
                                      properties:
                                        podAffinityTerm:
                                          description: 'Refer to the Kubernetes docs:
                                            https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core'
                                          properties:
                                            labelSelector:
                                              description: |-
                                                A label selector is a label query over a set of resources. The result of matchLabels and
                                                matchExpressions are ANDed. An empty label selector matches all objects. A null
                                                label selector matches no objects.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            topologyKey:
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    items:
                                      description: 'Refer to the Kubernetes docs:
                                        https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core'
                                      properties:
                                        labelSelector:
                                          description: |-
                                            A label selector is a label query over a set of resources. The result of matchLabels and
                                            matchExpressions are ANDed. An empty label selector matches all objects. A null
                                            label selector matches no objects.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        topologyKey:
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                            type: object
                          image:
                            description: |-
                              Image name to be used as metrics exporter. The supported format is `<image>:<tag>`.
                              Only mysqld-exporter >= v0.15.0 is supported: https://github.com/prometheus/mysqld_exporter
                            type: string
                          imagePullPolicy:
                            description: ImagePullPolicy is the image pull policy.
                              One of `Always`, `Never` or `IfNotPresent`. If not defined,
                              it defaults to `IfNotPresent`.
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                            type: string
                          imagePullSecrets:
                            description: ImagePullSecrets is the list of pull Secrets
                              to be used to pull the image.
                            items:
                              description: |-
                                LocalObjectReference contains enough information to let you locate the
                                referenced object inside the same namespace.
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                          nodeSelector:
                            additionalProperties:
                              type: string
                            description: NodeSelector to be used in the Pod.
                            type: object
                          podMetadata:
                            description: PodMetadata defines extra metadata for the
                              Pod.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations to be added to children resources.
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels to be added to children resources.
                                type: object
                            type: object
                          podSecurityContext:
                            description: SecurityContext holds pod-level security
                              attributes and common container settings.
                            properties:
                              appArmorProfile:
                                description: |-
                                  appArmorProfile is the AppArmor options to use by the containers in this pod.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile loaded on the node that should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must match the loaded name of the profile.
                                      Must be set if and only if type is "Localhost".
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of AppArmor profile will be applied.
                                      Valid options are:
                                        Localhost - a profile pre-loaded on the node.
                                        RuntimeDefault - the container runtime's default profile.
                                        Unconfined - no AppArmor enforcement.
                                    type: string
                                required:
                                - type
                                type: object
                              fsGroup:
                                description: |-
                                  A special supplemental group that applies to all containers in a pod.
                                  Some volume types allow the Kubelet to change the ownership of that volume
                                  to be owned by the pod:

                                  1. The owning GID will be the FSGroup
                                  2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw----

                                  If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: |-
                                  fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will only apply to
                                  volume types which support fsGroup based ownership(and permissions).
                                  It will have no effect on ephemeral volume types such as: secret, configmaps
                                  and emptydir.
                                  Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              runAsGroup:
                                description: |-
                                  The GID to run the entrypoint of the container process.
                                  Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                  for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: |-
                                  Indicates that the container must run as a non-root user.
                                  If true, the Kubelet will validate the image at runtime to ensure that it
                                  does not run as UID 0 (root) and fail to start the container if it does.
                                  If unset or false, no such validation will be performed.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: |-
                                  The UID to run the entrypoint of the container process.
                                  Defaults to user specified in image metadata if unspecified.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                  for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: |-
                                  The SELinux context to be applied to all containers.
                                  If unspecified, the container runtime will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: |-
                                  The seccomp options to use by the containers in this pod.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile defined in a file on the node should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                      Must be set if type is "Localhost". Must NOT be set for any other type.
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of seccomp profile will be applied.
                                      Valid options are:

                                      Localhost - a profile defined in a file on the node should be used.
                                      RuntimeDefault - the container runtime default profile should be used.
                                      Unconfined - no profile should be applied.
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: |-
                                  A list of groups applied to the first process run in each container, in
                                  addition to the container's primary GID and fsGroup (if specified).  If
                                  the SupplementalGroupsPolicy feature is enabled, the
                                  supplementalGroupsPolicy field determines whether these are in addition
                                  to or instead of any group memberships defined in the container image.
                                  If unspecified, no additional groups are added, though group memberships
                                  defined in the container image may still be used, depending on the
                                  supplementalGroupsPolicy field.
                                  Note that this field cannot be set when spec.os.name is windows.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                                x-kubernetes-list-type: atomic
                              supplementalGroupsPolicy:
                                description: |-
                                  Defines how supplemental groups of the first container processes are calculated.
                                  Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                  (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                  and the container runtime must implement support for this feature.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              sysctls:
                                description: |-
                                  Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                  sysctls (by the container runtime) might fail to launch.
                                  Note that this field cannot be set when spec.os.name is windows.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              windowsOptions:
                                description: |-
                                  The Windows specific settings applied to all containers.
                                  If unspecified, the options within a container's SecurityContext will be used.
                                  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name is linux.
                                properties:
                                  gmsaCredentialSpec:
                                    description: |-
                                      GMSACredentialSpec is where the GMSA admission webhook
                                      (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                      GMSA credential spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: |-
                                      HostProcess determines if a container should be run as a 'Host Process' container.
                                      All of a Pod's containers must have the same effective HostProcess value
                                      (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                      In addition, if HostProcess is true then HostNetwork must also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: |-
                                      The UserName in Windows to run the entrypoint of the container process.
                                      Defaults to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: string
                                type: object
                            type: object
                          port:
                            description: Port where the exporter will be listening
                              for connections.
                            format: int32
                            type: integer
                          priorityClassName:
                            description: PriorityClassName to be used in the Pod.
                            type: string
                          resources:
                            description: Resouces describes the compute resource requirements.
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.

                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.

                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                    request:
                                      description: |-
                                        Request is the name chosen for a request in the referenced claim.
                                        If empty, everything from the claim is made available, otherwise
                                        only the result of this request.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          tolerations:
                            description: Tolerations to be used in the Pod.
                            items:
                              description: |-
                                The pod this Toleration is attached to tolerates any taint that matches
                                the triple <key,value,effect> using the matching operator <operator>.
                              properties:
                                effect:
                                  description: |-
                                    Effect indicates the taint effect to match. Empty means match all taint effects.
                                    When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                  type: string
                                key:
                                  description: |-
                                    Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                  type: string
                                operator:
                                  description: |-
                                    Operator represents a key's relationship to the value.
                                    Valid operators are Exists and Equal. Defaults to Equal.
                                    Exists is equivalent to wildcard for value, so that a pod can
                                    tolerate all taints of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: |-
                                    TolerationSeconds represents the period of time the toleration (which must be
                                    of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                    it is not set, which means tolerate the taint forever (do not evict). Zero and
                                    negative values will be treated as 0 (evict immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: |-
                                    Value is the taint value the toleration matches to.
                                    If the operator is Exists, the value should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                        type: object
                      serviceMonitor:
                        description: ServiceMonitor defines the ServiceMonior object.
                        properties:
                          interval:
                            description: Interval for scraping metrics.
                            type: string
                          jobLabel:
                            description: JobLabel to add to the ServiceMonitor object.
                            type: string
                          prometheusRelease:
                            description: PrometheusRelease is the release label to
                              add to the ServiceMonitor object.
                            type: string
                          scrapeTimeout:
                            description: ScrapeTimeout defines the timeout for scraping
                              metrics.
                            type: string
                        type: object
                    type: object
                  monitor:
                    description: Monitor monitors MariaDB server instances.
                    properties:
                      cooperativeMonitoring:
                        description: CooperativeMonitoring enables coordination between
                          multiple MaxScale instances running monitors. It is defaulted
                          when HA is enabled.
                        enum:
                        - majority_of_all
                        - majority_of_running
                        type: string
                      interval:
                        description: Interval used to monitor MariaDB servers. It
                          is defaulted if not provided.
                        type: string
                      module:
                        description: Module is the module to use to monitor MariaDB
                          servers. It is mandatory when no MariaDB reference is provided.
                        type: string
                      name:
                        description: Name is the identifier of the monitor. It is
                          defaulted if not provided.
                        type: string
                      params:
                        additionalProperties:
                          type: string
                        description: |-
                          Params defines extra parameters to pass to the monitor.
                          Any parameter supported by MaxScale may be specified here. See reference:
                          https://mariadb.com/kb/en/mariadb-maxscale-2308-common-monitor-parameters/.
                          Monitor specific parameter are also suported:
                          https://mariadb.com/kb/en/mariadb-maxscale-2308-galera-monitor/#galera-monitor-optional-parameters.
                          https://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-monitor/#configuration.
                        type: object
                      suspend:
                        default: false
                        description: |-
                          Suspend indicates whether the current resource should be suspended or not.
                          This can be useful for maintenance, as disabling the reconciliation prevents the operator from interfering with user operations during maintenance activities.
                        type: boolean
                    type: object
                  podDisruptionBudget:
                    description: PodDisruptionBudget defines the budget for replica
                      availability.
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: MaxUnavailable defines the number of maximum
                          unavailable Pods.
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: MinAvailable defines the number of minimum available
                          Pods.
                        x-kubernetes-int-or-string: true
                    type: object
                  replicas:
                    description: Replicas indicates the number of desired instances.
                    format: int32
                    type: integer
                  requeueInterval:
                    description: RequeueInterval is used to perform requeue reconciliations.
                    type: string
                  services:
                    description: Services define how the traffic is forwarded to the
                      MariaDB servers.
                    items:
                      description: Services define how the traffic is forwarded to
                        the MariaDB servers.
                      properties:
                        listener:
                          description: MaxScaleListener defines how the MaxScale server
                            will listen for connections.
                          properties:
                            name:
                              description: Name is the identifier of the listener.
                                It is defaulted if not provided
                              type: string
                            params:
                              additionalProperties:
                                type: string
                              description: |-
                                Params defines extra parameters to pass to the listener.
                                Any parameter supported by MaxScale may be specified here. See reference:
                                https://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#listener_1.
                              type: object
                            port:
                              description: Port is the network port where the MaxScale
                                server will listen.
                              format: int32
                              type: integer
                            protocol:
                              description: Protocol is the MaxScale protocol to use
                                when communicating with the client. If not provided,
                                it defaults to MariaDBProtocol.
                              type: string
                            suspend:
                              default: false
                              description: |-
                                Suspend indicates whether the current resource should be suspended or not.
                                This can be useful for maintenance, as disabling the reconciliation prevents the operator from interfering with user operations during maintenance activities.
                              type: boolean
                          required:
                          - port
                          type: object
                        name:
                          description: Name is the identifier of the MaxScale service.
                          type: string
                        params:
                          additionalProperties:
                            type: string
                          description: |-
                            Params defines extra parameters to pass to the service.
                            Any parameter supported by MaxScale may be specified here. See reference:
                            https://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#service_1.
                            Router specific parameter are also suported:
                            https://mariadb.com/kb/en/mariadb-maxscale-2308-readwritesplit/#configuration.
                            https://mariadb.com/kb/en/mariadb-maxscale-2308-readconnroute/#configuration.
                          type: object
                        router:
                          description: Router is the type of router to use.
                          enum:
                          - readwritesplit
                          - readconnroute
                          type: string
                        suspend:
                          default: false
                          description: |-
                            Suspend indicates whether the current resource should be suspended or not.
                            This can be useful for maintenance, as disabling the reconciliation prevents the operator from interfering with user operations during maintenance activities.
                          type: boolean
                      required:
                      - listener
                      - name
                      - router
                      type: object
                    type: array
                  updateStrategy:
                    description: UpdateStrategy defines the update strategy for the
                      StatefulSet object.
                    properties:
                      rollingUpdate:
                        description: RollingUpdate is used to communicate parameters
                          when Type is RollingUpdateStatefulSetStrategyType.
                        properties:
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              The maximum number of pods that can be unavailable during the update.
                              Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                              Absolute number is calculated from percentage by rounding up. This can not be 0.
                              Defaults to 1. This field is alpha-level and is only honored by servers that enable the
                              MaxUnavailableStatefulSet feature. The field applies to all pods in the range 0 to
                              Replicas-1. That means if there is any unavailable pod in the range 0 to Replicas-1, it
                              will be counted towards MaxUnavailable.
                            x-kubernetes-int-or-string: true
                          partition:
                            description: |-
                              Partition indicates the ordinal at which the StatefulSet should be partitioned
                              for updates. During a rolling update, all pods from ordinal Replicas-1 to
                              Partition are updated. All pods from ordinal Partition-1 to 0 remain untouched.
                              This is helpful in being able to do a canary based deployment. The default value is 0.
                            format: int32
                            type: integer
                        type: object
                      type:
                        description: |-
                          Type indicates the type of the StatefulSetUpdateStrategy.
                          Default is RollingUpdate.
                        type: string
                    type: object
                type: object
              maxScaleRef:
                description: |-
                  MaxScaleRef is a reference to a MaxScale resource to be used with the current MariaDB.
                  Providing this field implies delegating high availability tasks such as primary failover to MaxScale.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              metrics:
                description: Metrics configures metrics and how to scrape them.
                properties:
                  enabled:
                    description: Enabled is a flag to enable Metrics
                    type: boolean
                  exporter:
                    description: Exporter defines the metrics exporter container.
                    properties:
                      affinity:
                        description: Affinity to be used in the Pod.
                        properties:
                          antiAffinityEnabled:
                            description: |-
                              AntiAffinityEnabled configures PodAntiAffinity so each Pod is scheduled in a different Node, enabling HA.
                              Make sure you have at least as many Nodes available as the replicas to not end up with unscheduled Pods.
                            type: boolean
                          podAntiAffinity:
                            description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podantiaffinity-v1-core.'
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                items:
                                  description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#weightedpodaffinityterm-v1-core'
                                  properties:
                                    podAffinityTerm:
                                      description: 'Refer to the Kubernetes docs:
                                        https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core'
                                      properties:
                                        labelSelector:
                                          description: |-
                                            A label selector is a label query over a set of resources. The result of matchLabels and
                                            matchExpressions are ANDed. An empty label selector matches all objects. A null
                                            label selector matches no objects.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        topologyKey:
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    weight:
                                      format: int32
                                      type: integer
                                  required:
                                  - podAffinityTerm
                                  - weight
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              requiredDuringSchedulingIgnoredDuringExecution:
                                items:
                                  description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core'
                                  properties:
                                    labelSelector:
                                      description: |-
                                        A label selector is a label query over a set of resources. The result of matchLabels and
                                        matchExpressions are ANDed. An empty label selector matches all objects. A null
                                        label selector matches no objects.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    topologyKey:
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                        type: object
                      image:
                        description: |-
                          Image name to be used as metrics exporter. The supported format is `<image>:<tag>`.
                          Only mysqld-exporter >= v0.15.0 is supported: https://github.com/prometheus/mysqld_exporter
                        type: string
                      imagePullPolicy:
                        description: ImagePullPolicy is the image pull policy. One
                          of `Always`, `Never` or `IfNotPresent`. If not defined,
                          it defaults to `IfNotPresent`.
                        enum:
                        - Always
                        - Never
                        - IfNotPresent
                        type: string
                      imagePullSecrets:
                        description: ImagePullSecrets is the list of pull Secrets
                          to be used to pull the image.
                        items:
                          description: |-
                            LocalObjectReference contains enough information to let you locate the
                            referenced object inside the same namespace.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: NodeSelector to be used in the Pod.
                        type: object
                      podMetadata:
                        description: PodMetadata defines extra metadata for the Pod.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations to be added to children resources.
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels to be added to children resources.
                            type: object
                        type: object
                      podSecurityContext:
                        description: SecurityContext holds pod-level security attributes
                          and common container settings.
                        properties:
                          appArmorProfile:
                            description: |-
                              appArmorProfile is the AppArmor options to use by the containers in this pod.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: |-
                                  localhostProfile indicates a profile loaded on the node that should be used.
                                  The profile must be preconfigured on the node to work.
                                  Must match the loaded name of the profile.
                                  Must be set if and only if type is "Localhost".
                                type: string
                              type:
                                description: |-
                                  type indicates which kind of AppArmor profile will be applied.
                                  Valid options are:
                                    Localhost - a profile pre-loaded on the node.
                                    RuntimeDefault - the container runtime's default profile.
                                    Unconfined - no AppArmor enforcement.
                                type: string
                            required:
                            - type
                            type: object
                          fsGroup:
                            description: |-
                              A special supplemental group that applies to all containers in a pod.
                              Some volume types allow the Kubelet to change the ownership of that volume
                              to be owned by the pod:

                              1. The owning GID will be the FSGroup
                              2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                              3. The permission bits are OR'd with rw-rw----

                              If unset, the Kubelet will not modify the ownership and permissions of any volume.
                              Note that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          fsGroupChangePolicy:
                            description: |-
                              fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                              before being exposed inside Pod. This field will only apply to
                              volume types which support fsGroup based ownership(and permissions).
                              It will have no effect on ephemeral volume types such as: secret, configmaps
                              and emptydir.
                              Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                              Note that this field cannot be set when spec.os.name is windows.
                            type: string
                          runAsGroup:
                            description: |-
                              The GID to run the entrypoint of the container process.
                              Uses runtime default if unset.
                              May also be set in SecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence
                              for that container.
                              Note that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          runAsNonRoot:
                            description: |-
                              Indicates that the container must run as a non-root user.
                              If true, the Kubelet will validate the image at runtime to ensure that it
                              does not run as UID 0 (root) and fail to start the container if it does.
                              If unset or false, no such validation will be performed.
                              May also be set in SecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: |-
                              The UID to run the entrypoint of the container process.
                              Defaults to user specified in image metadata if unspecified.
                              May also be set in SecurityContext.  If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext takes precedence
                              for that container.
                              Note that this field cannot be set when spec.os.name is windows.
                            format: int64
                            type: integer
                          seLinuxOptions:
                            description: |-
                              The SELinux context to be applied to all containers.
                              If unspecified, the container runtime will allocate a random SELinux context for each
                              container.  May also be set in SecurityContext.  If set in
                              both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                              takes precedence for that container.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              level:
                                description: Level is SELinux level label that applies
                                  to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies
                                  to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies
                                  to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies
                                  to the container.
                                type: string
                            type: object
                          seccompProfile:
                            description: |-
                              The seccomp options to use by the containers in this pod.
                              Note that this field cannot be set when spec.os.name is windows.
                            properties:
                              localhostProfile:
                                description: |-
                                  localhostProfile indicates a profile defined in a file on the node should be used.
                                  The profile must be preconfigured on the node to work.
                                  Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                  Must be set if type is "Localhost". Must NOT be set for any other type.
                                type: string
                              type:
                                description: |-
                                  type indicates which kind of seccomp profile will be applied.
                                  Valid options are:

                                  Localhost - a profile defined in a file on the node should be used.
                                  RuntimeDefault - the container runtime default profile should be used.
                                  Unconfined - no profile should be applied.
                                type: string
                            required:
                            - type
                            type: object
                          supplementalGroups:
                            description: |-
                              A list of groups applied to the first process run in each container, in
                              addition to the container's primary GID and fsGroup (if specified).  If
                              the SupplementalGroupsPolicy feature is enabled, the
                              supplementalGroupsPolicy field determines whether these are in addition
                              to or instead of any group memberships defined in the container image.
                              If unspecified, no additional groups are added, though group memberships
                              defined in the container image may still be used, depending on the
                              supplementalGroupsPolicy field.
                              Note that this field cannot be set when spec.os.name is windows.
                            items:
                              format: int64
                              type: integer
                            type: array
                            x-kubernetes-list-type: atomic
                          supplementalGroupsPolicy:
                            description: |-
                              Defines how supplemental groups of the first container processes are calculated.
                              Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                              (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                              and the container runtime must implement support for this feature.
                              Note that this field cannot be set when spec.os.name is windows.
                            type: string
                          sysctls:
                            description: |-
                              Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                              sysctls (by the container runtime) might fail to launch.
                              Note that this field cannot be set when spec.os.name is windows.
                            items:
                              description: Sysctl defines a kernel parameter to be
                                set
                              properties:
                                name:
                                  description: Name of a property to set
                                  type: string
                                value:
                                  description: Value of a property to set
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          windowsOptions:
                            description: |-
                              The Windows specific settings applied to all containers.
                              If unspecified, the options within a container's SecurityContext will be used.
                              If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              Note that this field cannot be set when spec.os.name is linux.
                            properties:
                              gmsaCredentialSpec:
                                description: |-
                                  GMSACredentialSpec is where the GMSA admission webhook
                                  (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                  GMSA credential spec named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of
                                  the GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: |-
                                  HostProcess determines if a container should be run as a 'Host Process' container.
                                  All of a Pod's containers must have the same effective HostProcess value
                                  (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                  In addition, if HostProcess is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: |-
                                  The UserName in Windows to run the entrypoint of the container process.
                                  Defaults to the user specified in image metadata if unspecified.
                                  May also be set in PodSecurityContext. If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                type: string
                            type: object
                        type: object
                      port:
                        description: Port where the exporter will be listening for
                          connections.
                        format: int32
                        type: integer
                      priorityClassName:
                        description: PriorityClassName to be used in the Pod.
                        type: string
                      resources:
                        description: Resouces describes the compute resource requirements.
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      tolerations:
                        description: Tolerations to be used in the Pod.
                        items:
                          description: |-
                            The pod this Toleration is attached to tolerates any taint that matches
                            the triple <key,value,effect> using the matching operator <operator>.
                          properties:
                            effect:
                              description: |-
                                Effect indicates the taint effect to match. Empty means match all taint effects.
                                When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                              type: string
                            key:
                              description: |-
                                Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                              type: string
                            operator:
                              description: |-
                                Operator represents a key's relationship to the value.
                                Valid operators are Exists and Equal. Defaults to Equal.
                                Exists is equivalent to wildcard for value, so that a pod can
                                tolerate all taints of a particular category.
                              type: string
                            tolerationSeconds:
                              description: |-
                                TolerationSeconds represents the period of time the toleration (which must be
                                of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                it is not set, which means tolerate the taint forever (do not evict). Zero and
                                negative values will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: |-
                                Value is the taint value the toleration matches to.
                                If the operator is Exists, the value should be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  passwordSecretKeyRef:
                    description: |-
                      PasswordSecretKeyRef is a reference to the password of the monitoring user used by the exporter.
                      If the referred Secret is labeled with "k8s.mariadb.com/watch", updates may be performed to the Secret in order to update the password.
                    properties:
                      generate:
                        default: false
                        description: Generate indicates whether the Secret should
                          be generated if the Secret referenced is not present.
                        type: boolean
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  serviceMonitor:
                    description: ServiceMonitor defines the ServiceMonior object.
                    properties:
                      interval:
                        description: Interval for scraping metrics.
                        type: string
                      jobLabel:
                        description: JobLabel to add to the ServiceMonitor object.
                        type: string
                      prometheusRelease:
                        description: PrometheusRelease is the release label to add
                          to the ServiceMonitor object.
                        type: string
                      scrapeTimeout:
                        description: ScrapeTimeout defines the timeout for scraping
                          metrics.
                        type: string
                    type: object
                  username:
                    description: Username is the username of the monitoring user used
                      by the exporter.
                    type: string
                type: object
              myCnf:
                description: |-
                  MyCnf allows to specify the my.cnf file mounted by Mariadb.
                  Updating this field will trigger an update to the Mariadb resource.
                type: string
              myCnfConfigMapKeyRef:
                description: |-
                  MyCnfConfigMapKeyRef is a reference to the my.cnf config file provided via a ConfigMap.
                  If not provided, it will be defaulted with a reference to a ConfigMap containing the MyCnf field.
                  If the referred ConfigMap is labeled with "k8s.mariadb.com/watch", an update to the Mariadb resource will be triggered when the ConfigMap is updated.
                properties:
                  key:
                    description: The key to select.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the ConfigMap or its key must be
                      defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector to be used in the Pod.
                type: object
              passwordHashSecretKeyRef:
                description: |-
                  PasswordHashSecretKeyRef is a reference to the password hash to be used by the initial User.
                  If the referred Secret is labeled with "k8s.mariadb.com/watch", updates may be performed to the Secret in order to update the password hash.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              passwordPlugin:
                description: PasswordPlugin is a reference to the password plugin
                  and arguments to be used by the initial User.
                properties:
                  pluginArgSecretKeyRef:
                    description: |-
                      PluginArgSecretKeyRef is a reference to the arguments to be provided to the authentication plugin for the User.
                      If the referred Secret is labeled with "k8s.mariadb.com/watch", updates may be performed to the Secret in order to update the authentication plugin arguments.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  pluginNameSecretKeyRef:
                    description: |-
                      PluginNameSecretKeyRef is a reference to the authentication plugin to be used by the User.
                      If the referred Secret is labeled with "k8s.mariadb.com/watch", updates may be performed to the Secret in order to update the authentication plugin.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              passwordSecretKeyRef:
                description: |-
                  PasswordSecretKeyRef is a reference to a Secret that contains the password to be used by the initial User.
                  If the referred Secret is labeled with "k8s.mariadb.com/watch", updates may be performed to the Secret in order to update the password.
                properties:
                  generate:
                    default: false
                    description: Generate indicates whether the Secret should be generated
                      if the Secret referenced is not present.
                    type: boolean
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              podDisruptionBudget:
                description: PodDisruptionBudget defines the budget for replica availability.
                properties:
                  maxUnavailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: MaxUnavailable defines the number of maximum unavailable
                      Pods.
                    x-kubernetes-int-or-string: true
                  minAvailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: MinAvailable defines the number of minimum available
                      Pods.
                    x-kubernetes-int-or-string: true
                type: object
              podMetadata:
                description: PodMetadata defines extra metadata for the Pod.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations to be added to children resources.
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to be added to children resources.
                    type: object
                type: object
              podSecurityContext:
                description: SecurityContext holds pod-level security attributes and
                  common container settings.
                properties:
                  appArmorProfile:
                    description: |-
                      appArmorProfile is the AppArmor options to use by the containers in this pod.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: |-
                          localhostProfile indicates a profile loaded on the node that should be used.
                          The profile must be preconfigured on the node to work.
                          Must match the loaded name of the profile.
                          Must be set if and only if type is "Localhost".
                        type: string
                      type:
                        description: |-
                          type indicates which kind of AppArmor profile will be applied.
                          Valid options are:
                            Localhost - a profile pre-loaded on the node.
                            RuntimeDefault - the container runtime's default profile.
                            Unconfined - no AppArmor enforcement.
                        type: string
                    required:
                    - type
                    type: object
                  fsGroup:
                    description: |-
                      A special supplemental group that applies to all containers in a pod.
                      Some volume types allow the Kubelet to change the ownership of that volume
                      to be owned by the pod:

                      1. The owning GID will be the FSGroup
                      2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                      3. The permission bits are OR'd with rw-rw----

                      If unset, the Kubelet will not modify the ownership and permissions of any volume.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  fsGroupChangePolicy:
                    description: |-
                      fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                      before being exposed inside Pod. This field will only apply to
                      volume types which support fsGroup based ownership(and permissions).
                      It will have no effect on ephemeral volume types such as: secret, configmaps
                      and emptydir.
                      Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                      Note that this field cannot be set when spec.os.name is windows.
                    type: string
                  runAsGroup:
                    description: |-
                      The GID to run the entrypoint of the container process.
                      Uses runtime default if unset.
                      May also be set in SecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence
                      for that container.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsNonRoot:
                    description: |-
                      Indicates that the container must run as a non-root user.
                      If true, the Kubelet will validate the image at runtime to ensure that it
                      does not run as UID 0 (root) and fail to start the container if it does.
                      If unset or false, no such validation will be performed.
                      May also be set in SecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                    type: boolean
                  runAsUser:
                    description: |-
                      The UID to run the entrypoint of the container process.
                      Defaults to user specified in image metadata if unspecified.
                      May also be set in SecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence
                      for that container.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  seLinuxOptions:
                    description: |-
                      The SELinux context to be applied to all containers.
                      If unspecified, the container runtime will allocate a random SELinux context for each
                      container.  May also be set in SecurityContext.  If set in
                      both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                      takes precedence for that container.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      level:
                        description: Level is SELinux level label that applies to
                          the container.
                        type: string
                      role:
                        description: Role is a SELinux role label that applies to
                          the container.
                        type: string
                      type:
                        description: Type is a SELinux type label that applies to
                          the container.
                        type: string
                      user:
                        description: User is a SELinux user label that applies to
                          the container.
                        type: string
                    type: object
                  seccompProfile:
                    description: |-
                      The seccomp options to use by the containers in this pod.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: |-
                          localhostProfile indicates a profile defined in a file on the node should be used.
                          The profile must be preconfigured on the node to work.
                          Must be a descending path, relative to the kubelet's configured seccomp profile location.
                          Must be set if type is "Localhost". Must NOT be set for any other type.
                        type: string
                      type:
                        description: |-
                          type indicates which kind of seccomp profile will be applied.
                          Valid options are:

                          Localhost - a profile defined in a file on the node should be used.
                          RuntimeDefault - the container runtime default profile should be used.
                          Unconfined - no profile should be applied.
                        type: string
                    required:
                    - type
                    type: object
                  supplementalGroups:
                    description: |-
                      A list of groups applied to the first process run in each container, in
                      addition to the container's primary GID and fsGroup (if specified).  If
                      the SupplementalGroupsPolicy feature is enabled, the
                      supplementalGroupsPolicy field determines whether these are in addition
                      to or instead of any group memberships defined in the container image.
                      If unspecified, no additional groups are added, though group memberships
                      defined in the container image may still be used, depending on the
                      supplementalGroupsPolicy field.
                      Note that this field cannot be set when spec.os.name is windows.
                    items:
                      format: int64
                      type: integer
                    type: array
                    x-kubernetes-list-type: atomic
                  supplementalGroupsPolicy:
                    description: |-
                      Defines how supplemental groups of the first container processes are calculated.
                      Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                      (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                      and the container runtime must implement support for this feature.
                      Note that this field cannot be set when spec.os.name is windows.
                    type: string
                  sysctls:
                    description: |-
                      Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                      sysctls (by the container runtime) might fail to launch.
                      Note that this field cannot be set when spec.os.name is windows.
                    items:
                      description: Sysctl defines a kernel parameter to be set
                      properties:
                        name:
                          description: Name of a property to set
                          type: string
                        value:
                          description: Value of a property to set
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  windowsOptions:
                    description: |-
                      The Windows specific settings applied to all containers.
                      If unspecified, the options within a container's SecurityContext will be used.
                      If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                      Note that this field cannot be set when spec.os.name is linux.
                    properties:
                      gmsaCredentialSpec:
                        description: |-
                          GMSACredentialSpec is where the GMSA admission webhook
                          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                          GMSA credential spec named by the GMSACredentialSpecName field.
                        type: string
                      gmsaCredentialSpecName:
                        description: GMSACredentialSpecName is the name of the GMSA
                          credential spec to use.
                        type: string
                      hostProcess:
                        description: |-
                          HostProcess determines if a container should be run as a 'Host Process' container.
                          All of a Pod's containers must have the same effective HostProcess value
                          (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                          In addition, if HostProcess is true then HostNetwork must also be set to true.
                        type: boolean
                      runAsUserName:
                        description: |-
                          The UserName in Windows to run the entrypoint of the container process.
                          Defaults to the user specified in image metadata if unspecified.
                          May also be set in PodSecurityContext. If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                        type: string
                    type: object
                type: object
              port:
                default: 3306
                description: Port where the instances will be listening for connections.
                format: int32
                type: integer
              primaryConnection:
                description: |-
                  PrimaryConnection defines a template to configure the primary Connection object.
                  This Connection provides the initial User access to the initial Database.
                  It will make use of the PrimaryService to route network traffic to the primary Pod.
                properties:
                  healthCheck:
                    description: HealthCheck to be used in the Connection.
                    properties:
                      interval:
                        description: Interval used to perform health checks.
                        type: string
                      retryInterval:
                        description: RetryInterval is the interval used to perform
                          health check retries.
                        type: string
                    type: object
                  params:
                    additionalProperties:
                      type: string
                    description: Params to be used in the Connection.
                    type: object
                  port:
                    description: Port to connect to. If not provided, it defaults
                      to the MariaDB port or to the first MaxScale listener.
                    format: int32
                    type: integer
                  secretName:
                    description: SecretName to be used in the Connection.
                    type: string
                  secretTemplate:
                    description: SecretTemplate to be used in the Connection.
                    properties:
                      databaseKey:
                        description: DatabaseKey to be used in the Secret.
                        type: string
                      format:
                        description: Format to be used in the Secret.
                        type: string
                      hostKey:
                        description: HostKey to be used in the Secret.
                        type: string
                      key:
                        description: Key to be used in the Secret.
                        type: string
                      metadata:
                        description: Metadata to be added to the Secret object.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations to be added to children resources.
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels to be added to children resources.
                            type: object
                        type: object
                      passwordKey:
                        description: PasswordKey to be used in the Secret.
                        type: string
                      portKey:
                        description: PortKey to be used in the Secret.
                        type: string
                      usernameKey:
                        description: UsernameKey to be used in the Secret.
                        type: string
                    type: object
                  serviceName:
                    description: ServiceName to be used in the Connection.
                    type: string
                type: object
              primaryService:
                description: |-
                  PrimaryService defines a template to configure the primary Service object.
                  The network traffic of this Service will be routed to the primary Pod.
                properties:
                  allocateLoadBalancerNodePorts:
                    description: AllocateLoadBalancerNodePorts Service field.
                    type: boolean
                  externalTrafficPolicy:
                    description: ExternalTrafficPolicy Service field.
                    type: string
                  loadBalancerIP:
                    description: LoadBalancerIP Service field.
                    type: string
                  loadBalancerSourceRanges:
                    description: LoadBalancerSourceRanges Service field.
                    items:
                      type: string
                    type: array
                  metadata:
                    description: Metadata to be added to the Service metadata.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to be added to children resources.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to be added to children resources.
                        type: object
                    type: object
                  sessionAffinity:
                    description: SessionAffinity Service field.
                    type: string
                  type:
                    default: ClusterIP
                    description: Type is the Service type. One of `ClusterIP`, `NodePort`
                      or `LoadBalancer`. If not defined, it defaults to `ClusterIP`.
                    enum:
                    - ClusterIP
                    - NodePort
                    - LoadBalancer
                    type: string
                type: object
              priorityClassName:
                description: PriorityClassName to be used in the Pod.
                type: string
              readinessProbe:
                description: ReadinessProbe to be used in the Container.
                properties:
                  exec:
                    description: Exec specifies the action to take.
                    properties:
                      command:
                        description: |-
                          Command is the command line to execute inside the container, the working directory for the
                          command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                          not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                          a shell, you need to explicitly call out to that shell.
                          Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  failureThreshold:
                    description: |-
                      Minimum consecutive failures for the probe to be considered failed after having succeeded.
                      Defaults to 3. Minimum value is 1.
                    format: int32
                    type: integer
                  grpc:
                    description: GRPC specifies an action involving a GRPC port.
                    properties:
                      port:
                        description: Port number of the gRPC service. Number must
                          be in the range 1 to 65535.
                        format: int32
                        type: integer
                      service:
                        default: ""
                        description: |-
                          Service is the name of the service to place in the gRPC HealthCheckRequest
                          (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                          If this is not specified, the default behavior is defined by gRPC.
                        type: string
                    required:
                    - port
                    type: object
                  httpGet:
                    description: HTTPGet specifies the http request to perform.
                    properties:
                      host:
                        description: |-
                          Host name to connect to, defaults to the pod IP. You probably want to set
                          "Host" in httpHeaders instead.
                        type: string
                      httpHeaders:
                        description: Custom headers to set in the request. HTTP allows
                          repeated headers.
                        items:
                          description: HTTPHeader describes a custom header to be
                            used in HTTP probes
                          properties:
                            name:
                              description: |-
                                The header field name.
                                This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              type: string
                            value:
                              description: The header field value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          Name or number of the port to access on the container.
                          Number must be in the range 1 to 65535.
                          Name must be an IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                      scheme:
                        description: |-
                          Scheme to use for connecting to the host.
                          Defaults to HTTP.
                        type: string
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: |-
                      Number of seconds after the container has started before liveness probes are initiated.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    format: int32
                    type: integer
                  periodSeconds:
                    description: |-
                      How often (in seconds) to perform the probe.
                      Default to 10 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  successThreshold:
                    description: |-
                      Minimum consecutive successes for the probe to be considered successful after having failed.
                      Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                    format: int32
                    type: integer
                  tcpSocket:
                    description: TCPSocket specifies an action involving a TCP port.
                    properties:
                      host:
                        description: 'Optional: Host name to connect to, defaults
                          to the pod IP.'
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          Number or name of the port to access on the container.
                          Number must be in the range 1 to 65535.
                          Name must be an IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                    required:
                    - port
                    type: object
                  terminationGracePeriodSeconds:
                    description: |-
                      Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                      The grace period is the duration in seconds after the processes running in the pod are sent
                      a termination signal and the time when the processes are forcibly halted with a kill signal.
                      Set this value longer than the expected cleanup time for your process.
                      If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                      value overrides the value provided by the pod spec.
                      Value must be non-negative integer. The value zero indicates stop immediately via
                      the kill signal (no opportunity to shut down).
                      This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                      Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                    format: int64
                    type: integer
                  timeoutSeconds:
                    description: |-
                      Number of seconds after which the probe times out.
                      Defaults to 1 second. Minimum value is 1.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    format: int32
                    type: integer
                type: object
              replicas:
                default: 1
                description: Replicas indicates the number of desired instances.
                format: int32
                type: integer
              replicasAllowEvenNumber:
                default: false
                description: disables the validation check for an odd number of replicas.
                type: boolean
              replication:
                description: Replication configures high availability via replication.
                  This feature is still in alpha, use Galera if you are looking for
                  a more production-ready HA.
                properties:
                  enabled:
                    description: Enabled is a flag to enable Replication.
                    type: boolean
                  primary:
                    description: Primary is the replication configuration for the
                      primary node.
                    properties:
                      automaticFailover:
                        description: AutomaticFailover indicates whether the operator
                          should automatically update PodIndex to perform an automatic
                          primary failover.
                        type: boolean
                      podIndex:
                        description: PodIndex is the StatefulSet index of the primary
                          node. The user may change this field to perform a manual
                          switchover.
                        type: integer
                    type: object
                  probesEnabled:
                    description: |-
                      ProbesEnabled indicates to use replication specific liveness and readiness probes.
                      This probes check that the primary can receive queries and that the replica has the replication thread running.
                    type: boolean
                  replica:
                    description: ReplicaReplication is the replication configuration
                      for the replica nodes.
                    properties:
                      connectionRetries:
                        description: ConnectionRetries to be used when the replica
                          connects to the primary.
                        type: integer
                      connectionTimeout:
                        description: ConnectionTimeout to be used when the replica
                          connects to the primary.
                        type: string
                      gtid:
                        description: |-
                          Gtid indicates which Global Transaction ID should be used when connecting a replica to the master.
                          See: https://mariadb.com/kb/en/gtid/#using-current_pos-vs-slave_pos.
                        enum:
                        - CurrentPos
                        - SlavePos
                        type: string
                      replPasswordSecretKeyRef:
                        description: ReplPasswordSecretKeyRef provides a reference
                          to the Secret to use as password for the replication user.
                        properties:
                          generate:
                            default: false
                            description: Generate indicates whether the Secret should
                              be generated if the Secret referenced is not present.
                            type: boolean
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      syncTimeout:
                        description: |-
                          SyncTimeout defines the timeout for a replica to be synced with the primary when performing a primary switchover.
                          If the timeout is reached, the replica GTID will be reset and the switchover will continue.
                        type: string
                      waitPoint:
                        description: |-
                          WaitPoint defines whether the transaction should wait for ACK before committing to the storage engine.
                          More info: https://mariadb.com/kb/en/semisynchronous-replication/#rpl_semi_sync_master_wait_point.
                        enum:
                        - AfterSync
                        - AfterCommit
                        type: string
                    type: object
                  syncBinlog:
                    description: |-
                      SyncBinlog indicates whether the binary log should be synchronized to the disk after every event.
                      It trades off performance for consistency.
                      See: https://mariadb.com/kb/en/replication-and-binary-log-system-variables/#sync_binlog.
                    type: boolean
                type: object
              resources:
                description: Resouces describes the compute resource requirements.
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              rootEmptyPassword:
                description: RootEmptyPassword indicates if the root password should
                  be empty. Don't use this feature in production, it is only intended
                  for development and test environments.
                type: boolean
              rootPasswordSecretKeyRef:
                description: RootPasswordSecretKeyRef is a reference to a Secret key
                  containing the root password.
                properties:
                  generate:
                    default: false
                    description: Generate indicates whether the Secret should be generated
                      if the Secret referenced is not present.
                    type: boolean
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              secondaryConnection:
                description: |-
                  SecondaryConnection defines a template to configure the secondary Connection object.
                  This Connection provides the initial User access to the initial Database.
                  It will make use of the SecondaryService to route network traffic to the secondary Pods.
                properties:
                  healthCheck:
                    description: HealthCheck to be used in the Connection.
                    properties:
                      interval:
                        description: Interval used to perform health checks.
                        type: string
                      retryInterval:
                        description: RetryInterval is the interval used to perform
                          health check retries.
                        type: string
                    type: object
                  params:
                    additionalProperties:
                      type: string
                    description: Params to be used in the Connection.
                    type: object
                  port:
                    description: Port to connect to. If not provided, it defaults
                      to the MariaDB port or to the first MaxScale listener.
                    format: int32
                    type: integer
                  secretName:
                    description: SecretName to be used in the Connection.
                    type: string
                  secretTemplate:
                    description: SecretTemplate to be used in the Connection.
                    properties:
                      databaseKey:
                        description: DatabaseKey to be used in the Secret.
                        type: string
                      format:
                        description: Format to be used in the Secret.
                        type: string
                      hostKey:
                        description: HostKey to be used in the Secret.
                        type: string
                      key:
                        description: Key to be used in the Secret.
                        type: string
                      metadata:
                        description: Metadata to be added to the Secret object.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations to be added to children resources.
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels to be added to children resources.
                            type: object
                        type: object
                      passwordKey:
                        description: PasswordKey to be used in the Secret.
                        type: string
                      portKey:
                        description: PortKey to be used in the Secret.
                        type: string
                      usernameKey:
                        description: UsernameKey to be used in the Secret.
                        type: string
                    type: object
                  serviceName:
                    description: ServiceName to be used in the Connection.
                    type: string
                type: object
              secondaryService:
                description: |-
                  SecondaryService defines a template to configure the secondary Service object.
                  The network traffic of this Service will be routed to the secondary Pods.
                properties:
                  allocateLoadBalancerNodePorts:
                    description: AllocateLoadBalancerNodePorts Service field.
                    type: boolean
                  externalTrafficPolicy:
                    description: ExternalTrafficPolicy Service field.
                    type: string
                  loadBalancerIP:
                    description: LoadBalancerIP Service field.
                    type: string
                  loadBalancerSourceRanges:
                    description: LoadBalancerSourceRanges Service field.
                    items:
                      type: string
                    type: array
                  metadata:
                    description: Metadata to be added to the Service metadata.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to be added to children resources.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to be added to children resources.
                        type: object
                    type: object
                  sessionAffinity:
                    description: SessionAffinity Service field.
                    type: string
                  type:
                    default: ClusterIP
                    description: Type is the Service type. One of `ClusterIP`, `NodePort`
                      or `LoadBalancer`. If not defined, it defaults to `ClusterIP`.
                    enum:
                    - ClusterIP
                    - NodePort
                    - LoadBalancer
                    type: string
                type: object
              securityContext:
                description: SecurityContext holds security configuration that will
                  be applied to a container.
                properties:
                  allowPrivilegeEscalation:
                    description: |-
                      AllowPrivilegeEscalation controls whether a process can gain more
                      privileges than its parent process. This bool directly controls if
                      the no_new_privs flag will be set on the container process.
                      AllowPrivilegeEscalation is true always when the container is:
                      1) run as Privileged
                      2) has CAP_SYS_ADMIN
                      Note that this field cannot be set when spec.os.name is windows.
                    type: boolean
                  appArmorProfile:
                    description: |-
                      appArmorProfile is the AppArmor options to use by this container. If set, this profile
                      overrides the pod's appArmorProfile.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: |-
                          localhostProfile indicates a profile loaded on the node that should be used.
                          The profile must be preconfigured on the node to work.
                          Must match the loaded name of the profile.
                          Must be set if and only if type is "Localhost".
                        type: string
                      type:
                        description: |-
                          type indicates which kind of AppArmor profile will be applied.
                          Valid options are:
                            Localhost - a profile pre-loaded on the node.
                            RuntimeDefault - the container runtime's default profile.
                            Unconfined - no AppArmor enforcement.
                        type: string
                    required:
                    - type
                    type: object
                  capabilities:
                    description: |-
                      The capabilities to add/drop when running containers.
                      Defaults to the default set of capabilities granted by the container runtime.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      add:
                        description: Added capabilities
                        items:
                          description: Capability represent POSIX capabilities type
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      drop:
                        description: Removed capabilities
                        items:
                          description: Capability represent POSIX capabilities type
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  privileged:
                    description: |-
                      Run container in privileged mode.
                      Processes in privileged containers are essentially equivalent to root on the host.
                      Defaults to false.
                      Note that this field cannot be set when spec.os.name is windows.
                    type: boolean
                  procMount:
                    description: |-
                      procMount denotes the type of proc mount to use for the containers.
                      The default value is Default which uses the container runtime defaults for
                      readonly paths and masked paths.
                      This requires the ProcMountType feature flag to be enabled.
                      Note that this field cannot be set when spec.os.name is windows.
                    type: string
                  readOnlyRootFilesystem:
                    description: |-
                      Whether this container has a read-only root filesystem.
                      Default is false.
                      Note that this field cannot be set when spec.os.name is windows.
                    type: boolean
                  runAsGroup:
                    description: |-
                      The GID to run the entrypoint of the container process.
                      Uses runtime default if unset.
                      May also be set in PodSecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsNonRoot:
                    description: |-
                      Indicates that the container must run as a non-root user.
                      If true, the Kubelet will validate the image at runtime to ensure that it
                      does not run as UID 0 (root) and fail to start the container if it does.
                      If unset or false, no such validation will be performed.
                      May also be set in PodSecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                    type: boolean
                  runAsUser:
                    description: |-
                      The UID to run the entrypoint of the container process.
                      Defaults to user specified in image metadata if unspecified.
                      May also be set in PodSecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  seLinuxOptions:
                    description: |-
                      The SELinux context to be applied to the container.
                      If unspecified, the container runtime will allocate a random SELinux context for each
                      container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      level:
                        description: Level is SELinux level label that applies to
                          the container.
                        type: string
                      role:
                        description: Role is a SELinux role label that applies to
                          the container.
                        type: string
                      type:
                        description: Type is a SELinux type label that applies to
                          the container.
                        type: string
                      user:
                        description: User is a SELinux user label that applies to
                          the container.
                        type: string
                    type: object
                  seccompProfile:
                    description: |-
                      The seccomp options to use by this container. If seccomp options are
                      provided at both the pod & container level, the container options
                      override the pod options.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: |-
                          localhostProfile indicates a profile defined in a file on the node should be used.
                          The profile must be preconfigured on the node to work.
                          Must be a descending path, relative to the kubelet's configured seccomp profile location.
                          Must be set if type is "Localhost". Must NOT be set for any other type.
                        type: string
                      type:
                        description: |-
                          type indicates which kind of seccomp profile will be applied.
                          Valid options are:

                          Localhost - a profile defined in a file on the node should be used.
                          RuntimeDefault - the container runtime default profile should be used.
                          Unconfined - no profile should be applied.
                        type: string
                    required:
                    - type
                    type: object
                  windowsOptions:
                    description: |-
                      The Windows specific settings applied to all containers.
                      If unspecified, the options from the PodSecurityContext will be used.
                      If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                      Note that this field cannot be set when spec.os.name is linux.
                    properties:
                      gmsaCredentialSpec:
                        description: |-
                          GMSACredentialSpec is where the GMSA admission webhook
                          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                          GMSA credential spec named by the GMSACredentialSpecName field.
                        type: string
                      gmsaCredentialSpecName:
                        description: GMSACredentialSpecName is the name of the GMSA
                          credential spec to use.
                        type: string
                      hostProcess:
                        description: |-
                          HostProcess determines if a container should be run as a 'Host Process' container.
                          All of a Pod's containers must have the same effective HostProcess value
                          (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                          In addition, if HostProcess is true then HostNetwork must also be set to true.
                        type: boolean
                      runAsUserName:
                        description: |-
                          The UserName in Windows to run the entrypoint of the container process.
                          Defaults to the user specified in image metadata if unspecified.
                          May also be set in PodSecurityContext. If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                        type: string
                    type: object
                type: object
              service:
                description: |-
                  Service defines a template to configure the general Service object.
                  The network traffic of this Service will be routed to all Pods.
                properties:
                  allocateLoadBalancerNodePorts:
                    description: AllocateLoadBalancerNodePorts Service field.
                    type: boolean
                  externalTrafficPolicy:
                    description: ExternalTrafficPolicy Service field.
                    type: string
                  loadBalancerIP:
                    description: LoadBalancerIP Service field.
                    type: string
                  loadBalancerSourceRanges:
                    description: LoadBalancerSourceRanges Service field.
                    items:
                      type: string
                    type: array
                  metadata:
                    description: Metadata to be added to the Service metadata.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to be added to children resources.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to be added to children resources.
                        type: object
                    type: object
                  sessionAffinity:
                    description: SessionAffinity Service field.
                    type: string
                  type:
                    default: ClusterIP
                    description: Type is the Service type. One of `ClusterIP`, `NodePort`
                      or `LoadBalancer`. If not defined, it defaults to `ClusterIP`.
                    enum:
                    - ClusterIP
                    - NodePort
                    - LoadBalancer
                    type: string
                type: object
              serviceAccountName:
                description: ServiceAccountName is the name of the ServiceAccount
                  to be used by the Pods.
                type: string
              sidecarContainers:
                description: SidecarContainers to be used in the Pod.
                items:
                  description: Container object definition.
                  properties:
                    args:
                      description: Args to be used in the Container.
                      items:
                        type: string
                      type: array
                    command:
                      description: Command to be used in the Container.
                      items:
                        type: string
                      type: array
                    env:
                      description: Env represents the environment variables to be
                        injected in a container.
                      items:
                        description: EnvVar represents an environment variable present
                          in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be
                              a C_IDENTIFIER.
                            type: string
                          value:
                            description: |-
                              Variable references $(VAR_NAME) are expanded
                              using the previously defined environment variables in the container and
                              any service environment variables. If a variable cannot be resolved,
                              the reference in the input string will be unchanged. Double $$ are reduced
                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                              Escaped references will never be expanded, regardless of whether the variable
                              exists or not.
                              Defaults to "".
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              fieldRef:
                                description: |-
                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                                x-kubernetes-map-type: atomic
                              resourceFieldRef:
                                description: |-
                                  Selects a resource of the container: only resources limits and requests
                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                                x-kubernetes-map-type: atomic
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    envFrom:
                      description: EnvFrom represents the references (via ConfigMap
                        and Secrets) to environment variables to be injected in the
                        container.
                      items:
                        description: EnvFromSource represents the source of a set
                          of ConfigMaps
                        properties:
                          configMapRef:
                            description: The ConfigMap to select from
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap must be
                                  defined
                                type: boolean
                            type: object
                            x-kubernetes-map-type: atomic
                          prefix:
                            description: An optional identifier to prepend to each
                              key in the ConfigMap. Must be a C_IDENTIFIER.
                            type: string
                          secretRef:
                            description: The Secret to select from
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret must be defined
                                type: boolean
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      type: array
                    image:
                      description: Image name to be used by the MariaDB instances.
                        The supported format is `<image>:<tag>`.
                      type: string
                    imagePullPolicy:
                      description: ImagePullPolicy is the image pull policy. One of
                        `Always`, `Never` or `IfNotPresent`. If not defined, it defaults
                        to `IfNotPresent`.
                      enum:
                      - Always
                      - Never
                      - IfNotPresent
                      type: string
                    livenessProbe:
                      description: LivenessProbe to be used in the Container.
                      properties:
                        exec:
                          description: Exec specifies the action to take.
                          properties:
                            command:
                              description: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        failureThreshold:
                          description: |-
                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                            Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        grpc:
                          description: GRPC specifies an action involving a GRPC port.
                          properties:
                            port:
                              description: Port number of the gRPC service. Number
                                must be in the range 1 to 65535.
                              format: int32
                              type: integer
                            service:
                              default: ""
                              description: |-
                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                If this is not specified, the default behavior is defined by gRPC.
                              type: string
                          required:
                          - port
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Name or number of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: |-
                            Number of seconds after the container has started before liveness probes are initiated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                        periodSeconds:
                          description: |-
                            How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: |-
                            Minimum consecutive successes for the probe to be considered successful after having failed.
                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: TCPSocket specifies an action involving a TCP
                            port.
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: |-
                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                            The grace period is the duration in seconds after the processes running in the pod are sent
                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                            Set this value longer than the expected cleanup time for your process.
                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                            value overrides the value provided by the pod spec.
                            Value must be non-negative integer. The value zero indicates stop immediately via
                            the kill signal (no opportunity to shut down).
                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: |-
                            Number of seconds after which the probe times out.
                            Defaults to 1 second. Minimum value is 1.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                      type: object
                    readinessProbe:
                      description: ReadinessProbe to be used in the Container.
                      properties:
                        exec:
                          description: Exec specifies the action to take.
                          properties:
                            command:
                              description: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        failureThreshold:
                          description: |-
                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                            Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        grpc:
                          description: GRPC specifies an action involving a GRPC port.
                          properties:
                            port:
                              description: Port number of the gRPC service. Number
                                must be in the range 1 to 65535.
                              format: int32
                              type: integer
                            service:
                              default: ""
                              description: |-
                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                If this is not specified, the default behavior is defined by gRPC.
                              type: string
                          required:
                          - port
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Name or number of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: |-
                            Number of seconds after the container has started before liveness probes are initiated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                        periodSeconds:
                          description: |-
                            How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: |-
                            Minimum consecutive successes for the probe to be considered successful after having failed.
                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: TCPSocket specifies an action involving a TCP
                            port.
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: |-
                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                            The grace period is the duration in seconds after the processes running in the pod are sent
                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                            Set this value longer than the expected cleanup time for your process.
                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                            value overrides the value provided by the pod spec.
                            Value must be non-negative integer. The value zero indicates stop immediately via
                            the kill signal (no opportunity to shut down).
                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: |-
                            Number of seconds after which the probe times out.
                            Defaults to 1 second. Minimum value is 1.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                      type: object
                    resources:
                      description: Resouces describes the compute resource requirements.
                      properties:
                        claims:
                          description: |-
                            Claims lists the names of resources, defined in spec.resourceClaims,
                            that are used by this container.

                            This is an alpha field and requires enabling the
                            DynamicResourceAllocation feature gate.

                            This field is immutable. It can only be set for containers.
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: |-
                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                  the Pod where this field is used. It makes that resource available
                                  inside a container.
                                type: string
                              request:
                                description: |-
                                  Request is the name chosen for a request in the referenced claim.
                                  If empty, everything from the claim is made available, otherwise
                                  only the result of this request.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Limits describes the maximum amount of compute resources allowed.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                      type: object
                    securityContext:
                      description: SecurityContext holds security configuration that
                        will be applied to a container.
                      properties:
                        allowPrivilegeEscalation:
                          description: |-
                            AllowPrivilegeEscalation controls whether a process can gain more
                            privileges than its parent process. This bool directly controls if
                            the no_new_privs flag will be set on the container process.
                            AllowPrivilegeEscalation is true always when the container is:
                            1) run as Privileged
                            2) has CAP_SYS_ADMIN
                            Note that this field cannot be set when spec.os.name is windows.
                          type: boolean
                        appArmorProfile:
                          description: |-
                            appArmorProfile is the AppArmor options to use by this container. If set, this profile
                            overrides the pod's appArmorProfile.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            localhostProfile:
                              description: |-
                                localhostProfile indicates a profile loaded on the node that should be used.
                                The profile must be preconfigured on the node to work.
                                Must match the loaded name of the profile.
                                Must be set if and only if type is "Localhost".
                              type: string
                            type:
                              description: |-
                                type indicates which kind of AppArmor profile will be applied.
                                Valid options are:
                                  Localhost - a profile pre-loaded on the node.
                                  RuntimeDefault - the container runtime's default profile.
                                  Unconfined - no AppArmor enforcement.
                              type: string
                          required:
                          - type
                          type: object
                        capabilities:
                          description: |-
                            The capabilities to add/drop when running containers.
                            Defaults to the default set of capabilities granted by the container runtime.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            add:
                              description: Added capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            drop:
                              description: Removed capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        privileged:
                          description: |-
                            Run container in privileged mode.
                            Processes in privileged containers are essentially equivalent to root on the host.
                            Defaults to false.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: boolean
                        procMount:
                          description: |-
                            procMount denotes the type of proc mount to use for the containers.
                            The default value is Default which uses the container runtime defaults for
                            readonly paths and masked paths.
                            This requires the ProcMountType feature flag to be enabled.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: string
                        readOnlyRootFilesystem:
                          description: |-
                            Whether this container has a read-only root filesystem.
                            Default is false.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: boolean
                        runAsGroup:
                          description: |-
                            The GID to run the entrypoint of the container process.
                            Uses runtime default if unset.
                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is windows.
                          format: int64
                          type: integer
                        runAsNonRoot:
                          description: |-
                            Indicates that the container must run as a non-root user.
                            If true, the Kubelet will validate the image at runtime to ensure that it
                            does not run as UID 0 (root) and fail to start the container if it does.
                            If unset or false, no such validation will be performed.
                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                          type: boolean
                        runAsUser:
                          description: |-
                            The UID to run the entrypoint of the container process.
                            Defaults to user specified in image metadata if unspecified.
                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is windows.
                          format: int64
                          type: integer
                        seLinuxOptions:
                          description: |-
                            The SELinux context to be applied to the container.
                            If unspecified, the container runtime will allocate a random SELinux context for each
                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            level:
                              description: Level is SELinux level label that applies
                                to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies
                                to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies
                                to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies
                                to the container.
                              type: string
                          type: object
                        seccompProfile:
                          description: |-
                            The seccomp options to use by this container. If seccomp options are
                            provided at both the pod & container level, the container options
                            override the pod options.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            localhostProfile:
                              description: |-
                                localhostProfile indicates a profile defined in a file on the node should be used.
                                The profile must be preconfigured on the node to work.
                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                Must be set if type is "Localhost". Must NOT be set for any other type.
                              type: string
                            type:
                              description: |-
                                type indicates which kind of seccomp profile will be applied.
                                Valid options are:

                                Localhost - a profile defined in a file on the node should be used.
                                RuntimeDefault - the container runtime default profile should be used.
                                Unconfined - no profile should be applied.
                              type: string
                          required:
                          - type
                          type: object
                        windowsOptions:
                          description: |-
                            The Windows specific settings applied to all containers.
                            If unspecified, the options from the PodSecurityContext will be used.
                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is linux.
                          properties:
                            gmsaCredentialSpec:
                              description: |-
                                GMSACredentialSpec is where the GMSA admission webhook
                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                GMSA credential spec named by the GMSACredentialSpecName field.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the
                                GMSA credential spec to use.
                              type: string
                            hostProcess:
                              description: |-
                                HostProcess determines if a container should be run as a 'Host Process' container.
                                All of a Pod's containers must have the same effective HostProcess value
                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                              type: boolean
                            runAsUserName:
                              description: |-
                                The UserName in Windows to run the entrypoint of the container process.
                                Defaults to the user specified in image metadata if unspecified.
                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: string
                          type: object
                      type: object
                    volumeMounts:
                      description: VolumeMounts to be used in the Container.
                      items:
                        description: VolumeMount describes a mounting of a Volume
                          within a container.
                        properties:
                          mountPath:
                            description: |-
                              Path within the container at which the volume should be mounted.  Must
                              not contain ':'.
                            type: string
                          mountPropagation:
                            description: |-
                              mountPropagation determines how mounts are propagated from the host
                              to container and the other way around.
                              When not set, MountPropagationNone is used.
                              This field is beta in 1.10.
                              When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                              (which defaults to None).
                            type: string
                          name:
                            description: This must match the Name of a Volume.
                            type: string
                          readOnly:
                            description: |-
                              Mounted read-only if true, read-write otherwise (false or unspecified).
                              Defaults to false.
                            type: boolean
                          recursiveReadOnly:
                            description: |-
                              RecursiveReadOnly specifies whether read-only mounts should be handled
                              recursively.

                              If ReadOnly is false, this field has no meaning and must be unspecified.

                              If ReadOnly is true, and this field is set to Disabled, the mount is not made
                              recursively read-only.  If this field is set to IfPossible, the mount is made
                              recursively read-only, if it is supported by the container runtime.  If this
                              field is set to Enabled, the mount is made recursively read-only if it is
                              supported by the container runtime, otherwise the pod will not be started and
                              an error will be generated to indicate the reason.

                              If this field is set to IfPossible or Enabled, MountPropagation must be set to
                              None (or be unspecified, which defaults to None).

                              If this field is not specified, it is treated as an equivalent of Disabled.
                            type: string
                          subPath:
                            description: |-
                              Path within the volume from which the container's volume should be mounted.
                              Defaults to "" (volume's root).
                            type: string
                          subPathExpr:
                            description: |-
                              Expanded path within the volume from which the container's volume should be mounted.
                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                              Defaults to "" (volume's root).
                              SubPathExpr and SubPath are mutually exclusive.
                            type: string
                        required:
                        - mountPath
                        - name
                        type: object
                      type: array
                  required:
                  - image
                  type: object
                type: array
              storage:
                description: Storage defines the storage options to be used for provisioning
                  the PVCs mounted by MariaDB.
                properties:
                  ephemeral:
                    description: Ephemeral indicates whether to use ephemeral storage
                      in the PVCs. It is only compatible with non HA MariaDBs.
                    type: boolean
                  resizeInUseVolumes:
                    description: |-
                      ResizeInUseVolumes indicates whether the PVCs can be resized. The 'StorageClassName' used should have 'allowVolumeExpansion' set to 'true' to allow resizing.
                      It defaults to true.
                    type: boolean
                  size:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Size of the PVCs to be mounted by MariaDB. Required
                      if not provided in 'VolumeClaimTemplate'. It superseeds the
                      storage size specified in 'VolumeClaimTemplate'.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  storageClassName:
                    description: |-
                      StorageClassName to be used to provision the PVCS. It superseeds the 'StorageClassName' specified in 'VolumeClaimTemplate'.
                      If not provided, the default 'StorageClass' configured in the cluster is used.
                    type: string
                  volumeClaimTemplate:
                    description: VolumeClaimTemplate provides a template to define
                      the PVCs.
                    properties:
                      accessModes:
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      metadata:
                        description: Metadata to be added to the PVC metadata.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations to be added to children resources.
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels to be added to children resources.
                            type: object
                        type: object
                      resources:
                        description: VolumeResourceRequirements describes the storage
                          resource requirements for a volume.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      selector:
                        description: |-
                          A label selector is a label query over a set of resources. The result of matchLabels and
                          matchExpressions are ANDed. An empty label selector matches all objects. A null
                          label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      storageClassName:
                        type: string
                    type: object
                  waitForVolumeResize:
                    description: |-
                      WaitForVolumeResize indicates whether to wait for the PVCs to be resized before marking the MariaDB object as ready. This will block other operations such as cluster recovery while the resize is in progress.
                      It defaults to true.
                    type: boolean
                type: object
              suspend:
                default: false
                description: |-
                  Suspend indicates whether the current resource should be suspended or not.
                  This can be useful for maintenance, as disabling the reconciliation prevents the operator from interfering with user operations during maintenance activities.
                type: boolean
              timeZone:
                description: TimeZone sets the default timezone. If not provided,
                  it defaults to SYSTEM and the timezone data is not loaded.
                type: string
              tolerations:
                description: Tolerations to be used in the Pod.
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              topologySpreadConstraints:
                description: TopologySpreadConstraints to be used in the Pod.
                items:
                  description: TopologySpreadConstraint specifies how to spread matching
                    pods among the given topology.
                  properties:
                    labelSelector:
                      description: |-
                        LabelSelector is used to find matching pods.
                        Pods that match this label selector are counted to determine the number of pods
                        in their corresponding topology domain.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    matchLabelKeys:
                      description: |-
                        MatchLabelKeys is a set of pod label keys to select the pods over which
                        spreading will be calculated. The keys are used to lookup values from the
                        incoming pod labels, those key-value labels are ANDed with labelSelector
                        to select the group of existing pods over which spreading will be calculated
                        for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                        MatchLabelKeys cannot be set when LabelSelector isn't set.
                        Keys that don't exist in the incoming pod labels will
                        be ignored. A null or empty list means only match against labelSelector.

                        This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    maxSkew:
                      description: |-
                        MaxSkew describes the degree to which pods may be unevenly distributed.
                        When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                        between the number of matching pods in the target topology and the global minimum.
                        The global minimum is the minimum number of matching pods in an eligible domain
                        or zero if the number of eligible domains is less than MinDomains.
                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                        labelSelector spread as 2/2/1:
                        In this case, the global minimum is 1.
                        | zone1 | zone2 | zone3 |
                        |  P P  |  P P  |   P   |
                        - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                        scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                        violate MaxSkew(1).
                        - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                        When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                        to topologies that satisfy it.
                        It's a required field. Default value is 1 and 0 is not allowed.
                      format: int32
                      type: integer
                    minDomains:
                      description: |-
                        MinDomains indicates a minimum number of eligible domains.
                        When the number of eligible domains with matching topology keys is less than minDomains,
                        Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                        And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                        this value has no effect on scheduling.
                        As a result, when the number of eligible domains is less than minDomains,
                        scheduler won't schedule more than maxSkew Pods to those domains.
                        If value is nil, the constraint behaves as if MinDomains is equal to 1.
                        Valid values are integers greater than 0.
                        When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                        For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                        labelSelector spread as 2/2/2:
                        | zone1 | zone2 | zone3 |
                        |  P P  |  P P  |  P P  |
                        The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                        In this situation, new pod with the same labelSelector cannot be scheduled,
                        because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                        it will violate MaxSkew.
                      format: int32
                      type: integer
                    nodeAffinityPolicy:
                      description: |-
                        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                        when calculating pod topology spread skew. Options are:
                        - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                        - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                        If this value is nil, the behavior is equivalent to the Honor policy.
                        This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                      type: string
                    nodeTaintsPolicy:
                      description: |-
                        NodeTaintsPolicy indicates how we will treat node taints when calculating
                        pod topology spread skew. Options are:
                        - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                        has a toleration, are included.
                        - Ignore: node taints are ignored. All nodes are included.

                        If this value is nil, the behavior is equivalent to the Ignore policy.
                        This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                      type: string
                    topologyKey:
                      description: |-
                        TopologyKey is the key of node labels. Nodes that have a label with this key
                        and identical values are considered to be in the same topology.
                        We consider each <key, value> as a "bucket", and try to put balanced number
                        of pods into each bucket.
                        We define a domain as a particular instance of a topology.
                        Also, we define an eligible domain as a domain whose nodes meet the requirements of
                        nodeAffinityPolicy and nodeTaintsPolicy.
                        e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                        And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                        It's a required field.
                      type: string
                    whenUnsatisfiable:
                      description: |-
                        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                        the spread constraint.
                        - DoNotSchedule (default) tells the scheduler not to schedule it.
                        - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                          but giving higher precedence to topologies that would help reduce the
                          skew.
                        A constraint is considered "Unsatisfiable" for an incoming pod
                        if and only if every possible node assignment for that pod would violate
                        "MaxSkew" on some topology.
                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                        labelSelector spread as 3/1/1:
                        | zone1 | zone2 | zone3 |
                        | P P P |   P   |   P   |
                        If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                        to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                        MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                        won't make it *more* imbalanced.
                        It's a required field.
                      type: string
                  required:
                  - maxSkew
                  - topologyKey
                  - whenUnsatisfiable
                  type: object
                type: array
              updateStrategy:
                description: UpdateStrategy defines how a MariaDB resource is updated.
                properties:
                  autoUpdateDataPlane:
                    description: |-
                      AutoUpdateDataPlane indicates whether the Galera data plane version (agent and init containers) should be automatically updated based on the operator version. It defaults to false.
                      Updating the operator will trigger updates on all the MariaDB instances that have this flag set to true. Thus, it is recommended to progressively set this flag after having updated the operator.
                    type: boolean
                  rollingUpdate:
                    description: RollingUpdate defines parameters for the RollingUpdate
                      type.
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          The maximum number of pods that can be unavailable during the update.
                          Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                          Absolute number is calculated from percentage by rounding up. This can not be 0.
                          Defaults to 1. This field is alpha-level and is only honored by servers that enable the
                          MaxUnavailableStatefulSet feature. The field applies to all pods in the range 0 to
                          Replicas-1. That means if there is any unavailable pod in the range 0 to Replicas-1, it
                          will be counted towards MaxUnavailable.
                        x-kubernetes-int-or-string: true
                      partition:
                        description: |-
                          Partition indicates the ordinal at which the StatefulSet should be partitioned
                          for updates. During a rolling update, all pods from ordinal Replicas-1 to
                          Partition are updated. All pods from ordinal Partition-1 to 0 remain untouched.
                          This is helpful in being able to do a canary based deployment. The default value is 0.
                        format: int32
                        type: integer
                    type: object
                  type:
                    default: ReplicasFirstPrimaryLast
                    description: Type defines the type of updates. One of `ReplicasFirstPrimaryLast`,
                      `RollingUpdate` or `OnDelete`. If not defined, it defaults to
                      `ReplicasFirstPrimaryLast`.
                    enum:
                    - ReplicasFirstPrimaryLast
                    - RollingUpdate
                    - OnDelete
                    - Never
                    type: string
                type: object
              username:
                description: |-
                  Username is the initial username to be created by the operator once MariaDB is ready. It has all privileges on the initial database.
                  The initial User will have ALL PRIVILEGES in the initial Database.
                type: string
              volumeMounts:
                description: VolumeMounts to be used in the Container.
                items:
                  description: VolumeMount describes a mounting of a Volume within
                    a container.
                  properties:
                    mountPath:
                      description: |-
                        Path within the container at which the volume should be mounted.  Must
                        not contain ':'.
                      type: string
                    mountPropagation:
                      description: |-
                        mountPropagation determines how mounts are propagated from the host
                        to container and the other way around.
                        When not set, MountPropagationNone is used.
                        This field is beta in 1.10.
                        When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                        (which defaults to None).
                      type: string
                    name:
                      description: This must match the Name of a Volume.
                      type: string
                    readOnly:
                      description: |-
                        Mounted read-only if true, read-write otherwise (false or unspecified).
                        Defaults to false.
                      type: boolean
                    recursiveReadOnly:
                      description: |-
                        RecursiveReadOnly specifies whether read-only mounts should be handled
                        recursively.

                        If ReadOnly is false, this field has no meaning and must be unspecified.

                        If ReadOnly is true, and this field is set to Disabled, the mount is not made
                        recursively read-only.  If this field is set to IfPossible, the mount is made
                        recursively read-only, if it is supported by the container runtime.  If this
                        field is set to Enabled, the mount is made recursively read-only if it is
                        supported by the container runtime, otherwise the pod will not be started and
                        an error will be generated to indicate the reason.

                        If this field is set to IfPossible or Enabled, MountPropagation must be set to
                        None (or be unspecified, which defaults to None).

                        If this field is not specified, it is treated as an equivalent of Disabled.
                      type: string
                    subPath:
                      description: |-
                        Path within the volume from which the container's volume should be mounted.
                        Defaults to "" (volume's root).
                      type: string
                    subPathExpr:
                      description: |-
                        Expanded path within the volume from which the container's volume should be mounted.
                        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                        Defaults to "" (volume's root).
                        SubPathExpr and SubPath are mutually exclusive.
                      type: string
                  required:
                  - mountPath
                  - name
                  type: object
                type: array
              volumes:
                description: Volumes to be used in the Pod.
                items:
                  description: 'Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#volume-v1-core.'
                  properties:
                    csi:
                      description: Represents a source location of a volume to mount,
                        managed by an external CSI driver
                      properties:
                        driver:
                          description: |-
                            driver is the name of the CSI driver that handles this volume.
                            Consult with your admin for the correct name as registered in the cluster.
                          type: string
                        fsType:
                          description: |-
                            fsType to mount. Ex. "ext4", "xfs", "ntfs".
                            If not provided, the empty value is passed to the associated CSI driver
                            which will determine the default filesystem to apply.
                          type: string
                        nodePublishSecretRef:
                          description: |-
                            nodePublishSecretRef is a reference to the secret object containing
                            sensitive information to pass to the CSI driver to complete the CSI
                            NodePublishVolume and NodeUnpublishVolume calls.
                            This field is optional, and  may be empty if no secret is required. If the
                            secret object contains more than one secret, all secret references are passed.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        readOnly:
                          description: |-
                            readOnly specifies a read-only configuration for the volume.
                            Defaults to false (read/write).
                          type: boolean
                        volumeAttributes:
                          additionalProperties:
                            type: string
                          description: |-
                            volumeAttributes stores driver-specific properties that are passed to the CSI
                            driver. Consult your driver's documentation for supported values.
                          type: object
                      required:
                      - driver
                      type: object
                    emptyDir:
                      description: |-
                        Represents an empty directory for a pod.
                        Empty directory volumes support ownership management and SELinux relabeling.
                      properties:
                        medium:
                          description: |-
                            medium represents what type of storage medium should back this directory.
                            The default is "" which means to use the node's default medium.
                            Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          type: string
                        sizeLimit:
                          anyOf:
                          - type: integer
                          - type: string
                          description: |-
                            sizeLimit is the total amount of local storage required for this EmptyDir volume.
                            The size limit is also applicable for memory medium.
                            The maximum usage on memory medium EmptyDir would be the minimum value between
                            the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                            The default is nil which means that the limit is undefined.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      type: object
                    name:
                      type: string
                    nfs:
                      description: |-
                        Represents an NFS mount that lasts the lifetime of a pod.
                        NFS volumes do not support ownership management or SELinux relabeling.
                      properties:
                        path:
                          description: |-
                            path that is exported by the NFS server.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          type: string
                        readOnly:
                          description: |-
                            readOnly here will force the NFS export to be mounted with read-only permissions.
                            Defaults to false.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          type: boolean
                        server:
                          description: |-
                            server is the hostname or IP address of the NFS server.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          type: string
                      required:
                      - path
                      - server
                      type: object
                    persistentVolumeClaim:
                      description: |-
                        PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.
                        This volume finds the bound PV and mounts that volume for the pod. A
                        PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another
                        type of volume that is owned by someone else (the system).
                      properties:
                        claimName:
                          description: |-
                            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          type: string
                        readOnly:
                          description: |-
                            readOnly Will force the ReadOnly setting in VolumeMounts.
                            Default false.
                          type: boolean
                      required:
                      - claimName
                      type: object
                  required:
                  - name
                  type: object
                type: array
            type: object
            x-kubernetes-validations:
            - message: 'An odd number of MariaDB instances (mariadb.spec.replicas)
                is required to avoid split brain situations. Use ''mariadb.spec.replicasAllowEvenNumber:
                true'' to disable this validation.'
              rule: self.replicas %2 == 1 || self.replicasAllowEvenNumber
          status:
            description: MariaDBStatus defines the observed state of MariaDB
            properties:
              conditions:
                description: Conditions for the Mariadb object.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              currentPrimary:
                description: CurrentPrimary is the primary Pod.
                type: string
              currentPrimaryPodIndex:
                description: CurrentPrimaryPodIndex is the primary Pod index.
                type: integer
              galeraRecovery:
                description: GaleraRecovery is the Galera recovery current state.
                properties:
                  bootstrap:
                    description: Bootstrap indicates when and in which Pod the cluster
                      bootstrap process has been performed.
                    properties:
                      pod:
                        type: string
                      time:
                        format: date-time
                        type: string
                    type: object
                  podsRestarted:
                    description: PodsRestarted that the Pods have been restarted after
                      the cluster bootstrap.
                    type: boolean
                  recovered:
                    additionalProperties:
                      properties:
                        seqno:
                          type: integer
                        uuid:
                          type: string
                      required:
                      - seqno
                      - uuid
                      type: object
                    description: State is a per Pod representation of the sequence
                      recovery process.
                    type: object
                  state:
                    additionalProperties:
                      properties:
                        safeToBootstrap:
                          type: boolean
                        seqno:
                          type: integer
                        uuid:
                          type: string
                        version:
                          type: string
                      required:
                      - safeToBootstrap
                      - seqno
                      - uuid
                      - version
                      type: object
                    description: State is a per Pod representation of the Galera state
                      file (grastate.dat).
                    type: object
                type: object
              replicas:
                description: Replicas indicates the number of current instances.
                format: int32
                type: integer
              replicationStatus:
                additionalProperties:
                  type: string
                description: ReplicationStatus is the replication current state for
                  each Pod.
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      scale:
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
