apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[]'
    capabilities: Auto Pilot
    categories: Database
    certified: "true"
    containerImage: mariadb/mariadb-operator-enterprise:v0.0.23
    features.operators.openshift.io/disconnected: "false"
    features.operators.openshift.io/fips-compliant: "false"
    features.operators.openshift.io/proxy-aware: "false"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    operators.openshift.io/valid-subscription: '["MariaDB Enterprise Server License"]'
    support: MariaDB Corporation
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.arm64: supported
    operatorframework.io/os.linux: supported
  name: mariadb-operator-enterprise.v0.0.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Mariadb is the Schema for the mariadbs API
      displayName: Mariadb
      kind: Mariadb
      name: mariadbs.mariadb.k8s.mariadb.com
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: PersistentVolumeClaim
        name: ""
        version: v1
      - kind: Pod
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      specDescriptors:
      - description: Image to be used by the MariaDB instances.
        displayName: Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: PullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Pull Policy
        path: image.imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: PullSecrets is the list of pull Secrets to be used to pull the
          image.
        displayName: Pull Secrets
        path: image.imagePullSecrets
      - description: Name of the referenced Secret.
        displayName: Name
        path: image.imagePullSecrets[0].name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: Name of the image to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`.
        displayName: Name
        path: image.name
      - description: InheritMetadata defines the metadata to be inherited by children
          resources.
        displayName: Inherit Metadata
        path: inheritMetadata
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: inheritMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: inheritMetadata.labels
      - description: InitialData defines the data that will be present on Mariadb
          on startup.
        displayName: Initial Data
        path: initialData
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Database is the database to be created on bootstrap.
        displayName: Database
        path: initialData.database
      - description: PasswordSecretKeyRef is a reference to the password of the initial
          user provided via a Secret.
        displayName: Password Secret Key Ref
        path: initialData.passwordSecretKeyRef
      - description: Key is the Secret key to select.
        displayName: Key
        path: initialData.passwordSecretKeyRef.key
      - description: Name of the referenced Secret.
        displayName: Name
        path: initialData.passwordSecretKeyRef.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: RootPasswordSecretKeyRef is a reference to a Secret key containing
          the root password.
        displayName: Root Password Secret Key Ref
        path: initialData.rootPasswordSecretKeyRef
      - description: Key is the Secret key to select.
        displayName: Key
        path: initialData.rootPasswordSecretKeyRef.key
      - description: Name of the referenced Secret.
        displayName: Name
        path: initialData.rootPasswordSecretKeyRef.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: Username is the username of the user to be created on bootstrap.
        displayName: Username
        path: initialData.username
      - description: Instances is the number of instances required in the cluster.
        displayName: Instances
        path: instances
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: MyCnf allows to specify the my.cnf file mounted by Mariadb.
        displayName: My Cnf
        path: myCnf
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: MyCnfConfigMapKeyRef is a reference to the my.cnf config file
          provided via a ConfigMap. If not provided, it will be defaulted with reference
          to a ConfigMap with the contents of the MyCnf field.
        displayName: My Cnf Config Map Key Ref
        path: myCnfConfigMapKeyRef
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Key is the ConfigMap key to select.
        displayName: Key
        path: myCnfConfigMapKeyRef.key
      - description: Name of the referenced ConfigMap.
        displayName: Name
        path: myCnfConfigMapKeyRef.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:ConfigMap
      - description: Pod defines templates to configure Pod objects.
        displayName: Pod
        path: pod
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ContainerTemplate defines a template to configure Container objects.
        displayName: Container Template
        path: pod.containerTemplate
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: pod.containerTemplate.env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: pod.containerTemplate.envFrom
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: pod.containerTemplate.securityContext
      - description: Template defines a template to configure Pod objects.
        displayName: Template
        path: pod.template
      - description: SecurityContext holds pod-level security attributes and common
          container settings.
        displayName: Security Context
        path: pod.template.securityContext
      - description: Port where the instances will be listening for connections.
        displayName: Port
        path: port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Service defines templates to configure Service objects.
        displayName: Service
        path: service
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: AllInstancesServiceTemplate it a template to configure all instances
          Service.
        displayName: All Instances Service Template
        path: service.allInstancesServiceTemplate
      - description: Annotations to add to the Service metadata.
        displayName: Annotations
        path: service.allInstancesServiceTemplate.annotations
      - description: Labels to add to the Service metadata.
        displayName: Labels
        path: service.allInstancesServiceTemplate.labels
      - description: Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`.
          If not defined, it defaults to `ClusterIP`.
        displayName: Type
        path: service.allInstancesServiceTemplate.type
      - description: Storage configuration for MariaDB instances.
        displayName: Storage
        path: storage
      - description: Template to be used to generate the Persistent Volume Claim.
        displayName: Persistent Volume Claim Template
        path: storage.pvcTemplate
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Size of the storage. Required if not already specified in the
          PVC template.
        displayName: Size
        path: storage.size
      - description: StorageClass to use for the database storage. It superseeds the
          storage class provided in the PVC template. Default storage class is used
          if not provided.
        displayName: Storage Class
        path: storage.storageClass
      statusDescriptors:
      - description: Conditions for the Mariadb object.
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: CurrentPrimary is the primary Pod.
        displayName: Current Primary
        path: currentPrimary
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Pod
      - description: InstanceNames is a list of Pod names.
        displayName: Instance Names
        path: instanceNames
      - description: InstanceStatuses indicates in which status the instances are.
        displayName: Instance Statuses
        path: instanceStatuses
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podStatuses
      - description: Instances is the total number of created Pods.
        displayName: Instances
        path: instances
      - description: Phase is the current phase of Mariadb.
        displayName: Phase
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: PhaseReason explains the current phase.
        displayName: Phase Reason
        path: phaseReason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      - description: ReadyInstances is total number of ready Pods.
        displayName: Ready Instances
        path: readyInstances
      - description: TargetPrimary is the target primary Pod, which will differ from
          CurrentPrimary during a switchover.
        displayName: Target Primary
        path: targetPrimary
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Pod
      version: v1alpha1
    - description: Backup is the Schema for the backups API. It is used to define
        backup jobs and its storage.
      displayName: Backup
      kind: Backup
      name: backups.k8s.mariadb.com
      resources:
      - kind: Backup
        name: ""
        version: v1alpha1
      - kind: CronJob
        name: ""
        version: v1
      - kind: Job
        name: ""
        version: v1
      - kind: PersistentVolumeClaim
        name: ""
        version: v1
      - kind: ServiceAccount
        name: ""
        version: v1
      specDescriptors:
      - description: Affinity to be used in the Pod.
        displayName: Affinity
        path: affinity
      - description: AntiAffinityEnabled configures PodAntiAffinity so each Pod is
          scheduled in a different Node, enabling HA. Make sure you have at least
          as many Nodes available as the replicas to not end up with unscheduled Pods.
        displayName: Anti Affinity Enabled
        path: affinity.antiAffinityEnabled
      - description: Args to be used in the Container.
        displayName: Args
        path: args
      - description: BackoffLimit defines the maximum number of attempts to successfully
          take a Backup.
        displayName: Backoff Limit
        path: backoffLimit
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Databases defines the logical databases to be backed up. If not
          provided, all databases are backed up.
        displayName: Databases
        path: databases
      - description: 'IgnoreGlobalPriv indicates to ignore the mysql.global_priv in
          backups. If not provided, it will default to true when the referred MariaDB
          instance has Galera enabled and otherwise to false. See: https://github.com/mariadb-operator/mariadb-operator/issues/556'
        displayName: Ignore Global Priv
        path: ignoreGlobalPriv
      - description: ImagePullSecrets is the list of pull Secrets to be used to pull
          the image.
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: InheritMetadata defines the metadata to be inherited by children
          resources.
        displayName: Inherit Metadata
        path: inheritMetadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: inheritMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: inheritMetadata.labels
      - description: LogLevel to be used n the Backup Job. It defaults to 'info'.
        displayName: Log Level
        path: logLevel
      - description: MariaDBRef is a reference to a MariaDB object.
        displayName: Maria DBRef
        path: mariaDbRef
      - description: WaitForIt indicates whether the controller using this reference
          should wait for MariaDB to be ready.
        displayName: Wait For It
        path: mariaDbRef.waitForIt
      - description: MaxRetention defines the retention policy for backups. Old backups
          will be cleaned up by the Backup Job. It defaults to 30 days.
        displayName: Max Retention
        path: maxRetention
      - description: NodeSelector to be used in the Pod.
        displayName: Node Selector
        path: nodeSelector
      - description: PodMetadata defines extra metadata for the Pod.
        displayName: Pod Metadata
        path: podMetadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: podMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: podMetadata.labels
      - description: SecurityContext holds pod-level security attributes and common
          container settings.
        displayName: Pod Security Context
        path: podSecurityContext
      - description: PriorityClassName to be used in the Pod.
        displayName: Priority Class Name
        path: priorityClassName
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: RestartPolicy to be added to the Backup Pod.
        displayName: Restart Policy
        path: restartPolicy
      - description: Schedule defines when the Backup will be taken.
        displayName: Schedule
        path: schedule
      - description: Cron is a cron expression that defines the schedule.
        displayName: Cron
        path: schedule.cron
      - description: Suspend defines whether the schedule is active or not.
        displayName: Suspend
        path: schedule.suspend
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: securityContext
      - description: ServiceAccountName is the name of the ServiceAccount to be used
          by the Pods.
        displayName: Service Account Name
        path: serviceAccountName
      - description: Storage to be used in the Backup.
        displayName: Storage
        path: storage
      - description: PersistentVolumeClaim is a Kubernetes PVC specification.
        displayName: Persistent Volume Claim
        path: storage.persistentVolumeClaim
      - description: S3 defines the configuration to store backups in a S3 compatible
          storage.
        displayName: S3
        path: storage.s3
      - description: AccessKeyIdSecretKeyRef is a reference to a Secret key containing
          the S3 access key id.
        displayName: Access Key Id Secret Key Ref
        path: storage.s3.accessKeyIdSecretKeyRef
      - description: Bucket is the name Name of the bucket to store backups.
        displayName: Bucket
        path: storage.s3.bucket
      - description: Endpoint is the S3 API endpoint without scheme.
        displayName: Endpoint
        path: storage.s3.endpoint
      - description: 'Prefix indicates a folder/subfolder in the bucket. For example:
          mariadb/ or mariadb/backups. A trailing slash ''/'' is added if not provided.'
        displayName: Prefix
        path: storage.s3.prefix
      - description: Region is the S3 region name to use.
        displayName: Region
        path: storage.s3.region
      - description: AccessKeyIdSecretKeyRef is a reference to a Secret key containing
          the S3 secret key.
        displayName: Secret Access Key Secret Key Ref
        path: storage.s3.secretAccessKeySecretKeyRef
      - description: SessionTokenSecretKeyRef is a reference to a Secret key containing
          the S3 session token.
        displayName: Session Token Secret Key Ref
        path: storage.s3.sessionTokenSecretKeyRef
      - description: TLS provides the configuration required to establish TLS connections
          with S3.
        displayName: TLS
        path: storage.s3.tls
      - description: CASecretKeyRef is a reference to a Secret key containing a CA
          bundle in PEM format used to establish TLS connections with S3. By default,
          the system trust chain will be used, but you can use this field to add more
          CAs to the bundle.
        displayName: CASecret Key Ref
        path: storage.s3.tls.caSecretKeyRef
      - description: Enabled is a flag to enable TLS.
        displayName: Enabled
        path: storage.s3.tls.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Volume is a Kubernetes volume specification.
        displayName: Volume
        path: storage.volume
      - description: Tolerations to be used in the Pod.
        displayName: Tolerations
        path: tolerations
      statusDescriptors:
      - description: Conditions for the Backup object.
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1alpha1
    - description: Connection is the Schema for the connections API. It is used to
        configure connection strings for the applications connecting to MariaDB.
      displayName: Connection
      kind: Connection
      name: connections.k8s.mariadb.com
      resources:
      - kind: Connection
        name: ""
        version: v1alpha1
      - kind: Secret
        name: ""
        version: v1
      specDescriptors:
      - description: Database to use when configuring the Connection.
        displayName: Database
        path: database
      - description: HealthCheck to be used in the Connection.
        displayName: Health Check
        path: healthCheck
      - description: Interval used to perform health checks.
        displayName: Interval
        path: healthCheck.interval
      - description: RetryInterval is the interval used to perform health check retries.
        displayName: Retry Interval
        path: healthCheck.retryInterval
      - description: Host to connect to. If not provided, it defaults to the MariaDB
          host or to the MaxScale host.
        displayName: Host
        path: host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: MariaDBRef is a reference to the MariaDB to connect to. Either
          MariaDBRef or MaxScaleRef must be provided.
        displayName: Maria DBRef
        path: mariaDbRef
      - description: WaitForIt indicates whether the controller using this reference
          should wait for MariaDB to be ready.
        displayName: Wait For It
        path: mariaDbRef.waitForIt
      - description: MaxScaleRef is a reference to the MaxScale to connect to. Either
          MariaDBRef or MaxScaleRef must be provided.
        displayName: Max Scale Ref
        path: maxScaleRef
      - description: Params to be used in the Connection.
        displayName: Params
        path: params
      - description: PasswordSecretKeyRef is a reference to the password to use for
          configuring the Connection.
        displayName: Password Secret Key Ref
        path: passwordSecretKeyRef
      - description: Port to connect to. If not provided, it defaults to the MariaDB
          port or to the first MaxScale listener.
        displayName: Port
        path: port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: SecretName to be used in the Connection.
        displayName: Secret Name
        path: secretName
      - description: SecretTemplate to be used in the Connection.
        displayName: Secret Template
        path: secretTemplate
      - description: DatabaseKey to be used in the Secret.
        displayName: Database Key
        path: secretTemplate.databaseKey
      - description: Format to be used in the Secret.
        displayName: Format
        path: secretTemplate.format
      - description: HostKey to be used in the Secret.
        displayName: Host Key
        path: secretTemplate.hostKey
      - description: Key to be used in the Secret.
        displayName: Key
        path: secretTemplate.key
      - description: Metadata to be added to the Secret object.
        displayName: Metadata
        path: secretTemplate.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: secretTemplate.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: secretTemplate.metadata.labels
      - description: PasswordKey to be used in the Secret.
        displayName: Password Key
        path: secretTemplate.passwordKey
      - description: PortKey to be used in the Secret.
        displayName: Port Key
        path: secretTemplate.portKey
      - description: UsernameKey to be used in the Secret.
        displayName: Username Key
        path: secretTemplate.usernameKey
      - description: ServiceName to be used in the Connection.
        displayName: Service Name
        path: serviceName
      - description: Username to use for configuring the Connection.
        displayName: Username
        path: username
      statusDescriptors:
      - description: Conditions for the Connection object.
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1alpha1
    - description: Database is the Schema for the databases API. It is used to define
        a logical database as if you were running a 'CREATE DATABASE' statement.
      displayName: Database
      kind: Database
      name: databases.k8s.mariadb.com
      resources:
      - kind: Database
        name: ""
        version: v1alpha1
      specDescriptors:
      - description: CharacterSet to use in the Database.
        displayName: Character Set
        path: characterSet
      - description: CharacterSet to use in the Database.
        displayName: Collate
        path: collate
      - description: MariaDBRef is a reference to a MariaDB object.
        displayName: Maria DBRef
        path: mariaDbRef
      - description: WaitForIt indicates whether the controller using this reference
          should wait for MariaDB to be ready.
        displayName: Wait For It
        path: mariaDbRef.waitForIt
      - description: Name overrides the default Database name provided by metadata.name.
        displayName: Name
        path: name
      - description: RequeueInterval is used to perform requeue reconciliations.
        displayName: Requeue Interval
        path: requeueInterval
      - description: RetryInterval is the interval used to perform retries.
        displayName: Retry Interval
        path: retryInterval
      statusDescriptors:
      - description: Conditions for the Database object.
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1alpha1
    - description: Grant is the Schema for the grants API. It is used to define grants
        as if you were running a 'GRANT' statement.
      displayName: Grant
      kind: Grant
      name: grants.k8s.mariadb.com
      resources:
      - kind: Grant
        name: ""
        version: v1alpha1
      specDescriptors:
      - description: Database to use in the Grant.
        displayName: Database
        path: database
      - description: GrantOption to use in the Grant.
        displayName: Grant Option
        path: grantOption
      - description: Host to use in the Grant. It can be localhost, an IP or '%'.
        displayName: Host
        path: host
      - description: MariaDBRef is a reference to a MariaDB object.
        displayName: Maria DBRef
        path: mariaDbRef
      - description: WaitForIt indicates whether the controller using this reference
          should wait for MariaDB to be ready.
        displayName: Wait For It
        path: mariaDbRef.waitForIt
      - description: Privileges to use in the Grant.
        displayName: Privileges
        path: privileges
      - description: RequeueInterval is used to perform requeue reconciliations.
        displayName: Requeue Interval
        path: requeueInterval
      - description: RetryInterval is the interval used to perform retries.
        displayName: Retry Interval
        path: retryInterval
      - description: Table to use in the Grant.
        displayName: Table
        path: table
      - description: Username to use in the Grant.
        displayName: Username
        path: username
      statusDescriptors:
      - description: Conditions for the Grant object.
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1alpha1
    - description: MariaDB is the Schema for the mariadbs API. It is used to define
        MariaDB clusters.
      displayName: Maria DB
      kind: MariaDB
      name: mariadbs.k8s.mariadb.com
      resources:
      - kind: ClusterRoleBinding
        name: ""
        version: v1
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: Connection
        name: ""
        version: v1alpha1
      - kind: Deployment
        name: ""
        version: v1
      - kind: Event
        name: ""
        version: v1
      - kind: Grant
        name: ""
        version: v1alpha1
      - kind: Job
        name: ""
        version: v1
      - kind: MariaDB
        name: ""
        version: v1alpha1
      - kind: MaxScale
        name: ""
        version: v1alpha1
      - kind: PodDisruptionBudget
        name: ""
        version: v1
      - kind: Restore
        name: ""
        version: v1alpha1
      - kind: Role
        name: ""
        version: v1
      - kind: RoleBinding
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: ServiceAccount
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: v1
      - kind: User
        name: ""
        version: v1alpha1
      specDescriptors:
      - description: Affinity to be used in the Pod.
        displayName: Affinity
        path: affinity
      - description: AntiAffinityEnabled configures PodAntiAffinity so each Pod is
          scheduled in a different Node, enabling HA. Make sure you have at least
          as many Nodes available as the replicas to not end up with unscheduled Pods.
        displayName: Anti Affinity Enabled
        path: affinity.antiAffinityEnabled
      - description: Args to be used in the Container.
        displayName: Args
        path: args
      - description: BootstrapFrom defines a source to bootstrap from.
        displayName: Bootstrap From
        path: bootstrapFrom
      - description: BackupRef is a reference to a Backup object. It has priority
          over S3 and Volume.
        displayName: Backup Ref
        path: bootstrapFrom.backupRef
      - description: RestoreJob defines additional properties for the Job used to
          perform the Restore.
        displayName: Restore Job
        path: bootstrapFrom.restoreJob
      - description: Affinity to be used in the Pod.
        displayName: Affinity
        path: bootstrapFrom.restoreJob.affinity
      - description: AntiAffinityEnabled configures PodAntiAffinity so each Pod is
          scheduled in a different Node, enabling HA. Make sure you have at least
          as many Nodes available as the replicas to not end up with unscheduled Pods.
        displayName: Anti Affinity Enabled
        path: bootstrapFrom.restoreJob.affinity.antiAffinityEnabled
      - description: Args to be used in the Container.
        displayName: Args
        path: bootstrapFrom.restoreJob.args
      - description: Metadata defines additional metadata for the bootstrap Jobs.
        displayName: Metadata
        path: bootstrapFrom.restoreJob.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: bootstrapFrom.restoreJob.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: bootstrapFrom.restoreJob.metadata.labels
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: bootstrapFrom.restoreJob.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: S3 defines the configuration to restore backups from a S3 compatible
          storage. It has priority over Volume.
        displayName: S3
        path: bootstrapFrom.s3
      - description: AccessKeyIdSecretKeyRef is a reference to a Secret key containing
          the S3 access key id.
        displayName: Access Key Id Secret Key Ref
        path: bootstrapFrom.s3.accessKeyIdSecretKeyRef
      - description: Bucket is the name Name of the bucket to store backups.
        displayName: Bucket
        path: bootstrapFrom.s3.bucket
      - description: Endpoint is the S3 API endpoint without scheme.
        displayName: Endpoint
        path: bootstrapFrom.s3.endpoint
      - description: 'Prefix indicates a folder/subfolder in the bucket. For example:
          mariadb/ or mariadb/backups. A trailing slash ''/'' is added if not provided.'
        displayName: Prefix
        path: bootstrapFrom.s3.prefix
      - description: Region is the S3 region name to use.
        displayName: Region
        path: bootstrapFrom.s3.region
      - description: AccessKeyIdSecretKeyRef is a reference to a Secret key containing
          the S3 secret key.
        displayName: Secret Access Key Secret Key Ref
        path: bootstrapFrom.s3.secretAccessKeySecretKeyRef
      - description: SessionTokenSecretKeyRef is a reference to a Secret key containing
          the S3 session token.
        displayName: Session Token Secret Key Ref
        path: bootstrapFrom.s3.sessionTokenSecretKeyRef
      - description: TLS provides the configuration required to establish TLS connections
          with S3.
        displayName: TLS
        path: bootstrapFrom.s3.tls
      - description: CASecretKeyRef is a reference to a Secret key containing a CA
          bundle in PEM format used to establish TLS connections with S3. By default,
          the system trust chain will be used, but you can use this field to add more
          CAs to the bundle.
        displayName: CASecret Key Ref
        path: bootstrapFrom.s3.tls.caSecretKeyRef
      - description: Enabled is a flag to enable TLS.
        displayName: Enabled
        path: bootstrapFrom.s3.tls.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: TargetRecoveryTime is a RFC3339 (1970-01-01T00:00:00Z) date and
          time that defines the point in time recovery objective. It is used to determine
          the closest restoration source in time.
        displayName: Target Recovery Time
        path: bootstrapFrom.targetRecoveryTime
      - description: Volume is a Kubernetes Volume object that contains a backup.
        displayName: Volume
        path: bootstrapFrom.volume
      - description: Command to be used in the Container.
        displayName: Command
        path: command
      - description: Connection defines templates to configure the general Connection
          object.
        displayName: Connection
        path: connection
      - description: HealthCheck to be used in the Connection.
        displayName: Health Check
        path: connection.healthCheck
      - description: Interval used to perform health checks.
        displayName: Interval
        path: connection.healthCheck.interval
      - description: RetryInterval is the interval used to perform health check retries.
        displayName: Retry Interval
        path: connection.healthCheck.retryInterval
      - description: Params to be used in the Connection.
        displayName: Params
        path: connection.params
      - description: Port to connect to. If not provided, it defaults to the MariaDB
          port or to the first MaxScale listener.
        displayName: Port
        path: connection.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: SecretName to be used in the Connection.
        displayName: Secret Name
        path: connection.secretName
      - description: SecretTemplate to be used in the Connection.
        displayName: Secret Template
        path: connection.secretTemplate
      - description: DatabaseKey to be used in the Secret.
        displayName: Database Key
        path: connection.secretTemplate.databaseKey
      - description: Format to be used in the Secret.
        displayName: Format
        path: connection.secretTemplate.format
      - description: HostKey to be used in the Secret.
        displayName: Host Key
        path: connection.secretTemplate.hostKey
      - description: Key to be used in the Secret.
        displayName: Key
        path: connection.secretTemplate.key
      - description: Metadata to be added to the Secret object.
        displayName: Metadata
        path: connection.secretTemplate.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: connection.secretTemplate.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: connection.secretTemplate.metadata.labels
      - description: PasswordKey to be used in the Secret.
        displayName: Password Key
        path: connection.secretTemplate.passwordKey
      - description: PortKey to be used in the Secret.
        displayName: Port Key
        path: connection.secretTemplate.portKey
      - description: UsernameKey to be used in the Secret.
        displayName: Username Key
        path: connection.secretTemplate.usernameKey
      - description: ServiceName to be used in the Connection.
        displayName: Service Name
        path: connection.serviceName
      - description: Database is the database to be created on bootstrap.
        displayName: Database
        path: database
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: envFrom
      - description: Replication configures high availability via Galera.
        displayName: Galera
        path: galera
      - description: GaleraAgent is a sidecar agent that co-operates with mariadb-operator.
        displayName: Agent
        path: galera.agent
      - description: Args to be used in the Container.
        displayName: Args
        path: galera.agent.args
      - description: Command to be used in the Container.
        displayName: Command
        path: galera.agent.command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: galera.agent.env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: galera.agent.envFrom
      - description: GracefulShutdownTimeout is the time we give to the agent container
          in order to gracefully terminate in-flight requests.
        displayName: Graceful Shutdown Timeout
        path: galera.agent.gracefulShutdownTimeout
      - description: Image name to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`.
        displayName: Image
        path: galera.agent.image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: galera.agent.imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: KubernetesAuth to be used by the agent container
        displayName: Kubernetes Auth
        path: galera.agent.kubernetesAuth
      - description: AuthDelegatorRoleName is the name of the ClusterRoleBinding that
          is associated with the "system:auth-delegator" ClusterRole. It is necessary
          for creating TokenReview objects in order for the agent to validate the
          service account token.
        displayName: Auth Delegator Role Name
        path: galera.agent.kubernetesAuth.authDelegatorRoleName
      - description: Enabled is a flag to enable KubernetesAuth
        displayName: Enabled
        path: galera.agent.kubernetesAuth.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: galera.agent.livenessProbe
      - description: Port where the agent will be listening for connections.
        displayName: Port
        path: galera.agent.port
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: galera.agent.readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: galera.agent.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: galera.agent.securityContext
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: galera.agent.volumeMounts
      - description: AvailableWhenDonor indicates whether a donor node should be responding
          to queries. It defaults to false.
        displayName: Available When Donor
        path: galera.availableWhenDonor
      - description: GaleraConfig defines storage options for the Galera configuration
          files.
        displayName: Config
        path: galera.config
      - description: ReuseStorageVolume indicates that storage volume used by MariaDB
          should be reused to store the Galera configuration files. It defaults to
          false, which implies that a dedicated volume for the Galera configuration
          files is provisioned.
        displayName: Reuse Storage Volume
        path: galera.config.reuseStorageVolume
      - description: VolumeClaimTemplate is a template for the PVC that will contain
          the Galera configuration files shared between the InitContainer, Agent and
          MariaDB.
        displayName: Volume Claim Template
        path: galera.config.volumeClaimTemplate
      - description: Metadata to be added to the PVC metadata.
        displayName: Metadata
        path: galera.config.volumeClaimTemplate.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: galera.config.volumeClaimTemplate.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: galera.config.volumeClaimTemplate.metadata.labels
      - description: Enabled is a flag to enable Galera.
        displayName: Enabled
        path: galera.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: 'GaleraLibPath is a path inside the MariaDB image to the wsrep
          provider plugin. It is defaulted if not provided. More info: https://galeracluster.com/library/documentation/mysql-wsrep-options.html#wsrep-provider.'
        displayName: Galera Lib Path
        path: galera.galeraLibPath
      - description: InitContainer is an init container that co-operates with mariadb-operator.
        displayName: Init Container
        path: galera.initContainer
      - description: Args to be used in the Container.
        displayName: Args
        path: galera.initContainer.args
      - description: Command to be used in the Container.
        displayName: Command
        path: galera.initContainer.command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: galera.initContainer.env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: galera.initContainer.envFrom
      - description: Image name to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`.
        displayName: Image
        path: galera.initContainer.image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: galera.initContainer.imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: galera.initContainer.livenessProbe
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: galera.initContainer.readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: galera.initContainer.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: galera.initContainer.securityContext
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: galera.initContainer.volumeMounts
      - description: InitJob defines additional properties for the Job used to perform
          the initialization.
        displayName: Init Job
        path: galera.initJob
      - description: Affinity to be used in the Pod.
        displayName: Affinity
        path: galera.initJob.affinity
      - description: AntiAffinityEnabled configures PodAntiAffinity so each Pod is
          scheduled in a different Node, enabling HA. Make sure you have at least
          as many Nodes available as the replicas to not end up with unscheduled Pods.
        displayName: Anti Affinity Enabled
        path: galera.initJob.affinity.antiAffinityEnabled
      - description: Args to be used in the Container.
        displayName: Args
        path: galera.initJob.args
      - description: Metadata defines additional metadata for the bootstrap Jobs.
        displayName: Metadata
        path: galera.initJob.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: galera.initJob.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: galera.initJob.metadata.labels
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: galera.initJob.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Primary is the Galera configuration for the primary node.
        displayName: Primary
        path: galera.primary
      - description: AutomaticFailover indicates whether the operator should automatically
          update PodIndex to perform an automatic primary failover.
        displayName: Automatic Failover
        path: galera.primary.automaticFailover
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: PodIndex is the StatefulSet index of the primary node. The user
          may change this field to perform a manual switchover.
        displayName: Pod Index
        path: galera.primary.podIndex
      - description: 'ProviderOptions is map of Galera configuration parameters. More
          info: https://mariadb.com/kb/en/galera-cluster-system-variables/#wsrep_provider_options.'
        displayName: Provider Options
        path: galera.providerOptions
      - description: 'GaleraRecovery is the recovery process performed by the operator
          whenever the Galera cluster is not healthy. More info: https://galeracluster.com/library/documentation/crash-recovery.html.'
        displayName: Recovery
        path: galera.recovery
      - description: ClusterBootstrapTimeout is the time limit for bootstrapping a
          cluster. Once this timeout is reached, the Galera recovery state is reset
          and a new cluster bootstrap will be attempted.
        displayName: Cluster Bootstrap Timeout
        path: galera.recovery.clusterBootstrapTimeout
      - description: ClusterHealthyTimeout represents the duration at which a Galera
          cluster, that consistently failed health checks, is considered unhealthy,
          and consequently the Galera recovery process will be initiated by the operator.
        displayName: Cluster Healthy Timeout
        path: galera.recovery.clusterHealthyTimeout
      - description: ClusterMonitorInterval represents the interval used to monitor
          the Galera cluster health.
        displayName: Cluster Monitor Interval
        path: galera.recovery.clusterMonitorInterval
      - description: Enabled is a flag to enable GaleraRecovery.
        displayName: Enabled
        path: galera.recovery.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: MinClusterSize is the minimum number of replicas to consider
          the cluster healthy. It can be either a number of replicas (3) or a percentage
          (50%). If Galera consistently reports less replicas than this value for
          the given 'ClusterHealthyTimeout' interval, a cluster recovery is iniated.
          It defaults to '50%' of the replicas specified by the MariaDB object.
        displayName: Min Cluster Size
        path: galera.recovery.minClusterSize
      - description: PodRecoveryTimeout is the time limit for recevorying the sequence
          of a Pod during the cluster recovery. Once this timeout is reached, the
          Pod is restarted.
        displayName: Pod Recovery Timeout
        path: galera.recovery.podRecoveryTimeout
      - description: PodSyncTimeout is the time limit for a Pod to join the cluster
          after having performed a cluster bootstrap during the cluster recovery.
          Once this timeout is reached, the Pod is restarted.
        displayName: Pod Sync Timeout
        path: galera.recovery.podSyncTimeout
      - description: 'ReplicaThreads is the number of replica threads used to apply
          Galera write sets in parallel. More info: https://mariadb.com/kb/en/galera-cluster-system-variables/#wsrep_slave_threads.'
        displayName: Replica Threads
        path: galera.replicaThreads
      - description: 'SST is the Snapshot State Transfer used when new Pods join the
          cluster. More info: https://galeracluster.com/library/documentation/sst.html.'
        displayName: SST
        path: galera.sst
      - description: Image name to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`. Only MariaDB official images are supported.
        displayName: Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ImagePullSecrets is the list of pull Secrets to be used to pull
          the image.
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: InheritMetadata defines the metadata to be inherited by children
          resources.
        displayName: Inherit Metadata
        path: inheritMetadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: inheritMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: inheritMetadata.labels
      - description: InitContainers to be used in the Pod.
        displayName: Init Containers
        path: initContainers
      - description: Args to be used in the Container.
        displayName: Args
        path: initContainers[0].args
      - description: Command to be used in the Container.
        displayName: Command
        path: initContainers[0].command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: initContainers[0].env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: initContainers[0].envFrom
      - description: Image name to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`.
        displayName: Image
        path: initContainers[0].image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: initContainers[0].imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: initContainers[0].livenessProbe
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: initContainers[0].readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: initContainers[0].resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: initContainers[0].securityContext
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: initContainers[0].volumeMounts
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: livenessProbe
      - description: MaxScale is the MaxScale specification that defines the MaxScale
          resource to be used with the current MariaDB. When enabling this field,
          MaxScaleRef is automatically set.
        displayName: Max Scale
        path: maxScale
      - description: Admin configures the admin REST API and GUI.
        displayName: Admin
        path: maxScale.admin
      - description: GuiEnabled indicates whether the admin GUI should be enabled.
        displayName: Gui Enabled
        path: maxScale.admin.guiEnabled
      - description: Port where the admin REST API and GUI will be exposed.
        displayName: Port
        path: maxScale.admin.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Auth defines the credentials required for MaxScale to connect
          to MariaDB.
        displayName: Auth
        path: maxScale.auth
      - description: AdminPasswordSecretKeyRef is Secret key reference to the admin
          password to call the admin REST API. It is defaulted if not provided.
        displayName: Admin Password Secret Key Ref
        path: maxScale.auth.adminPasswordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: maxScale.auth.adminPasswordSecretKeyRef.generate
      - description: AdminUsername is an admin username to call the admin REST API.
          It is defaulted if not provided.
        displayName: Admin Username
        path: maxScale.auth.adminUsername
      - description: ClientMaxConnections defines the maximum number of connections
          that the client can establish. If HA is enabled, make sure to increase this
          value, as more MaxScale replicas implies more connections. It defaults to
          30 times the number of MaxScale replicas.
        displayName: Client Max Connections
        path: maxScale.auth.clientMaxConnections
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: ClientPasswordSecretKeyRef is Secret key reference to the password
          to connect to MaxScale. It is defaulted if not provided.
        displayName: Client Password Secret Key Ref
        path: maxScale.auth.clientPasswordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: maxScale.auth.clientPasswordSecretKeyRef.generate
      - description: ClientUsername is the user to connect to MaxScale. It is defaulted
          if not provided.
        displayName: Client Username
        path: maxScale.auth.clientUsername
      - description: DeleteDefaultAdmin determines whether the default admin user
          should be deleted after the initial configuration. If not provided, it defaults
          to true.
        displayName: Delete Default Admin
        path: maxScale.auth.deleteDefaultAdmin
      - description: Generate  defies whether the operator should generate users and
          grants for MaxScale to work. It only supports MariaDBs specified via spec.mariaDbRef.
        displayName: Generate
        path: maxScale.auth.generate
      - description: MetricsPasswordSecretKeyRef is Secret key reference to the metrics
          password to call the admib REST API. It is defaulted if metrics are enabled.
        displayName: Metrics Password Secret Key Ref
        path: maxScale.auth.metricsPasswordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: maxScale.auth.metricsPasswordSecretKeyRef.generate
      - description: MetricsUsername is an metrics username to call the REST API.
          It is defaulted if metrics are enabled.
        displayName: Metrics Username
        path: maxScale.auth.metricsUsername
      - description: MonitorMaxConnections defines the maximum number of connections
          that the monitor can establish. If HA is enabled, make sure to increase
          this value, as more MaxScale replicas implies more connections. It defaults
          to 30 times the number of MaxScale replicas.
        displayName: Monitor Max Connections
        path: maxScale.auth.monitorMaxConnections
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: MonitorPasswordSecretKeyRef is Secret key reference to the password
          used by MaxScale monitor to connect to MariaDB server. It is defaulted if
          not provided.
        displayName: Monitor Password Secret Key Ref
        path: maxScale.auth.monitorPasswordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: maxScale.auth.monitorPasswordSecretKeyRef.generate
      - description: MonitorUsername is the user used by MaxScale monitor to connect
          to MariaDB server. It is defaulted if not provided.
        displayName: Monitor Username
        path: maxScale.auth.monitorUsername
      - description: ServerMaxConnections defines the maximum number of connections
          that the server can establish. If HA is enabled, make sure to increase this
          value, as more MaxScale replicas implies more connections. It defaults to
          30 times the number of MaxScale replicas.
        displayName: Server Max Connections
        path: maxScale.auth.serverMaxConnections
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: ServerPasswordSecretKeyRef is Secret key reference to the password
          used by MaxScale to connect to MariaDB server. It is defaulted if not provided.
        displayName: Server Password Secret Key Ref
        path: maxScale.auth.serverPasswordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: maxScale.auth.serverPasswordSecretKeyRef.generate
      - description: ServerUsername is the user used by MaxScale to connect to MariaDB
          server. It is defaulted if not provided.
        displayName: Server Username
        path: maxScale.auth.serverUsername
      - description: SyncMaxConnections defines the maximum number of connections
          that the sync can establish. If HA is enabled, make sure to increase this
          value, as more MaxScale replicas implies more connections. It defaults to
          30 times the number of MaxScale replicas.
        displayName: Sync Max Connections
        path: maxScale.auth.syncMaxConnections
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: SyncPasswordSecretKeyRef is Secret key reference to the password
          used by MaxScale config to connect to MariaDB server. It is defaulted when
          HA is enabled.
        displayName: Sync Password Secret Key Ref
        path: maxScale.auth.syncPasswordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: maxScale.auth.syncPasswordSecretKeyRef.generate
      - description: MonitoSyncUsernamerUsername is the user used by MaxScale config
          sync to connect to MariaDB server. It is defaulted when HA is enabled.
        displayName: Sync Username
        path: maxScale.auth.syncUsername
      - description: Config defines the MaxScale configuration.
        displayName: Config
        path: maxScale.config
      - description: 'Params is a key value pair of parameters to be used in the MaxScale
          static configuration file. Any parameter supported by MaxScale may be specified
          here. See reference: https://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#global-settings.'
        displayName: Params
        path: maxScale.config.params
      - description: Sync defines how to replicate configuration across MaxScale replicas.
          It is defaulted when HA is enabled.
        displayName: Sync
        path: maxScale.config.sync
      - description: Database is the MariaDB logical database where the 'maxscale_config'
          table will be created in order to persist and synchronize config changes.
          If not provided, it defaults to 'mysql'.
        displayName: Database
        path: maxScale.config.sync.database
      - description: Interval defines the config synchronization interval. It is defaulted
          if not provided.
        displayName: Interval
        path: maxScale.config.sync.interval
      - description: Interval defines the config synchronization timeout. It is defaulted
          if not provided.
        displayName: Timeout
        path: maxScale.config.sync.timeout
      - description: VolumeClaimTemplate provides a template to define the PVCs for
          storing MaxScale runtime configuration files. It is defaulted if not provided.
        displayName: Volume Claim Template
        path: maxScale.config.volumeClaimTemplate
      - description: Metadata to be added to the PVC metadata.
        displayName: Metadata
        path: maxScale.config.volumeClaimTemplate.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: maxScale.config.volumeClaimTemplate.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: maxScale.config.volumeClaimTemplate.metadata.labels
      - description: Connection provides a template to define the Connection for MaxScale.
        displayName: Connection
        path: maxScale.connection
      - description: HealthCheck to be used in the Connection.
        displayName: Health Check
        path: maxScale.connection.healthCheck
      - description: Interval used to perform health checks.
        displayName: Interval
        path: maxScale.connection.healthCheck.interval
      - description: RetryInterval is the interval used to perform health check retries.
        displayName: Retry Interval
        path: maxScale.connection.healthCheck.retryInterval
      - description: Params to be used in the Connection.
        displayName: Params
        path: maxScale.connection.params
      - description: Port to connect to. If not provided, it defaults to the MariaDB
          port or to the first MaxScale listener.
        displayName: Port
        path: maxScale.connection.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: SecretName to be used in the Connection.
        displayName: Secret Name
        path: maxScale.connection.secretName
      - description: SecretTemplate to be used in the Connection.
        displayName: Secret Template
        path: maxScale.connection.secretTemplate
      - description: DatabaseKey to be used in the Secret.
        displayName: Database Key
        path: maxScale.connection.secretTemplate.databaseKey
      - description: Format to be used in the Secret.
        displayName: Format
        path: maxScale.connection.secretTemplate.format
      - description: HostKey to be used in the Secret.
        displayName: Host Key
        path: maxScale.connection.secretTemplate.hostKey
      - description: Key to be used in the Secret.
        displayName: Key
        path: maxScale.connection.secretTemplate.key
      - description: Metadata to be added to the Secret object.
        displayName: Metadata
        path: maxScale.connection.secretTemplate.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: maxScale.connection.secretTemplate.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: maxScale.connection.secretTemplate.metadata.labels
      - description: PasswordKey to be used in the Secret.
        displayName: Password Key
        path: maxScale.connection.secretTemplate.passwordKey
      - description: PortKey to be used in the Secret.
        displayName: Port Key
        path: maxScale.connection.secretTemplate.portKey
      - description: UsernameKey to be used in the Secret.
        displayName: Username Key
        path: maxScale.connection.secretTemplate.usernameKey
      - description: ServiceName to be used in the Connection.
        displayName: Service Name
        path: maxScale.connection.serviceName
      - description: Enabled is a flag to enable a MaxScale instance to be used with
          the current MariaDB.
        displayName: Enabled
        path: maxScale.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: GuiKubernetesService define a template for a Kubernetes Service
          object to connect to MaxScale's GUI.
        displayName: Gui Kubernetes Service
        path: maxScale.guiKubernetesService
      - description: AllocateLoadBalancerNodePorts Service field.
        displayName: Allocate Load Balancer Node Ports
        path: maxScale.guiKubernetesService.allocateLoadBalancerNodePorts
      - description: ExternalTrafficPolicy Service field.
        displayName: External Traffic Policy
        path: maxScale.guiKubernetesService.externalTrafficPolicy
      - description: LoadBalancerIP Service field.
        displayName: Load Balancer IP
        path: maxScale.guiKubernetesService.loadBalancerIP
      - description: LoadBalancerSourceRanges Service field.
        displayName: Load Balancer Source Ranges
        path: maxScale.guiKubernetesService.loadBalancerSourceRanges
      - description: Metadata to be added to the Service metadata.
        displayName: Metadata
        path: maxScale.guiKubernetesService.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: maxScale.guiKubernetesService.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: maxScale.guiKubernetesService.metadata.labels
      - description: SessionAffinity Service field.
        displayName: Session Affinity
        path: maxScale.guiKubernetesService.sessionAffinity
      - description: Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`.
          If not defined, it defaults to `ClusterIP`.
        displayName: Type
        path: maxScale.guiKubernetesService.type
      - description: Image name to be used by the MaxScale instances. The supported
          format is `<image>:<tag>`. Only MaxScale official images are supported.
        displayName: Image
        path: maxScale.image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: maxScale.imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: KubernetesService defines a template for a Kubernetes Service
          object to connect to MaxScale.
        displayName: Kubernetes Service
        path: maxScale.kubernetesService
      - description: AllocateLoadBalancerNodePorts Service field.
        displayName: Allocate Load Balancer Node Ports
        path: maxScale.kubernetesService.allocateLoadBalancerNodePorts
      - description: ExternalTrafficPolicy Service field.
        displayName: External Traffic Policy
        path: maxScale.kubernetesService.externalTrafficPolicy
      - description: LoadBalancerIP Service field.
        displayName: Load Balancer IP
        path: maxScale.kubernetesService.loadBalancerIP
      - description: LoadBalancerSourceRanges Service field.
        displayName: Load Balancer Source Ranges
        path: maxScale.kubernetesService.loadBalancerSourceRanges
      - description: Metadata to be added to the Service metadata.
        displayName: Metadata
        path: maxScale.kubernetesService.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: maxScale.kubernetesService.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: maxScale.kubernetesService.metadata.labels
      - description: SessionAffinity Service field.
        displayName: Session Affinity
        path: maxScale.kubernetesService.sessionAffinity
      - description: Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`.
          If not defined, it defaults to `ClusterIP`.
        displayName: Type
        path: maxScale.kubernetesService.type
      - description: Metrics configures metrics and how to scrape them.
        displayName: Metrics
        path: maxScale.metrics
      - description: Enabled is a flag to enable Metrics
        displayName: Enabled
        path: maxScale.metrics.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Exporter defines the metrics exporter container.
        displayName: Exporter
        path: maxScale.metrics.exporter
      - description: Affinity to be used in the Pod.
        displayName: Affinity
        path: maxScale.metrics.exporter.affinity
      - description: AntiAffinityEnabled configures PodAntiAffinity so each Pod is
          scheduled in a different Node, enabling HA. Make sure you have at least
          as many Nodes available as the replicas to not end up with unscheduled Pods.
        displayName: Anti Affinity Enabled
        path: maxScale.metrics.exporter.affinity.antiAffinityEnabled
      - description: Args to be used in the Container.
        displayName: Args
        path: maxScale.metrics.exporter.args
      - description: Command to be used in the Container.
        displayName: Command
        path: maxScale.metrics.exporter.command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: maxScale.metrics.exporter.env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: maxScale.metrics.exporter.envFrom
      - description: 'Image name to be used as metrics exporter. The supported format
          is `<image>:<tag>`. Only mysqld-exporter >= v0.15.0 is supported: https://github.com/prometheus/mysqld_exporter'
        displayName: Image
        path: maxScale.metrics.exporter.image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: maxScale.metrics.exporter.imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: ImagePullSecrets is the list of pull Secrets to be used to pull
          the image.
        displayName: Image Pull Secrets
        path: maxScale.metrics.exporter.imagePullSecrets
      - description: InitContainers to be used in the Pod.
        displayName: Init Containers
        path: maxScale.metrics.exporter.initContainers
      - description: Args to be used in the Container.
        displayName: Args
        path: maxScale.metrics.exporter.initContainers[0].args
      - description: Command to be used in the Container.
        displayName: Command
        path: maxScale.metrics.exporter.initContainers[0].command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: maxScale.metrics.exporter.initContainers[0].env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: maxScale.metrics.exporter.initContainers[0].envFrom
      - description: Image name to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`.
        displayName: Image
        path: maxScale.metrics.exporter.initContainers[0].image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: maxScale.metrics.exporter.initContainers[0].imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: maxScale.metrics.exporter.initContainers[0].livenessProbe
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: maxScale.metrics.exporter.initContainers[0].readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: maxScale.metrics.exporter.initContainers[0].resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: maxScale.metrics.exporter.initContainers[0].securityContext
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: maxScale.metrics.exporter.initContainers[0].volumeMounts
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: maxScale.metrics.exporter.livenessProbe
      - description: NodeSelector to be used in the Pod.
        displayName: Node Selector
        path: maxScale.metrics.exporter.nodeSelector
      - description: PodMetadata defines extra metadata for the Pod.
        displayName: Pod Metadata
        path: maxScale.metrics.exporter.podMetadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: maxScale.metrics.exporter.podMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: maxScale.metrics.exporter.podMetadata.labels
      - description: SecurityContext holds pod-level security attributes and common
          container settings.
        displayName: Pod Security Context
        path: maxScale.metrics.exporter.podSecurityContext
      - description: Port where the exporter will be listening for connections.
        displayName: Port
        path: maxScale.metrics.exporter.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: PriorityClassName to be used in the Pod.
        displayName: Priority Class Name
        path: maxScale.metrics.exporter.priorityClassName
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: maxScale.metrics.exporter.readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: maxScale.metrics.exporter.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: maxScale.metrics.exporter.securityContext
      - description: ServiceAccountName is the name of the ServiceAccount to be used
          by the Pods.
        displayName: Service Account Name
        path: maxScale.metrics.exporter.serviceAccountName
      - description: SidecarContainers to be used in the Pod.
        displayName: Sidecar Containers
        path: maxScale.metrics.exporter.sidecarContainers
      - description: Args to be used in the Container.
        displayName: Args
        path: maxScale.metrics.exporter.sidecarContainers[0].args
      - description: Command to be used in the Container.
        displayName: Command
        path: maxScale.metrics.exporter.sidecarContainers[0].command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: maxScale.metrics.exporter.sidecarContainers[0].env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: maxScale.metrics.exporter.sidecarContainers[0].envFrom
      - description: Image name to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`.
        displayName: Image
        path: maxScale.metrics.exporter.sidecarContainers[0].image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: maxScale.metrics.exporter.sidecarContainers[0].imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: maxScale.metrics.exporter.sidecarContainers[0].livenessProbe
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: maxScale.metrics.exporter.sidecarContainers[0].readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: maxScale.metrics.exporter.sidecarContainers[0].resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: maxScale.metrics.exporter.sidecarContainers[0].securityContext
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: maxScale.metrics.exporter.sidecarContainers[0].volumeMounts
      - description: Tolerations to be used in the Pod.
        displayName: Tolerations
        path: maxScale.metrics.exporter.tolerations
      - description: TopologySpreadConstraints to be used in the Pod.
        displayName: Topology Spread Constraints
        path: maxScale.metrics.exporter.topologySpreadConstraints
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: maxScale.metrics.exporter.volumeMounts
      - description: Volumes to be used in the Pod.
        displayName: Volumes
        path: maxScale.metrics.exporter.volumes
      - description: ServiceMonitor defines the ServiceMonior object.
        displayName: Service Monitor
        path: maxScale.metrics.serviceMonitor
      - description: Interval for scraping metrics.
        displayName: Interval
        path: maxScale.metrics.serviceMonitor.interval
      - description: JobLabel to add to the ServiceMonitor object.
        displayName: Job Label
        path: maxScale.metrics.serviceMonitor.jobLabel
      - description: PrometheusRelease is the release label to add to the ServiceMonitor
          object.
        displayName: Prometheus Release
        path: maxScale.metrics.serviceMonitor.prometheusRelease
      - description: ScrapeTimeout defines the timeout for scraping metrics.
        displayName: Scrape Timeout
        path: maxScale.metrics.serviceMonitor.scrapeTimeout
      - description: Monitor monitors MariaDB server instances.
        displayName: Monitor
        path: maxScale.monitor
      - description: CooperativeMonitoring enables coordination between multiple MaxScale
          instances running monitors. It is defaulted when HA is enabled.
        displayName: Cooperative Monitoring
        path: maxScale.monitor.cooperativeMonitoring
      - description: Interval used to monitor MariaDB servers. It is defaulted if
          not provided.
        displayName: Interval
        path: maxScale.monitor.interval
      - description: Module is the module to use to monitor MariaDB servers. It is
          mandatory when no MariaDB reference is provided.
        displayName: Module
        path: maxScale.monitor.module
      - description: Name is the identifier of the monitor. It is defaulted if not
          provided.
        displayName: Name
        path: maxScale.monitor.name
      - description: 'Params defines extra parameters to pass to the monitor. Any
          parameter supported by MaxScale may be specified here. See reference: https://mariadb.com/kb/en/mariadb-maxscale-2308-common-monitor-parameters/.
          Monitor specific parameter are also suported: https://mariadb.com/kb/en/mariadb-maxscale-2308-galera-monitor/#galera-monitor-optional-parameters.
          https://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-monitor/#configuration.'
        displayName: Params
        path: maxScale.monitor.params
      - description: Suspend indicates whether the current resource should be suspended
          or not. Feature flag --feature-maxscale-suspend is required in the controller
          to enable this.
        displayName: Suspend
        path: maxScale.monitor.suspend
      - description: PodDisruptionBudget defines the budget for replica availability.
        displayName: Pod Disruption Budget
        path: maxScale.podDisruptionBudget
      - description: MaxUnavailable defines the number of maximum unavailable Pods.
        displayName: Max Unavailable
        path: maxScale.podDisruptionBudget.maxUnavailable
      - description: MinAvailable defines the number of minimum available Pods.
        displayName: Min Available
        path: maxScale.podDisruptionBudget.minAvailable
      - description: Replicas indicates the number of desired instances.
        displayName: Replicas
        path: maxScale.replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: RequeueInterval is used to perform requeue reconciliations.
        displayName: Requeue Interval
        path: maxScale.requeueInterval
      - description: Services define how the traffic is forwarded to the MariaDB servers.
        displayName: Services
        path: maxScale.services
      - description: MaxScaleListener defines how the MaxScale server will listen
          for connections.
        displayName: Listener
        path: maxScale.services[0].listener
      - description: Name is the identifier of the listener. It is defaulted if not
          provided
        displayName: Name
        path: maxScale.services[0].listener.name
      - description: 'Params defines extra parameters to pass to the listener. Any
          parameter supported by MaxScale may be specified here. See reference: https://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#listener_1.'
        displayName: Params
        path: maxScale.services[0].listener.params
      - description: Port is the network port where the MaxScale server will listen.
        displayName: Port
        path: maxScale.services[0].listener.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Protocol is the MaxScale protocol to use when communicating with
          the client. If not provided, it defaults to MariaDBProtocol.
        displayName: Protocol
        path: maxScale.services[0].listener.protocol
      - description: Suspend indicates whether the current resource should be suspended
          or not. Feature flag --feature-maxscale-suspend is required in the controller
          to enable this.
        displayName: Suspend
        path: maxScale.services[0].listener.suspend
      - description: Name is the identifier of the MaxScale service.
        displayName: Name
        path: maxScale.services[0].name
      - description: 'Params defines extra parameters to pass to the service. Any
          parameter supported by MaxScale may be specified here. See reference: https://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#service_1.
          Router specific parameter are also suported: https://mariadb.com/kb/en/mariadb-maxscale-2308-readwritesplit/#configuration.
          https://mariadb.com/kb/en/mariadb-maxscale-2308-readconnroute/#configuration.'
        displayName: Params
        path: maxScale.services[0].params
      - description: Router is the type of router to use.
        displayName: Router
        path: maxScale.services[0].router
      - description: Suspend indicates whether the current resource should be suspended
          or not. Feature flag --feature-maxscale-suspend is required in the controller
          to enable this.
        displayName: Suspend
        path: maxScale.services[0].suspend
      - description: UpdateStrategy defines the update strategy for the StatefulSet
          object.
        displayName: Update Strategy
        path: maxScale.updateStrategy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:updateStrategy
      - description: MaxScaleRef is a reference to a MaxScale resource to be used
          with the current MariaDB. Providing this field implies delegating high availability
          tasks such as primary failover to MaxScale.
        displayName: Max Scale Ref
        path: maxScaleRef
      - description: Metrics configures metrics and how to scrape them.
        displayName: Metrics
        path: metrics
      - description: Enabled is a flag to enable Metrics
        displayName: Enabled
        path: metrics.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Exporter defines the metrics exporter container.
        displayName: Exporter
        path: metrics.exporter
      - description: Affinity to be used in the Pod.
        displayName: Affinity
        path: metrics.exporter.affinity
      - description: AntiAffinityEnabled configures PodAntiAffinity so each Pod is
          scheduled in a different Node, enabling HA. Make sure you have at least
          as many Nodes available as the replicas to not end up with unscheduled Pods.
        displayName: Anti Affinity Enabled
        path: metrics.exporter.affinity.antiAffinityEnabled
      - description: Args to be used in the Container.
        displayName: Args
        path: metrics.exporter.args
      - description: Command to be used in the Container.
        displayName: Command
        path: metrics.exporter.command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: metrics.exporter.env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: metrics.exporter.envFrom
      - description: 'Image name to be used as metrics exporter. The supported format
          is `<image>:<tag>`. Only mysqld-exporter >= v0.15.0 is supported: https://github.com/prometheus/mysqld_exporter'
        displayName: Image
        path: metrics.exporter.image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: metrics.exporter.imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: ImagePullSecrets is the list of pull Secrets to be used to pull
          the image.
        displayName: Image Pull Secrets
        path: metrics.exporter.imagePullSecrets
      - description: InitContainers to be used in the Pod.
        displayName: Init Containers
        path: metrics.exporter.initContainers
      - description: Args to be used in the Container.
        displayName: Args
        path: metrics.exporter.initContainers[0].args
      - description: Command to be used in the Container.
        displayName: Command
        path: metrics.exporter.initContainers[0].command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: metrics.exporter.initContainers[0].env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: metrics.exporter.initContainers[0].envFrom
      - description: Image name to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`.
        displayName: Image
        path: metrics.exporter.initContainers[0].image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: metrics.exporter.initContainers[0].imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: metrics.exporter.initContainers[0].livenessProbe
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: metrics.exporter.initContainers[0].readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: metrics.exporter.initContainers[0].resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: metrics.exporter.initContainers[0].securityContext
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: metrics.exporter.initContainers[0].volumeMounts
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: metrics.exporter.livenessProbe
      - description: NodeSelector to be used in the Pod.
        displayName: Node Selector
        path: metrics.exporter.nodeSelector
      - description: PodMetadata defines extra metadata for the Pod.
        displayName: Pod Metadata
        path: metrics.exporter.podMetadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: metrics.exporter.podMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: metrics.exporter.podMetadata.labels
      - description: SecurityContext holds pod-level security attributes and common
          container settings.
        displayName: Pod Security Context
        path: metrics.exporter.podSecurityContext
      - description: Port where the exporter will be listening for connections.
        displayName: Port
        path: metrics.exporter.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: PriorityClassName to be used in the Pod.
        displayName: Priority Class Name
        path: metrics.exporter.priorityClassName
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: metrics.exporter.readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: metrics.exporter.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: metrics.exporter.securityContext
      - description: ServiceAccountName is the name of the ServiceAccount to be used
          by the Pods.
        displayName: Service Account Name
        path: metrics.exporter.serviceAccountName
      - description: SidecarContainers to be used in the Pod.
        displayName: Sidecar Containers
        path: metrics.exporter.sidecarContainers
      - description: Args to be used in the Container.
        displayName: Args
        path: metrics.exporter.sidecarContainers[0].args
      - description: Command to be used in the Container.
        displayName: Command
        path: metrics.exporter.sidecarContainers[0].command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: metrics.exporter.sidecarContainers[0].env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: metrics.exporter.sidecarContainers[0].envFrom
      - description: Image name to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`.
        displayName: Image
        path: metrics.exporter.sidecarContainers[0].image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: metrics.exporter.sidecarContainers[0].imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: metrics.exporter.sidecarContainers[0].livenessProbe
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: metrics.exporter.sidecarContainers[0].readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: metrics.exporter.sidecarContainers[0].resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: metrics.exporter.sidecarContainers[0].securityContext
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: metrics.exporter.sidecarContainers[0].volumeMounts
      - description: Tolerations to be used in the Pod.
        displayName: Tolerations
        path: metrics.exporter.tolerations
      - description: TopologySpreadConstraints to be used in the Pod.
        displayName: Topology Spread Constraints
        path: metrics.exporter.topologySpreadConstraints
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: metrics.exporter.volumeMounts
      - description: Volumes to be used in the Pod.
        displayName: Volumes
        path: metrics.exporter.volumes
      - description: PasswordSecretKeyRef is a reference to the password of the monitoring
          user used by the exporter.
        displayName: Password Secret Key Ref
        path: metrics.passwordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: metrics.passwordSecretKeyRef.generate
      - description: ServiceMonitor defines the ServiceMonior object.
        displayName: Service Monitor
        path: metrics.serviceMonitor
      - description: Interval for scraping metrics.
        displayName: Interval
        path: metrics.serviceMonitor.interval
      - description: JobLabel to add to the ServiceMonitor object.
        displayName: Job Label
        path: metrics.serviceMonitor.jobLabel
      - description: PrometheusRelease is the release label to add to the ServiceMonitor
          object.
        displayName: Prometheus Release
        path: metrics.serviceMonitor.prometheusRelease
      - description: ScrapeTimeout defines the timeout for scraping metrics.
        displayName: Scrape Timeout
        path: metrics.serviceMonitor.scrapeTimeout
      - description: Username is the username of the monitoring user used by the exporter.
        displayName: Username
        path: metrics.username
      - description: MyCnf allows to specify the my.cnf file mounted by Mariadb.
        displayName: My Cnf
        path: myCnf
      - description: MyCnfConfigMapKeyRef is a reference to the my.cnf config file
          provided via a ConfigMap. If not provided, it will be defaulted with reference
          to a ConfigMap with the contents of the MyCnf field.
        displayName: My Cnf Config Map Key Ref
        path: myCnfConfigMapKeyRef
      - description: NodeSelector to be used in the Pod.
        displayName: Node Selector
        path: nodeSelector
      - description: PasswordSecretKeyRef is a reference to the password of the initial
          user provided via a Secret.
        displayName: Password Secret Key Ref
        path: passwordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: passwordSecretKeyRef.generate
      - description: PodDisruptionBudget defines the budget for replica availability.
        displayName: Pod Disruption Budget
        path: podDisruptionBudget
      - description: MaxUnavailable defines the number of maximum unavailable Pods.
        displayName: Max Unavailable
        path: podDisruptionBudget.maxUnavailable
      - description: MinAvailable defines the number of minimum available Pods.
        displayName: Min Available
        path: podDisruptionBudget.minAvailable
      - description: PodMetadata defines extra metadata for the Pod.
        displayName: Pod Metadata
        path: podMetadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: podMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: podMetadata.labels
      - description: SecurityContext holds pod-level security attributes and common
          container settings.
        displayName: Pod Security Context
        path: podSecurityContext
      - description: Port where the instances will be listening for connections.
        displayName: Port
        path: port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: PrimaryConnection defines templates to configure the primary
          Connection object.
        displayName: Primary Connection
        path: primaryConnection
      - description: HealthCheck to be used in the Connection.
        displayName: Health Check
        path: primaryConnection.healthCheck
      - description: Interval used to perform health checks.
        displayName: Interval
        path: primaryConnection.healthCheck.interval
      - description: RetryInterval is the interval used to perform health check retries.
        displayName: Retry Interval
        path: primaryConnection.healthCheck.retryInterval
      - description: Params to be used in the Connection.
        displayName: Params
        path: primaryConnection.params
      - description: Port to connect to. If not provided, it defaults to the MariaDB
          port or to the first MaxScale listener.
        displayName: Port
        path: primaryConnection.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: SecretName to be used in the Connection.
        displayName: Secret Name
        path: primaryConnection.secretName
      - description: SecretTemplate to be used in the Connection.
        displayName: Secret Template
        path: primaryConnection.secretTemplate
      - description: DatabaseKey to be used in the Secret.
        displayName: Database Key
        path: primaryConnection.secretTemplate.databaseKey
      - description: Format to be used in the Secret.
        displayName: Format
        path: primaryConnection.secretTemplate.format
      - description: HostKey to be used in the Secret.
        displayName: Host Key
        path: primaryConnection.secretTemplate.hostKey
      - description: Key to be used in the Secret.
        displayName: Key
        path: primaryConnection.secretTemplate.key
      - description: Metadata to be added to the Secret object.
        displayName: Metadata
        path: primaryConnection.secretTemplate.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: primaryConnection.secretTemplate.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: primaryConnection.secretTemplate.metadata.labels
      - description: PasswordKey to be used in the Secret.
        displayName: Password Key
        path: primaryConnection.secretTemplate.passwordKey
      - description: PortKey to be used in the Secret.
        displayName: Port Key
        path: primaryConnection.secretTemplate.portKey
      - description: UsernameKey to be used in the Secret.
        displayName: Username Key
        path: primaryConnection.secretTemplate.usernameKey
      - description: ServiceName to be used in the Connection.
        displayName: Service Name
        path: primaryConnection.serviceName
      - description: PrimaryService defines templates to configure the primary Service
          object.
        displayName: Primary Service
        path: primaryService
      - description: AllocateLoadBalancerNodePorts Service field.
        displayName: Allocate Load Balancer Node Ports
        path: primaryService.allocateLoadBalancerNodePorts
      - description: ExternalTrafficPolicy Service field.
        displayName: External Traffic Policy
        path: primaryService.externalTrafficPolicy
      - description: LoadBalancerIP Service field.
        displayName: Load Balancer IP
        path: primaryService.loadBalancerIP
      - description: LoadBalancerSourceRanges Service field.
        displayName: Load Balancer Source Ranges
        path: primaryService.loadBalancerSourceRanges
      - description: Metadata to be added to the Service metadata.
        displayName: Metadata
        path: primaryService.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: primaryService.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: primaryService.metadata.labels
      - description: SessionAffinity Service field.
        displayName: Session Affinity
        path: primaryService.sessionAffinity
      - description: Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`.
          If not defined, it defaults to `ClusterIP`.
        displayName: Type
        path: primaryService.type
      - description: PriorityClassName to be used in the Pod.
        displayName: Priority Class Name
        path: priorityClassName
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: readinessProbe
      - description: Replicas indicates the number of desired instances.
        displayName: Replicas
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Replication configures high availability via replication.
        displayName: Replication
        path: replication
      - description: Enabled is a flag to enable Replication.
        displayName: Enabled
        path: replication.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Primary is the replication configuration for the primary node.
        displayName: Primary
        path: replication.primary
      - description: AutomaticFailover indicates whether the operator should automatically
          update PodIndex to perform an automatic primary failover.
        displayName: Automatic Failover
        path: replication.primary.automaticFailover
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: PodIndex is the StatefulSet index of the primary node. The user
          may change this field to perform a manual switchover.
        displayName: Pod Index
        path: replication.primary.podIndex
      - description: ProbesEnabled indicates to use replication specific liveness
          and readiness probes. This probes check that the primary can receive queries
          and that the replica has the replication thread running.
        displayName: Probes Enabled
        path: replication.probesEnabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: ReplicaReplication is the replication configuration for the replica
          nodes.
        displayName: Replica
        path: replication.replica
      - description: ConnectionRetries to be used when the replica connects to the
          primary.
        displayName: Connection Retries
        path: replication.replica.connectionRetries
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: ConnectionTimeout to be used when the replica connects to the
          primary.
        displayName: Connection Timeout
        path: replication.replica.connectionTimeout
      - description: 'Gtid indicates which Global Transaction ID should be used when
          connecting a replica to the master. See: https://mariadb.com/kb/en/gtid/#using-current_pos-vs-slave_pos.'
        displayName: Gtid
        path: replication.replica.gtid
      - description: ReplPasswordSecretKeyRef provides a reference to the Secret to
          use as password for the replication user.
        displayName: Repl Password Secret Key Ref
        path: replication.replica.replPasswordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: replication.replica.replPasswordSecretKeyRef.generate
      - description: SyncTimeout defines the timeout for a replica to be synced with
          the primary when performing a primary switchover. If the timeout is reached,
          the replica GTID will be reset and the switchover will continue.
        displayName: Sync Timeout
        path: replication.replica.syncTimeout
      - description: 'WaitPoint defines whether the transaction should wait for ACK
          before committing to the storage engine. More info: https://mariadb.com/kb/en/semisynchronous-replication/#rpl_semi_sync_master_wait_point.'
        displayName: Wait Point
        path: replication.replica.waitPoint
      - description: 'SyncBinlog indicates whether the binary log should be synchronized
          to the disk after every event. It trades off performance for consistency.
          See: https://mariadb.com/kb/en/replication-and-binary-log-system-variables/#sync_binlog.'
        displayName: Sync Binlog
        path: replication.syncBinlog
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: RootEmptyPassword indicates if the root password should be empty.
        displayName: Root Empty Password
        path: rootEmptyPassword
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: RootPasswordSecretKeyRef is a reference to a Secret key containing
          the root password.
        displayName: Root Password Secret Key Ref
        path: rootPasswordSecretKeyRef
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: rootPasswordSecretKeyRef.generate
      - description: SecondaryConnection defines templates to configure the secondary
          Connection object.
        displayName: Secondary Connection
        path: secondaryConnection
      - description: HealthCheck to be used in the Connection.
        displayName: Health Check
        path: secondaryConnection.healthCheck
      - description: Interval used to perform health checks.
        displayName: Interval
        path: secondaryConnection.healthCheck.interval
      - description: RetryInterval is the interval used to perform health check retries.
        displayName: Retry Interval
        path: secondaryConnection.healthCheck.retryInterval
      - description: Params to be used in the Connection.
        displayName: Params
        path: secondaryConnection.params
      - description: Port to connect to. If not provided, it defaults to the MariaDB
          port or to the first MaxScale listener.
        displayName: Port
        path: secondaryConnection.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: SecretName to be used in the Connection.
        displayName: Secret Name
        path: secondaryConnection.secretName
      - description: SecretTemplate to be used in the Connection.
        displayName: Secret Template
        path: secondaryConnection.secretTemplate
      - description: DatabaseKey to be used in the Secret.
        displayName: Database Key
        path: secondaryConnection.secretTemplate.databaseKey
      - description: Format to be used in the Secret.
        displayName: Format
        path: secondaryConnection.secretTemplate.format
      - description: HostKey to be used in the Secret.
        displayName: Host Key
        path: secondaryConnection.secretTemplate.hostKey
      - description: Key to be used in the Secret.
        displayName: Key
        path: secondaryConnection.secretTemplate.key
      - description: Metadata to be added to the Secret object.
        displayName: Metadata
        path: secondaryConnection.secretTemplate.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: secondaryConnection.secretTemplate.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: secondaryConnection.secretTemplate.metadata.labels
      - description: PasswordKey to be used in the Secret.
        displayName: Password Key
        path: secondaryConnection.secretTemplate.passwordKey
      - description: PortKey to be used in the Secret.
        displayName: Port Key
        path: secondaryConnection.secretTemplate.portKey
      - description: UsernameKey to be used in the Secret.
        displayName: Username Key
        path: secondaryConnection.secretTemplate.usernameKey
      - description: ServiceName to be used in the Connection.
        displayName: Service Name
        path: secondaryConnection.serviceName
      - description: SecondaryService defines templates to configure the secondary
          Service object.
        displayName: Secondary Service
        path: secondaryService
      - description: AllocateLoadBalancerNodePorts Service field.
        displayName: Allocate Load Balancer Node Ports
        path: secondaryService.allocateLoadBalancerNodePorts
      - description: ExternalTrafficPolicy Service field.
        displayName: External Traffic Policy
        path: secondaryService.externalTrafficPolicy
      - description: LoadBalancerIP Service field.
        displayName: Load Balancer IP
        path: secondaryService.loadBalancerIP
      - description: LoadBalancerSourceRanges Service field.
        displayName: Load Balancer Source Ranges
        path: secondaryService.loadBalancerSourceRanges
      - description: Metadata to be added to the Service metadata.
        displayName: Metadata
        path: secondaryService.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: secondaryService.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: secondaryService.metadata.labels
      - description: SessionAffinity Service field.
        displayName: Session Affinity
        path: secondaryService.sessionAffinity
      - description: Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`.
          If not defined, it defaults to `ClusterIP`.
        displayName: Type
        path: secondaryService.type
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: securityContext
      - description: Service defines templates to configure the general Service object.
        displayName: Service
        path: service
      - description: AllocateLoadBalancerNodePorts Service field.
        displayName: Allocate Load Balancer Node Ports
        path: service.allocateLoadBalancerNodePorts
      - description: ExternalTrafficPolicy Service field.
        displayName: External Traffic Policy
        path: service.externalTrafficPolicy
      - description: LoadBalancerIP Service field.
        displayName: Load Balancer IP
        path: service.loadBalancerIP
      - description: LoadBalancerSourceRanges Service field.
        displayName: Load Balancer Source Ranges
        path: service.loadBalancerSourceRanges
      - description: Metadata to be added to the Service metadata.
        displayName: Metadata
        path: service.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: service.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: service.metadata.labels
      - description: SessionAffinity Service field.
        displayName: Session Affinity
        path: service.sessionAffinity
      - description: Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`.
          If not defined, it defaults to `ClusterIP`.
        displayName: Type
        path: service.type
      - description: ServiceAccountName is the name of the ServiceAccount to be used
          by the Pods.
        displayName: Service Account Name
        path: serviceAccountName
      - description: SidecarContainers to be used in the Pod.
        displayName: Sidecar Containers
        path: sidecarContainers
      - description: Args to be used in the Container.
        displayName: Args
        path: sidecarContainers[0].args
      - description: Command to be used in the Container.
        displayName: Command
        path: sidecarContainers[0].command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: sidecarContainers[0].env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: sidecarContainers[0].envFrom
      - description: Image name to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`.
        displayName: Image
        path: sidecarContainers[0].image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: sidecarContainers[0].imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: sidecarContainers[0].livenessProbe
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: sidecarContainers[0].readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: sidecarContainers[0].resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: sidecarContainers[0].securityContext
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: sidecarContainers[0].volumeMounts
      - description: Storage defines the storage options to be used for provisioning
          the PVCs mounted by MariaDB.
        displayName: Storage
        path: storage
      - description: Ephemeral indicates whether to use ephemeral storage in the PVCs.
          It is only compatible with non HA MariaDBs.
        displayName: Ephemeral
        path: storage.ephemeral
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: ResizeInUseVolumes indicates whether the PVCs can be resized.
          The 'StorageClassName' used should have 'allowVolumeExpansion' set to 'true'
          to allow resizing. It defaults to true.
        displayName: Resize In Use Volumes
        path: storage.resizeInUseVolumes
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Size of the PVCs to be mounted by MariaDB. Required if not provided
          in 'VolumeClaimTemplate'. It superseeds the storage size specified in 'VolumeClaimTemplate'.
        displayName: Size
        path: storage.size
      - description: StorageClassName to be used to provision the PVCS. It superseeds
          the 'StorageClassName' specified in 'VolumeClaimTemplate'. If not provided,
          the default 'StorageClass' configured in the cluster is used.
        displayName: Storage Class Name
        path: storage.storageClassName
      - description: VolumeClaimTemplate provides a template to define the PVCs.
        displayName: Volume Claim Template
        path: storage.volumeClaimTemplate
      - description: Metadata to be added to the PVC metadata.
        displayName: Metadata
        path: storage.volumeClaimTemplate.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: storage.volumeClaimTemplate.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: storage.volumeClaimTemplate.metadata.labels
      - description: WaitForVolumeResize indicates whether to wait for the PVCs to
          be resized before marking the MariaDB object as ready. This will block other
          operations such as cluster recovery while the resize is in progress. It
          defaults to true.
        displayName: Wait For Volume Resize
        path: storage.waitForVolumeResize
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Tolerations to be used in the Pod.
        displayName: Tolerations
        path: tolerations
      - description: TopologySpreadConstraints to be used in the Pod.
        displayName: Topology Spread Constraints
        path: topologySpreadConstraints
      - description: PodDisruptionBudget defines the update strategy for the StatefulSet
          object.
        displayName: Update Strategy
        path: updateStrategy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:updateStrategy
      - description: Username is the username of the user to be created on bootstrap.
        displayName: Username
        path: username
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: volumeMounts
      - description: Volumes to be used in the Pod.
        displayName: Volumes
        path: volumes
      statusDescriptors:
      - description: Conditions for the Mariadb object.
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: CurrentPrimary is the primary Pod.
        displayName: Current Primary
        path: currentPrimary
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Pod
      - description: CurrentPrimaryPodIndex is the primary Pod index.
        displayName: Current Primary Pod Index
        path: currentPrimaryPodIndex
      - description: GaleraRecovery is the Galera recovery current state.
        displayName: Galera Recovery
        path: galeraRecovery
      - description: ReplicationStatus is the replication current state for each Pod.
        displayName: Replication Status
        path: replicationStatus
      version: v1alpha1
    - description: MaxScale is the Schema for the maxscales API. It is used to define
        MaxScale clusters.
      displayName: Max Scale
      kind: MaxScale
      name: maxscales.k8s.mariadb.com
      resources:
      - kind: Connection
        name: ""
        version: v1alpha1
      - kind: Deployment
        name: ""
        version: v1
      - kind: Event
        name: ""
        version: v1
      - kind: Grant
        name: ""
        version: v1alpha1
      - kind: MaxScale
        name: ""
        version: v1alpha1
      - kind: PodDisruptionBudget
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: ServiceAccount
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: v1
      - kind: User
        name: ""
        version: v1alpha1
      specDescriptors:
      - description: Admin configures the admin REST API and GUI.
        displayName: Admin
        path: admin
      - description: GuiEnabled indicates whether the admin GUI should be enabled.
        displayName: Gui Enabled
        path: admin.guiEnabled
      - description: Port where the admin REST API and GUI will be exposed.
        displayName: Port
        path: admin.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Affinity to be used in the Pod.
        displayName: Affinity
        path: affinity
      - description: AntiAffinityEnabled configures PodAntiAffinity so each Pod is
          scheduled in a different Node, enabling HA. Make sure you have at least
          as many Nodes available as the replicas to not end up with unscheduled Pods.
        displayName: Anti Affinity Enabled
        path: affinity.antiAffinityEnabled
      - description: Args to be used in the Container.
        displayName: Args
        path: args
      - description: Auth defines the credentials required for MaxScale to connect
          to MariaDB.
        displayName: Auth
        path: auth
      - description: AdminPasswordSecretKeyRef is Secret key reference to the admin
          password to call the admin REST API. It is defaulted if not provided.
        displayName: Admin Password Secret Key Ref
        path: auth.adminPasswordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: auth.adminPasswordSecretKeyRef.generate
      - description: AdminUsername is an admin username to call the admin REST API.
          It is defaulted if not provided.
        displayName: Admin Username
        path: auth.adminUsername
      - description: ClientMaxConnections defines the maximum number of connections
          that the client can establish. If HA is enabled, make sure to increase this
          value, as more MaxScale replicas implies more connections. It defaults to
          30 times the number of MaxScale replicas.
        displayName: Client Max Connections
        path: auth.clientMaxConnections
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: ClientPasswordSecretKeyRef is Secret key reference to the password
          to connect to MaxScale. It is defaulted if not provided.
        displayName: Client Password Secret Key Ref
        path: auth.clientPasswordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: auth.clientPasswordSecretKeyRef.generate
      - description: ClientUsername is the user to connect to MaxScale. It is defaulted
          if not provided.
        displayName: Client Username
        path: auth.clientUsername
      - description: DeleteDefaultAdmin determines whether the default admin user
          should be deleted after the initial configuration. If not provided, it defaults
          to true.
        displayName: Delete Default Admin
        path: auth.deleteDefaultAdmin
      - description: Generate  defies whether the operator should generate users and
          grants for MaxScale to work. It only supports MariaDBs specified via spec.mariaDbRef.
        displayName: Generate
        path: auth.generate
      - description: MetricsPasswordSecretKeyRef is Secret key reference to the metrics
          password to call the admib REST API. It is defaulted if metrics are enabled.
        displayName: Metrics Password Secret Key Ref
        path: auth.metricsPasswordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: auth.metricsPasswordSecretKeyRef.generate
      - description: MetricsUsername is an metrics username to call the REST API.
          It is defaulted if metrics are enabled.
        displayName: Metrics Username
        path: auth.metricsUsername
      - description: MonitorMaxConnections defines the maximum number of connections
          that the monitor can establish. If HA is enabled, make sure to increase
          this value, as more MaxScale replicas implies more connections. It defaults
          to 30 times the number of MaxScale replicas.
        displayName: Monitor Max Connections
        path: auth.monitorMaxConnections
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: MonitorPasswordSecretKeyRef is Secret key reference to the password
          used by MaxScale monitor to connect to MariaDB server. It is defaulted if
          not provided.
        displayName: Monitor Password Secret Key Ref
        path: auth.monitorPasswordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: auth.monitorPasswordSecretKeyRef.generate
      - description: MonitorUsername is the user used by MaxScale monitor to connect
          to MariaDB server. It is defaulted if not provided.
        displayName: Monitor Username
        path: auth.monitorUsername
      - description: ServerMaxConnections defines the maximum number of connections
          that the server can establish. If HA is enabled, make sure to increase this
          value, as more MaxScale replicas implies more connections. It defaults to
          30 times the number of MaxScale replicas.
        displayName: Server Max Connections
        path: auth.serverMaxConnections
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: ServerPasswordSecretKeyRef is Secret key reference to the password
          used by MaxScale to connect to MariaDB server. It is defaulted if not provided.
        displayName: Server Password Secret Key Ref
        path: auth.serverPasswordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: auth.serverPasswordSecretKeyRef.generate
      - description: ServerUsername is the user used by MaxScale to connect to MariaDB
          server. It is defaulted if not provided.
        displayName: Server Username
        path: auth.serverUsername
      - description: SyncMaxConnections defines the maximum number of connections
          that the sync can establish. If HA is enabled, make sure to increase this
          value, as more MaxScale replicas implies more connections. It defaults to
          30 times the number of MaxScale replicas.
        displayName: Sync Max Connections
        path: auth.syncMaxConnections
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: SyncPasswordSecretKeyRef is Secret key reference to the password
          used by MaxScale config to connect to MariaDB server. It is defaulted when
          HA is enabled.
        displayName: Sync Password Secret Key Ref
        path: auth.syncPasswordSecretKeyRef
      - description: Generate indicates whether the Secret should be generated if
          the Secret referenced is not present.
        displayName: Generate
        path: auth.syncPasswordSecretKeyRef.generate
      - description: MonitoSyncUsernamerUsername is the user used by MaxScale config
          sync to connect to MariaDB server. It is defaulted when HA is enabled.
        displayName: Sync Username
        path: auth.syncUsername
      - description: Command to be used in the Container.
        displayName: Command
        path: command
      - description: Config defines the MaxScale configuration.
        displayName: Config
        path: config
      - description: 'Params is a key value pair of parameters to be used in the MaxScale
          static configuration file. Any parameter supported by MaxScale may be specified
          here. See reference: https://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#global-settings.'
        displayName: Params
        path: config.params
      - description: Sync defines how to replicate configuration across MaxScale replicas.
          It is defaulted when HA is enabled.
        displayName: Sync
        path: config.sync
      - description: Database is the MariaDB logical database where the 'maxscale_config'
          table will be created in order to persist and synchronize config changes.
          If not provided, it defaults to 'mysql'.
        displayName: Database
        path: config.sync.database
      - description: Interval defines the config synchronization interval. It is defaulted
          if not provided.
        displayName: Interval
        path: config.sync.interval
      - description: Interval defines the config synchronization timeout. It is defaulted
          if not provided.
        displayName: Timeout
        path: config.sync.timeout
      - description: VolumeClaimTemplate provides a template to define the PVCs for
          storing MaxScale runtime configuration files. It is defaulted if not provided.
        displayName: Volume Claim Template
        path: config.volumeClaimTemplate
      - description: Metadata to be added to the PVC metadata.
        displayName: Metadata
        path: config.volumeClaimTemplate.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: config.volumeClaimTemplate.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: config.volumeClaimTemplate.metadata.labels
      - description: Connection provides a template to define the Connection for MaxScale.
        displayName: Connection
        path: connection
      - description: HealthCheck to be used in the Connection.
        displayName: Health Check
        path: connection.healthCheck
      - description: Interval used to perform health checks.
        displayName: Interval
        path: connection.healthCheck.interval
      - description: RetryInterval is the interval used to perform health check retries.
        displayName: Retry Interval
        path: connection.healthCheck.retryInterval
      - description: Params to be used in the Connection.
        displayName: Params
        path: connection.params
      - description: Port to connect to. If not provided, it defaults to the MariaDB
          port or to the first MaxScale listener.
        displayName: Port
        path: connection.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: SecretName to be used in the Connection.
        displayName: Secret Name
        path: connection.secretName
      - description: SecretTemplate to be used in the Connection.
        displayName: Secret Template
        path: connection.secretTemplate
      - description: DatabaseKey to be used in the Secret.
        displayName: Database Key
        path: connection.secretTemplate.databaseKey
      - description: Format to be used in the Secret.
        displayName: Format
        path: connection.secretTemplate.format
      - description: HostKey to be used in the Secret.
        displayName: Host Key
        path: connection.secretTemplate.hostKey
      - description: Key to be used in the Secret.
        displayName: Key
        path: connection.secretTemplate.key
      - description: Metadata to be added to the Secret object.
        displayName: Metadata
        path: connection.secretTemplate.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: connection.secretTemplate.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: connection.secretTemplate.metadata.labels
      - description: PasswordKey to be used in the Secret.
        displayName: Password Key
        path: connection.secretTemplate.passwordKey
      - description: PortKey to be used in the Secret.
        displayName: Port Key
        path: connection.secretTemplate.portKey
      - description: UsernameKey to be used in the Secret.
        displayName: Username Key
        path: connection.secretTemplate.usernameKey
      - description: ServiceName to be used in the Connection.
        displayName: Service Name
        path: connection.serviceName
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: envFrom
      - description: GuiKubernetesService defines a template for a Kubernetes Service
          object to connect to MaxScale's GUI.
        displayName: Gui Kubernetes Service
        path: guiKubernetesService
      - description: AllocateLoadBalancerNodePorts Service field.
        displayName: Allocate Load Balancer Node Ports
        path: guiKubernetesService.allocateLoadBalancerNodePorts
      - description: ExternalTrafficPolicy Service field.
        displayName: External Traffic Policy
        path: guiKubernetesService.externalTrafficPolicy
      - description: LoadBalancerIP Service field.
        displayName: Load Balancer IP
        path: guiKubernetesService.loadBalancerIP
      - description: LoadBalancerSourceRanges Service field.
        displayName: Load Balancer Source Ranges
        path: guiKubernetesService.loadBalancerSourceRanges
      - description: Metadata to be added to the Service metadata.
        displayName: Metadata
        path: guiKubernetesService.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: guiKubernetesService.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: guiKubernetesService.metadata.labels
      - description: SessionAffinity Service field.
        displayName: Session Affinity
        path: guiKubernetesService.sessionAffinity
      - description: Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`.
          If not defined, it defaults to `ClusterIP`.
        displayName: Type
        path: guiKubernetesService.type
      - description: Image name to be used by the MaxScale instances. The supported
          format is `<image>:<tag>`. Only MaxScale official images are supported.
        displayName: Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ImagePullSecrets is the list of pull Secrets to be used to pull
          the image.
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: InheritMetadata defines the metadata to be inherited by children
          resources.
        displayName: Inherit Metadata
        path: inheritMetadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: inheritMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: inheritMetadata.labels
      - description: InitContainers to be used in the Pod.
        displayName: Init Containers
        path: initContainers
      - description: Args to be used in the Container.
        displayName: Args
        path: initContainers[0].args
      - description: Command to be used in the Container.
        displayName: Command
        path: initContainers[0].command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: initContainers[0].env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: initContainers[0].envFrom
      - description: Image name to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`.
        displayName: Image
        path: initContainers[0].image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: initContainers[0].imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: initContainers[0].livenessProbe
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: initContainers[0].readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: initContainers[0].resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: initContainers[0].securityContext
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: initContainers[0].volumeMounts
      - description: KubernetesService defines a template for a Kubernetes Service
          object to connect to MaxScale.
        displayName: Kubernetes Service
        path: kubernetesService
      - description: AllocateLoadBalancerNodePorts Service field.
        displayName: Allocate Load Balancer Node Ports
        path: kubernetesService.allocateLoadBalancerNodePorts
      - description: ExternalTrafficPolicy Service field.
        displayName: External Traffic Policy
        path: kubernetesService.externalTrafficPolicy
      - description: LoadBalancerIP Service field.
        displayName: Load Balancer IP
        path: kubernetesService.loadBalancerIP
      - description: LoadBalancerSourceRanges Service field.
        displayName: Load Balancer Source Ranges
        path: kubernetesService.loadBalancerSourceRanges
      - description: Metadata to be added to the Service metadata.
        displayName: Metadata
        path: kubernetesService.metadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: kubernetesService.metadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: kubernetesService.metadata.labels
      - description: SessionAffinity Service field.
        displayName: Session Affinity
        path: kubernetesService.sessionAffinity
      - description: Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`.
          If not defined, it defaults to `ClusterIP`.
        displayName: Type
        path: kubernetesService.type
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: livenessProbe
      - description: MariaDBRef is a reference to the MariaDB that MaxScale points
          to. It is used to initialize the servers field.
        displayName: Maria DBRef
        path: mariaDbRef
      - description: WaitForIt indicates whether the controller using this reference
          should wait for MariaDB to be ready.
        displayName: Wait For It
        path: mariaDbRef.waitForIt
      - description: Metrics configures metrics and how to scrape them.
        displayName: Metrics
        path: metrics
      - description: Enabled is a flag to enable Metrics
        displayName: Enabled
        path: metrics.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Exporter defines the metrics exporter container.
        displayName: Exporter
        path: metrics.exporter
      - description: Affinity to be used in the Pod.
        displayName: Affinity
        path: metrics.exporter.affinity
      - description: AntiAffinityEnabled configures PodAntiAffinity so each Pod is
          scheduled in a different Node, enabling HA. Make sure you have at least
          as many Nodes available as the replicas to not end up with unscheduled Pods.
        displayName: Anti Affinity Enabled
        path: metrics.exporter.affinity.antiAffinityEnabled
      - description: Args to be used in the Container.
        displayName: Args
        path: metrics.exporter.args
      - description: Command to be used in the Container.
        displayName: Command
        path: metrics.exporter.command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: metrics.exporter.env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: metrics.exporter.envFrom
      - description: 'Image name to be used as metrics exporter. The supported format
          is `<image>:<tag>`. Only mysqld-exporter >= v0.15.0 is supported: https://github.com/prometheus/mysqld_exporter'
        displayName: Image
        path: metrics.exporter.image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: metrics.exporter.imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: ImagePullSecrets is the list of pull Secrets to be used to pull
          the image.
        displayName: Image Pull Secrets
        path: metrics.exporter.imagePullSecrets
      - description: InitContainers to be used in the Pod.
        displayName: Init Containers
        path: metrics.exporter.initContainers
      - description: Args to be used in the Container.
        displayName: Args
        path: metrics.exporter.initContainers[0].args
      - description: Command to be used in the Container.
        displayName: Command
        path: metrics.exporter.initContainers[0].command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: metrics.exporter.initContainers[0].env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: metrics.exporter.initContainers[0].envFrom
      - description: Image name to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`.
        displayName: Image
        path: metrics.exporter.initContainers[0].image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: metrics.exporter.initContainers[0].imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: metrics.exporter.initContainers[0].livenessProbe
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: metrics.exporter.initContainers[0].readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: metrics.exporter.initContainers[0].resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: metrics.exporter.initContainers[0].securityContext
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: metrics.exporter.initContainers[0].volumeMounts
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: metrics.exporter.livenessProbe
      - description: NodeSelector to be used in the Pod.
        displayName: Node Selector
        path: metrics.exporter.nodeSelector
      - description: PodMetadata defines extra metadata for the Pod.
        displayName: Pod Metadata
        path: metrics.exporter.podMetadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: metrics.exporter.podMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: metrics.exporter.podMetadata.labels
      - description: SecurityContext holds pod-level security attributes and common
          container settings.
        displayName: Pod Security Context
        path: metrics.exporter.podSecurityContext
      - description: Port where the exporter will be listening for connections.
        displayName: Port
        path: metrics.exporter.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: PriorityClassName to be used in the Pod.
        displayName: Priority Class Name
        path: metrics.exporter.priorityClassName
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: metrics.exporter.readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: metrics.exporter.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: metrics.exporter.securityContext
      - description: ServiceAccountName is the name of the ServiceAccount to be used
          by the Pods.
        displayName: Service Account Name
        path: metrics.exporter.serviceAccountName
      - description: SidecarContainers to be used in the Pod.
        displayName: Sidecar Containers
        path: metrics.exporter.sidecarContainers
      - description: Args to be used in the Container.
        displayName: Args
        path: metrics.exporter.sidecarContainers[0].args
      - description: Command to be used in the Container.
        displayName: Command
        path: metrics.exporter.sidecarContainers[0].command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: metrics.exporter.sidecarContainers[0].env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: metrics.exporter.sidecarContainers[0].envFrom
      - description: Image name to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`.
        displayName: Image
        path: metrics.exporter.sidecarContainers[0].image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: metrics.exporter.sidecarContainers[0].imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: metrics.exporter.sidecarContainers[0].livenessProbe
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: metrics.exporter.sidecarContainers[0].readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: metrics.exporter.sidecarContainers[0].resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: metrics.exporter.sidecarContainers[0].securityContext
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: metrics.exporter.sidecarContainers[0].volumeMounts
      - description: Tolerations to be used in the Pod.
        displayName: Tolerations
        path: metrics.exporter.tolerations
      - description: TopologySpreadConstraints to be used in the Pod.
        displayName: Topology Spread Constraints
        path: metrics.exporter.topologySpreadConstraints
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: metrics.exporter.volumeMounts
      - description: Volumes to be used in the Pod.
        displayName: Volumes
        path: metrics.exporter.volumes
      - description: ServiceMonitor defines the ServiceMonior object.
        displayName: Service Monitor
        path: metrics.serviceMonitor
      - description: Interval for scraping metrics.
        displayName: Interval
        path: metrics.serviceMonitor.interval
      - description: JobLabel to add to the ServiceMonitor object.
        displayName: Job Label
        path: metrics.serviceMonitor.jobLabel
      - description: PrometheusRelease is the release label to add to the ServiceMonitor
          object.
        displayName: Prometheus Release
        path: metrics.serviceMonitor.prometheusRelease
      - description: ScrapeTimeout defines the timeout for scraping metrics.
        displayName: Scrape Timeout
        path: metrics.serviceMonitor.scrapeTimeout
      - description: Monitor monitors MariaDB server instances. It is required if
          'spec.mariaDbRef' is not provided.
        displayName: Monitor
        path: monitor
      - description: CooperativeMonitoring enables coordination between multiple MaxScale
          instances running monitors. It is defaulted when HA is enabled.
        displayName: Cooperative Monitoring
        path: monitor.cooperativeMonitoring
      - description: Interval used to monitor MariaDB servers. It is defaulted if
          not provided.
        displayName: Interval
        path: monitor.interval
      - description: Module is the module to use to monitor MariaDB servers. It is
          mandatory when no MariaDB reference is provided.
        displayName: Module
        path: monitor.module
      - description: Name is the identifier of the monitor. It is defaulted if not
          provided.
        displayName: Name
        path: monitor.name
      - description: 'Params defines extra parameters to pass to the monitor. Any
          parameter supported by MaxScale may be specified here. See reference: https://mariadb.com/kb/en/mariadb-maxscale-2308-common-monitor-parameters/.
          Monitor specific parameter are also suported: https://mariadb.com/kb/en/mariadb-maxscale-2308-galera-monitor/#galera-monitor-optional-parameters.
          https://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-monitor/#configuration.'
        displayName: Params
        path: monitor.params
      - description: Suspend indicates whether the current resource should be suspended
          or not. Feature flag --feature-maxscale-suspend is required in the controller
          to enable this.
        displayName: Suspend
        path: monitor.suspend
      - description: NodeSelector to be used in the Pod.
        displayName: Node Selector
        path: nodeSelector
      - description: PodDisruptionBudget defines the budget for replica availability.
        displayName: Pod Disruption Budget
        path: podDisruptionBudget
      - description: MaxUnavailable defines the number of maximum unavailable Pods.
        displayName: Max Unavailable
        path: podDisruptionBudget.maxUnavailable
      - description: MinAvailable defines the number of minimum available Pods.
        displayName: Min Available
        path: podDisruptionBudget.minAvailable
      - description: PodMetadata defines extra metadata for the Pod.
        displayName: Pod Metadata
        path: podMetadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: podMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: podMetadata.labels
      - description: SecurityContext holds pod-level security attributes and common
          container settings.
        displayName: Pod Security Context
        path: podSecurityContext
      - description: PriorityClassName to be used in the Pod.
        displayName: Priority Class Name
        path: priorityClassName
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: readinessProbe
      - description: Replicas indicates the number of desired instances.
        displayName: Replicas
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: RequeueInterval is used to perform requeue reconciliations. If
          not defined, it defaults to 10s.
        displayName: Requeue Interval
        path: requeueInterval
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: securityContext
      - description: Servers are the MariaDB servers to forward traffic to. It is
          required if 'spec.mariaDbRef' is not provided.
        displayName: Servers
        path: servers
      - description: Address is the network address of the MariaDB server.
        displayName: Address
        path: servers[0].address
      - description: Maintenance indicates whether the server is in maintenance mode.
        displayName: Maintenance
        path: servers[0].maintenance
      - description: Name is the identifier of the MariaDB server.
        displayName: Name
        path: servers[0].name
      - description: 'Params defines extra parameters to pass to the server. Any parameter
          supported by MaxScale may be specified here. See reference: https://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#server_1.'
        displayName: Params
        path: servers[0].params
      - description: Port is the network port of the MariaDB server. If not provided,
          it defaults to 3306.
        displayName: Port
        path: servers[0].port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Protocol is the MaxScale protocol to use when communicating with
          this MariaDB server. If not provided, it defaults to MariaDBBackend.
        displayName: Protocol
        path: servers[0].protocol
      - description: ServiceAccountName is the name of the ServiceAccount to be used
          by the Pods.
        displayName: Service Account Name
        path: serviceAccountName
      - description: Services define how the traffic is forwarded to the MariaDB servers.
          It is defaulted if not provided.
        displayName: Services
        path: services
      - description: MaxScaleListener defines how the MaxScale server will listen
          for connections.
        displayName: Listener
        path: services[0].listener
      - description: Name is the identifier of the listener. It is defaulted if not
          provided
        displayName: Name
        path: services[0].listener.name
      - description: 'Params defines extra parameters to pass to the listener. Any
          parameter supported by MaxScale may be specified here. See reference: https://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#listener_1.'
        displayName: Params
        path: services[0].listener.params
      - description: Port is the network port where the MaxScale server will listen.
        displayName: Port
        path: services[0].listener.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Protocol is the MaxScale protocol to use when communicating with
          the client. If not provided, it defaults to MariaDBProtocol.
        displayName: Protocol
        path: services[0].listener.protocol
      - description: Suspend indicates whether the current resource should be suspended
          or not. Feature flag --feature-maxscale-suspend is required in the controller
          to enable this.
        displayName: Suspend
        path: services[0].listener.suspend
      - description: Name is the identifier of the MaxScale service.
        displayName: Name
        path: services[0].name
      - description: 'Params defines extra parameters to pass to the service. Any
          parameter supported by MaxScale may be specified here. See reference: https://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#service_1.
          Router specific parameter are also suported: https://mariadb.com/kb/en/mariadb-maxscale-2308-readwritesplit/#configuration.
          https://mariadb.com/kb/en/mariadb-maxscale-2308-readconnroute/#configuration.'
        displayName: Params
        path: services[0].params
      - description: Router is the type of router to use.
        displayName: Router
        path: services[0].router
      - description: Suspend indicates whether the current resource should be suspended
          or not. Feature flag --feature-maxscale-suspend is required in the controller
          to enable this.
        displayName: Suspend
        path: services[0].suspend
      - description: SidecarContainers to be used in the Pod.
        displayName: Sidecar Containers
        path: sidecarContainers
      - description: Args to be used in the Container.
        displayName: Args
        path: sidecarContainers[0].args
      - description: Command to be used in the Container.
        displayName: Command
        path: sidecarContainers[0].command
      - description: Env represents the environment variables to be injected in a
          container.
        displayName: Env
        path: sidecarContainers[0].env
      - description: EnvFrom represents the references (via ConfigMap and Secrets)
          to environment variables to be injected in the container.
        displayName: Env From
        path: sidecarContainers[0].envFrom
      - description: Image name to be used by the MariaDB instances. The supported
          format is `<image>:<tag>`.
        displayName: Image
        path: sidecarContainers[0].image
      - description: ImagePullPolicy is the image pull policy. One of `Always`, `Never`
          or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.
        displayName: Image Pull Policy
        path: sidecarContainers[0].imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: LivenessProbe to be used in the Container.
        displayName: Liveness Probe
        path: sidecarContainers[0].livenessProbe
      - description: ReadinessProbe to be used in the Container.
        displayName: Readiness Probe
        path: sidecarContainers[0].readinessProbe
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: sidecarContainers[0].resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: sidecarContainers[0].securityContext
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: sidecarContainers[0].volumeMounts
      - description: Tolerations to be used in the Pod.
        displayName: Tolerations
        path: tolerations
      - description: TopologySpreadConstraints to be used in the Pod.
        displayName: Topology Spread Constraints
        path: topologySpreadConstraints
      - description: UpdateStrategy defines the update strategy for the StatefulSet
          object.
        displayName: Update Strategy
        path: updateStrategy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:updateStrategy
      - description: VolumeMounts to be used in the Container.
        displayName: Volume Mounts
        path: volumeMounts
      - description: Volumes to be used in the Pod.
        displayName: Volumes
        path: volumes
      statusDescriptors:
      - description: Conditions for the MaxScale object.
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: ConfigSync is the state of config sync.
        displayName: Config Sync
        path: configSync
      - description: Listeners is the state of the listeners in the MaxScale API.
        displayName: Listeners
        path: listeners
      - description: Monitor is the state of the monitor in the MaxScale API.
        displayName: Monitor
        path: monitor
      - description: PrimaryServer is the primary server in the MaxScale API.
        displayName: Primary Server
        path: primaryServer
      - description: Replicas indicates the number of current instances.
        displayName: Replicas
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Servers is the state of the servers in the MaxScale API.
        displayName: Servers
        path: servers
      - description: Services is the state of the services in the MaxScale API.
        displayName: Services
        path: services
      version: v1alpha1
    - description: Restore is the Schema for the restores API. It is used to define
        restore jobs and its restoration source.
      displayName: Restore
      kind: Restore
      name: restores.k8s.mariadb.com
      resources:
      - kind: Job
        name: ""
        version: v1
      - kind: Restore
        name: ""
        version: v1alpha1
      - kind: ServiceAccount
        name: ""
        version: v1
      specDescriptors:
      - description: Affinity to be used in the Pod.
        displayName: Affinity
        path: affinity
      - description: AntiAffinityEnabled configures PodAntiAffinity so each Pod is
          scheduled in a different Node, enabling HA. Make sure you have at least
          as many Nodes available as the replicas to not end up with unscheduled Pods.
        displayName: Anti Affinity Enabled
        path: affinity.antiAffinityEnabled
      - description: Args to be used in the Container.
        displayName: Args
        path: args
      - description: BackoffLimit defines the maximum number of attempts to successfully
          perform a Backup.
        displayName: Backoff Limit
        path: backoffLimit
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: BackupRef is a reference to a Backup object. It has priority
          over S3 and Volume.
        displayName: Backup Ref
        path: backupRef
      - description: 'Database defines the logical database to be restored. If not
          provided, all databases available in the backup are restored. IMPORTANT:
          The database must previously exist.'
        displayName: Database
        path: database
      - description: ImagePullSecrets is the list of pull Secrets to be used to pull
          the image.
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: InheritMetadata defines the metadata to be inherited by children
          resources.
        displayName: Inherit Metadata
        path: inheritMetadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: inheritMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: inheritMetadata.labels
      - description: LogLevel to be used n the Backup Job. It defaults to 'info'.
        displayName: Log Level
        path: logLevel
      - description: MariaDBRef is a reference to a MariaDB object.
        displayName: Maria DBRef
        path: mariaDbRef
      - description: WaitForIt indicates whether the controller using this reference
          should wait for MariaDB to be ready.
        displayName: Wait For It
        path: mariaDbRef.waitForIt
      - description: NodeSelector to be used in the Pod.
        displayName: Node Selector
        path: nodeSelector
      - description: PodMetadata defines extra metadata for the Pod.
        displayName: Pod Metadata
        path: podMetadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: podMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: podMetadata.labels
      - description: SecurityContext holds pod-level security attributes and common
          container settings.
        displayName: Pod Security Context
        path: podSecurityContext
      - description: PriorityClassName to be used in the Pod.
        displayName: Priority Class Name
        path: priorityClassName
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: RestartPolicy to be added to the Backup Job.
        displayName: Restart Policy
        path: restartPolicy
      - description: S3 defines the configuration to restore backups from a S3 compatible
          storage. It has priority over Volume.
        displayName: S3
        path: s3
      - description: AccessKeyIdSecretKeyRef is a reference to a Secret key containing
          the S3 access key id.
        displayName: Access Key Id Secret Key Ref
        path: s3.accessKeyIdSecretKeyRef
      - description: Bucket is the name Name of the bucket to store backups.
        displayName: Bucket
        path: s3.bucket
      - description: Endpoint is the S3 API endpoint without scheme.
        displayName: Endpoint
        path: s3.endpoint
      - description: 'Prefix indicates a folder/subfolder in the bucket. For example:
          mariadb/ or mariadb/backups. A trailing slash ''/'' is added if not provided.'
        displayName: Prefix
        path: s3.prefix
      - description: Region is the S3 region name to use.
        displayName: Region
        path: s3.region
      - description: AccessKeyIdSecretKeyRef is a reference to a Secret key containing
          the S3 secret key.
        displayName: Secret Access Key Secret Key Ref
        path: s3.secretAccessKeySecretKeyRef
      - description: SessionTokenSecretKeyRef is a reference to a Secret key containing
          the S3 session token.
        displayName: Session Token Secret Key Ref
        path: s3.sessionTokenSecretKeyRef
      - description: TLS provides the configuration required to establish TLS connections
          with S3.
        displayName: TLS
        path: s3.tls
      - description: CASecretKeyRef is a reference to a Secret key containing a CA
          bundle in PEM format used to establish TLS connections with S3. By default,
          the system trust chain will be used, but you can use this field to add more
          CAs to the bundle.
        displayName: CASecret Key Ref
        path: s3.tls.caSecretKeyRef
      - description: Enabled is a flag to enable TLS.
        displayName: Enabled
        path: s3.tls.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: securityContext
      - description: ServiceAccountName is the name of the ServiceAccount to be used
          by the Pods.
        displayName: Service Account Name
        path: serviceAccountName
      - description: TargetRecoveryTime is a RFC3339 (1970-01-01T00:00:00Z) date and
          time that defines the point in time recovery objective. It is used to determine
          the closest restoration source in time.
        displayName: Target Recovery Time
        path: targetRecoveryTime
      - description: Tolerations to be used in the Pod.
        displayName: Tolerations
        path: tolerations
      - description: Volume is a Kubernetes Volume object that contains a backup.
        displayName: Volume
        path: volume
      statusDescriptors:
      - description: Conditions for the Restore object.
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1alpha1
    - description: SqlJob is the Schema for the sqljobs API. It is used to run sql
        scripts as jobs.
      displayName: Sql Job
      kind: SqlJob
      name: sqljobs.k8s.mariadb.com
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: CronJob
        name: ""
        version: v1
      - kind: Job
        name: ""
        version: v1
      - kind: ServiceAccount
        name: ""
        version: v1
      - kind: SqlJob
        name: ""
        version: v1alpha1
      specDescriptors:
      - description: Affinity to be used in the Pod.
        displayName: Affinity
        path: affinity
      - description: AntiAffinityEnabled configures PodAntiAffinity so each Pod is
          scheduled in a different Node, enabling HA. Make sure you have at least
          as many Nodes available as the replicas to not end up with unscheduled Pods.
        displayName: Anti Affinity Enabled
        path: affinity.antiAffinityEnabled
      - description: Args to be used in the Container.
        displayName: Args
        path: args
      - description: BackoffLimit defines the maximum number of attempts to successfully
          execute a SqlJob.
        displayName: Backoff Limit
        path: backoffLimit
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Username to be used when executing the SqlJob.
        displayName: Database
        path: database
      - description: DependsOn defines dependencies with other SqlJob objectecs.
        displayName: Depends On
        path: dependsOn
      - description: ImagePullSecrets is the list of pull Secrets to be used to pull
          the image.
        displayName: Image Pull Secrets
        path: imagePullSecrets
      - description: InheritMetadata defines the metadata to be inherited by children
          resources.
        displayName: Inherit Metadata
        path: inheritMetadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: inheritMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: inheritMetadata.labels
      - description: MariaDBRef is a reference to a MariaDB object.
        displayName: Maria DBRef
        path: mariaDbRef
      - description: WaitForIt indicates whether the controller using this reference
          should wait for MariaDB to be ready.
        displayName: Wait For It
        path: mariaDbRef.waitForIt
      - description: NodeSelector to be used in the Pod.
        displayName: Node Selector
        path: nodeSelector
      - description: UserPasswordSecretKeyRef is a reference to the impersonated user's
          password to be used when executing the SqlJob.
        displayName: Password Secret Key Ref
        path: passwordSecretKeyRef
      - description: PodMetadata defines extra metadata for the Pod.
        displayName: Pod Metadata
        path: podMetadata
      - description: Annotations to be added to children resources.
        displayName: Annotations
        path: podMetadata.annotations
      - description: Labels to be added to children resources.
        displayName: Labels
        path: podMetadata.labels
      - description: SecurityContext holds pod-level security attributes and common
          container settings.
        displayName: Pod Security Context
        path: podSecurityContext
      - description: PriorityClassName to be used in the Pod.
        displayName: Priority Class Name
        path: priorityClassName
      - description: Resouces describes the compute resource requirements.
        displayName: Resources
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: RestartPolicy to be added to the SqlJob Pod.
        displayName: Restart Policy
        path: restartPolicy
      - description: Schedule defines when the SqlJob will be executed.
        displayName: Schedule
        path: schedule
      - description: Cron is a cron expression that defines the schedule.
        displayName: Cron
        path: schedule.cron
      - description: Suspend defines whether the schedule is active or not.
        displayName: Suspend
        path: schedule.suspend
      - description: SecurityContext holds security configuration that will be applied
          to a container.
        displayName: Security Context
        path: securityContext
      - description: ServiceAccountName is the name of the ServiceAccount to be used
          by the Pods.
        displayName: Service Account Name
        path: serviceAccountName
      - description: Sql is the script to be executed by the SqlJob.
        displayName: Sql
        path: sql
      - description: SqlConfigMapKeyRef is a reference to a ConfigMap containing the
          Sql script. It is defaulted to a ConfigMap with the contents of the Sql
          field.
        displayName: Sql Config Map Key Ref
        path: sqlConfigMapKeyRef
      - description: Tolerations to be used in the Pod.
        displayName: Tolerations
        path: tolerations
      - description: Username to be impersonated when executing the SqlJob.
        displayName: Username
        path: username
      statusDescriptors:
      - description: Conditions for the SqlJob object.
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1alpha1
    - description: User is the Schema for the users API.  It is used to define grants
        as if you were running a 'CREATE USER' statement.
      displayName: User
      kind: User
      name: users.k8s.mariadb.com
      resources:
      - kind: User
        name: ""
        version: v1alpha1
      specDescriptors:
      - description: Host related to the User.
        displayName: Host
        path: host
      - description: MariaDBRef is a reference to a MariaDB object.
        displayName: Maria DBRef
        path: mariaDbRef
      - description: WaitForIt indicates whether the controller using this reference
          should wait for MariaDB to be ready.
        displayName: Wait For It
        path: mariaDbRef.waitForIt
      - description: MaxUserConnections defines the maximum number of connections
          that the User can establish.
        displayName: Max User Connections
        path: maxUserConnections
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Name overrides the default name provided by metadata.name.
        displayName: Name
        path: name
      - description: PasswordSecretKeyRef is a reference to the password to be used
          by the User. If not provided, the account will be locked and the password
          will expire.
        displayName: Password Secret Key Ref
        path: passwordSecretKeyRef
      - description: RequeueInterval is used to perform requeue reconciliations.
        displayName: Requeue Interval
        path: requeueInterval
      - description: RetryInterval is the interval used to perform retries.
        displayName: Retry Interval
        path: retryInterval
      statusDescriptors:
      - description: Conditions for the User object.
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1alpha1
  description: Run and operate MariaDB Enterprise in OpenShift
  displayName: MariaDB Operator Enterprise
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      deployments: null
    strategy: ""
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - mariadb
  - mysql
  - operator
  - mariadb-operator
  - database
  - maxscale
  links:
  - name: MariaDB
    url: https://mariadb.com/
  - name: Documentation
    url: https://mariadb.com/kb/en/documentation/
  maintainers:
  - email: martin.montes@mariadb.com
    name: Martin Montes
  maturity: alpha
  minKubeVersion: 1.16.0
  provider:
    name: MariaDB Corporation
  version: 0.0.0
