name: CI

on:
  push:
    branches:
      - main
  pull_request: {}

env:
  GOLANGCI_VERSION: "v1.60.1"

jobs:
  detect-noop:
    name: Detect noop
    runs-on: ubuntu-latest
    outputs:
      noop: ${{ steps.noop.outputs.should_skip }}
    steps:
      - name: Detect no-op changes
        id: noop
        uses: fkirc/skip-duplicate-actions@v5.3.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          paths_ignore: '["*.md","**.md.gotmpl","examples/**"]'
          concurrent_skipping: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: detect-noop
    if: ${{ needs.detect-noop.outputs.noop != 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: GolangCI Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_VERSION }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: detect-noop
    if: ${{ needs.detect-noop.outputs.noop != 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Build
        run: make build

      - name: Build Docker
        run: make docker-build

  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: detect-noop
    if: ${{ needs.detect-noop.outputs.noop != 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Test
        run: |
          make helm-crds
          make test

  integration-test:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: detect-noop
    if: ${{ needs.detect-noop.outputs.noop != 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Cluster
        run: |
          make cluster
          make install
          make install-minio
          make install-cert-manager
          make net

      - name: Test
        run: make test-int

  artifacts:
    name: Artifacts
    runs-on: ubuntu-latest
    needs: detect-noop
    if: ${{ needs.detect-noop.outputs.noop != 'true' }}
    env:
      CRD_FILE: deploy/charts/mariadb-operator-crds/templates/crds.yaml
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate
        run: make gen

      - name: Check diff
        uses: mmontes11/diff-porcelain@v0.0.1
        with:
          message: Generated artifacts are not up to date. Run 'make gen' and commit the changes.

      - name: Verify CRD size
        shell: bash
        run: |
          crd_file="$CRD_FILE"
          max_size=$((900 * 1024))
          crd_size=$(stat -c%s "$crd_file")

          echo "Current CRD size: $((crd_size / 1024)) KB"

          if [ "$crd_size" -ge "$max_size" ]; then
            echo "Error: CRDs exceed 900KB (current size: $((crd_size / 1024)) KB)"
            exit 1
          fi