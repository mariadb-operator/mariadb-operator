name: OLM

on:
  push:
    tags:
      - "olm-*"

jobs:
  olm:
    name: OLM
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --force --tags

      - name: Version
        id: version
        run: |
          function get_version() {
            echo "$1" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+'
          }
          TAG=${GITHUB_REF/refs\/tags\//}
          VERSION=$(get_version "$TAG")
          MAKE_VERSION=$(get_version $(make version))
          
          if [ "$VERSION" != "$MAKE_VERSION" ]; then
            echo "Tag('$TAG') with version('$VERSION') and Makefile version('$MAKE_VERSION') don't match!"
            exit 1;
          fi

          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "TAG=${TAG}" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Login GAR
        uses: docker/login-action@v3
        with:
          registry: us-central1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY }}

      - name: Publish bundle image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: ./Dockerfile.bundle
          tags: |
            mariadb/mariadb-operator-enterprise-bundle:v${{ steps.version.outputs.VERSION }}
            mariadb/mariadb-operator-enterprise-bundle:latest
          labels: |
            org.opencontainers.image.title=MariaDB Operator Enterprise bundle
            org.opencontainers.image.description=Run and operate MariaDB Enterprise in OpenShift
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.version.outputs.VERSION }}
            org.opencontainers.image.created=${{ steps.version.outputs.BUILD_DATE }}
  
      - name: Create cluster for scorecard tests
        run: make cluster

      - name: Regenerate bundle with new digests
        run: |
          make bundle
          make bundle-scorecard
        # TODO: re-enable when the multi-arch operand images are available
        # env:
        #   BUNDLE_VALIDATE_FLAGS: "--select-optional suite=operatorframework --select-optional name=multiarch"

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Updated OLM bundle (${{ steps.version.outputs.VERSION }})
          commit_author: Martin Montes <martin11lrx@gmail.com
          branch: olm-${{ steps.version.outputs.VERSION }}-update-bundle
          push_options: '--force'
          create_branch: true

      - name: Create pull request
        run: |
          gh pr create -B ${{ github.event.repository.default_branch }} -H olm-${{ steps.version.outputs.VERSION }}-update-bundle --title 'Updated OLM bundle (${{ steps.version.outputs.VERSION }})' --body 'Automatically created by GitHub actions afer releasing OLM bundle.'
          gh pr merge olm-${{ steps.version.outputs.VERSION }}-update-bundle --auto --rebase --delete-branch  
        env:
          GITHUB_TOKEN: "${{ secrets.GHA_TOKEN }}"

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ steps.version.outputs.TAG }}"
          files: bundle/manifests/mariadb-operator-enterprise.clusterserviceversion.yaml
        env:
          GITHUB_TOKEN: "${{ secrets.GHA_TOKEN }}"