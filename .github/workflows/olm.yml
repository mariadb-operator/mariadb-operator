name: OLM

on:
  push:
    tags:
      - "olm-*"

jobs:
  olm:
    name: OLM
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --force --tags

      - name: Version
        id: version
        run: |
          function get_version() {
            echo "$1" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+'
          }
          TAG=${GITHUB_REF/refs\/tags\//}
          VERSION=$(get_version "$TAG")
          CSV_VERSION=$(get_version $(yq -e '.metadata.name' bundle/manifests/mariadb-operator-enterprise.clusterserviceversion.yaml))
          MAKE_VERSION=$(get_version $(make version))
          
          if [ "$VERSION" != "$CSV_VERSION" ]; then
            echo "Tag('$VERSION') and ClusterServiceVersion('$CSV_VERSION') versions don't match!"
            exit 1;
          fi
          if [ "$VERSION" != "$MAKE_VERSION" ]; then
            echo "Tag('$VERSION') and Makefile('$MAKE_VERSION') versions don't match!"
            exit 1;
          fi

          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "TAG=${TAG}" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Login to container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish multi-arch operator image
        uses: docker/build-push-action@v2
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile.ubi
          platforms: linux/amd64
          # TODO: uncomment after testing
          # platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          tags: |
            mariadb/mariadb-operator-enterprise:${{ steps.version.outputs.VERSION }}
            mariadb/mariadb-operator-enterprise:latest
          labels: |
            org.opencontainers.image.title=MariaDB Operator Enterprise
            org.opencontainers.image.description=Run and operate MariaDB Enterprise in OpenShift
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.version.outputs.VERSION }}
            org.opencontainers.image.created=${{ steps.version.outputs.BUILD_DATE }}

      - name: Publish bundle image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./bundle.Dockerfile
          tags: |
            mariadb/mariadb-operator-enterprise-bundle:${{ steps.version.outputs.VERSION }}
            mariadb/mariadb-operator-enterprise-bundle:latest
          labels: |
            org.opencontainers.image.title=MariaDB Operator Enterprise bundle
            org.opencontainers.image.description=Run and operate MariaDB Enterprise in OpenShift
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.version.outputs.VERSION }}
            org.opencontainers.image.created=${{ steps.version.outputs.BUILD_DATE }}

      - name: Regenerate bundle with new digests
        run: make bundle

      - name: Commit bundle changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Updated bundle (${{ steps.version.outputs.VERSION }})

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{ steps.version.outputs.TAG }}"
          files: bundle/manifests/mariadb-operator-enterprise.clusterserviceversion.yaml
        env:
          GITHUB_TOKEN: "${{ secrets.GHA_TOKEN }}"